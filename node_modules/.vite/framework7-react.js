import {
  require_react
} from "./chunk-EGHP47QB.js";
import {
  core_class_default
} from "./chunk-54MDMY5K.js";
import {
  framework7_lite_default
} from "./chunk-FLPKPSQS.js";
import "./chunk-X7SRYRCC.js";
import {
  __toESM
} from "./chunk-PPJX3ILF.js";

// node_modules/framework7-react/esm/shared/utils.js
function noUndefinedProps(obj) {
  var o = {};
  Object.keys(obj).forEach(function(key) {
    if (typeof obj[key] !== "undefined")
      o[key] = obj[key];
  });
  return o;
}
function isStringProp(val) {
  return typeof val === "string" && val !== "";
}
function isObject(o) {
  return typeof o === "object" && o !== null && o.constructor && o.constructor === Object;
}
function now() {
  return Date.now();
}
function extend() {
  var deep = true;
  var to;
  var from;
  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  if (typeof args[0] === "boolean") {
    deep = args[0];
    to = args[1];
    args.splice(0, 2);
    from = args;
  } else {
    to = args[0];
    args.splice(0, 1);
    from = args;
  }
  for (var i = 0; i < from.length; i += 1) {
    var nextSource = args[i];
    if (nextSource !== void 0 && nextSource !== null) {
      var keysArray = Object.keys(Object(nextSource));
      for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {
        var nextKey = keysArray[nextIndex];
        var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);
        if (desc !== void 0 && desc.enumerable) {
          if (!deep) {
            to[nextKey] = nextSource[nextKey];
          } else if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
            extend(to[nextKey], nextSource[nextKey]);
          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {
            to[nextKey] = {};
            extend(to[nextKey], nextSource[nextKey]);
          } else {
            to[nextKey] = nextSource[nextKey];
          }
        }
      }
    }
  }
  return to;
}
function flattenArray() {
  var arr = [];
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  args.forEach(function(arg) {
    if (Array.isArray(arg))
      arr.push.apply(arr, flattenArray.apply(void 0, arg));
    else
      arr.push(arg);
  });
  return arr;
}
function classNames() {
  var classes = [];
  for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
    args[_key3] = arguments[_key3];
  }
  args.forEach(function(arg) {
    if (typeof arg === "object" && arg.constructor === Object) {
      Object.keys(arg).forEach(function(key) {
        if (arg[key])
          classes.push(key);
      });
    } else if (arg)
      classes.push(arg);
  });
  var uniqueClasses2 = [];
  classes.forEach(function(c) {
    if (uniqueClasses2.indexOf(c) < 0)
      uniqueClasses2.push(c);
  });
  return uniqueClasses2.join(" ");
}
function getSlots(props) {
  if (props === void 0) {
    props = {};
  }
  var slots = {};
  if (!props)
    return slots;
  var children = props.children;
  if (!children || children.length === 0) {
    return slots;
  }
  function addChildToSlot(name2, child) {
    if (!slots[name2])
      slots[name2] = [];
    slots[name2].push(child);
  }
  if (Array.isArray(children)) {
    children.forEach(function(child) {
      if (!child)
        return;
      var slotName2 = child.props && child.props.slot || "default";
      addChildToSlot(slotName2, child);
    });
  } else {
    var slotName = "default";
    if (children.props && children.props.slot)
      slotName = children.props.slot;
    addChildToSlot(slotName, children);
  }
  return slots;
}
function emit(props, events) {
  for (var _len4 = arguments.length, args = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {
    args[_key4 - 2] = arguments[_key4];
  }
  if (!events || !events.trim().length || typeof events !== "string")
    return;
  events.trim().split(" ").forEach(function(event) {
    var eventName = (event || "").trim();
    if (!eventName)
      return;
    eventName = eventName.charAt(0).toUpperCase() + eventName.slice(1);
    var propName = "on" + eventName;
    if (props[propName])
      props[propName].apply(props, args);
  });
}
function getExtraAttrs(props) {
  if (props === void 0) {
    props = {};
  }
  var extraAttrs = {};
  Object.keys(props).forEach(function(key) {
    if (key.indexOf("data-") === 0 || key.indexOf("aria-") === 0 || key === "role") {
      extraAttrs[key] = props[key];
    }
  });
  return extraAttrs;
}
var routerIdCounter = 0;
var routerComponentIdCounter = 0;
function unsetRouterIds() {
  routerIdCounter = 0;
  routerComponentIdCounter = 0;
}
function getRouterId() {
  routerIdCounter += 1;
  return now() + "_" + routerIdCounter;
}
function getComponentId() {
  routerComponentIdCounter += 1;
  return now() + "_" + routerComponentIdCounter;
}

// node_modules/framework7-react/esm/shared/f7.js
var f7;
var f7events;
var theme = {};
var f7routers = {
  views: [],
  tabs: [],
  modals: null
};
var setTheme = function setTheme2() {
  if (!f7)
    return;
  theme.ios = f7.theme === "ios";
  theme.md = f7.theme === "md";
  theme.aurora = f7.theme === "aurora";
};
var cleanup = function cleanup2() {
  unsetRouterIds();
  delete theme.ios;
  delete theme.md;
  delete theme.aurora;
  f7routers.views = [];
  f7routers.tabs = [];
  f7routers.modals = null;
};
var f7initEvents = function f7initEvents2() {
  f7events = new framework7_lite_default.Events();
};
var f7init = function f7init2(rootEl, params, init) {
  if (params === void 0) {
    params = {};
  }
  if (init === void 0) {
    init = true;
  }
  var f7Params = extend({}, params, {
    el: rootEl,
    init
  });
  if (typeof params.store !== "undefined")
    f7Params.store = params.store;
  if (!f7Params.routes)
    f7Params.routes = [];
  if (f7Params.userAgent && (f7Params.theme === "auto" || !f7Params.theme)) {
    var device = framework7_lite_default.getDevice({
      userAgent: f7Params.userAgent
    }, true);
    theme.ios = !!device.ios;
    theme.aurora = device.desktop && device.electron;
    theme.md = !theme.ios && !theme.aurora;
  }
  if (f7 && typeof window !== "undefined")
    return;
  if (typeof window === "undefined")
    cleanup();
  var instance = new framework7_lite_default(f7Params);
  f7 = instance;
  setTheme();
  if (instance.initialized) {
    f7 = instance;
    f7events.emit("ready", f7);
  } else {
    instance.on("init", function() {
      f7 = instance;
      f7events.emit("ready", f7);
    });
  }
};
var f7ready = function f7ready2(callback) {
  if (!callback)
    return;
  if (f7 && f7.initialized)
    callback(f7);
  else {
    f7events.once("ready", callback);
  }
};

// node_modules/framework7-react/esm/shared/components-router.js
var getChildrenArray = function getChildrenArray2(el) {
  var arr = [];
  for (var i = 0; i < el.children.length; i += 1) {
    arr.push(el.children[i]);
  }
  return arr;
};
var hasSameChildren = function hasSameChildren2(childrenBefore, childrenAfter) {
  if (childrenBefore.length !== childrenAfter.length)
    return false;
  var set = new Set([].concat(childrenBefore, childrenAfter));
  if (set.size === childrenBefore.length)
    return true;
  return false;
};
var components_router_default = {
  proto: {
    pageComponentLoader: function pageComponentLoader(_ref) {
      var routerEl = _ref.routerEl, component = _ref.component, options = _ref.options, resolve = _ref.resolve, reject = _ref.reject;
      var router = this;
      var routerId = router.id;
      var el = routerEl;
      var viewRouter;
      f7routers.views.forEach(function(data) {
        if (data.el && data.el === routerEl || data.routerId && data.routerId === routerId) {
          viewRouter = data;
        }
      });
      if (!viewRouter) {
        reject();
        return;
      }
      var pageData = {
        component,
        id: getComponentId(),
        props: extend({
          f7route: options.route,
          f7router: router
        }, options.route.params, options.props || {})
      };
      var resolved;
      var childrenBefore = getChildrenArray(el);
      function onDidUpdate(componentRouterData) {
        if (componentRouterData !== viewRouter || resolved)
          return;
        var childrenAfter = getChildrenArray(el);
        if (hasSameChildren(childrenBefore, childrenAfter))
          return;
        f7events.off("viewRouterDidUpdate", onDidUpdate);
        var pageEl = el.children[el.children.length - 1];
        pageData.el = pageEl;
        resolve(pageEl);
        resolved = true;
      }
      f7events.on("viewRouterDidUpdate", onDidUpdate);
      viewRouter.pages.push(pageData);
      viewRouter.setPages(viewRouter.pages);
    },
    removePage: function removePage($pageEl) {
      if (!$pageEl)
        return;
      var router = this;
      var f7Page;
      if ("length" in $pageEl && $pageEl[0])
        f7Page = $pageEl[0].f7Page;
      else
        f7Page = $pageEl.f7Page;
      if (f7Page && f7Page.route && f7Page.route.route && f7Page.route.route.keepAlive) {
        router.app.$($pageEl).remove();
        return;
      }
      var viewRouter;
      f7routers.views.forEach(function(data) {
        if (data.el && data.el === router.el) {
          viewRouter = data;
        }
      });
      var pageEl;
      if ("length" in $pageEl) {
        if ($pageEl.length === 0)
          return;
        pageEl = $pageEl[0];
      } else {
        pageEl = $pageEl;
      }
      if (!pageEl)
        return;
      var pageComponentFound;
      viewRouter.pages.forEach(function(page, index) {
        if (page.el === pageEl) {
          pageComponentFound = true;
          viewRouter.pages.splice(index, 1);
          viewRouter.setPages(viewRouter.pages);
        }
      });
      if (!pageComponentFound) {
        pageEl.parentNode.removeChild(pageEl);
      }
    },
    tabComponentLoader: function tabComponentLoader(_temp) {
      var _ref2 = _temp === void 0 ? {} : _temp, tabEl = _ref2.tabEl, component = _ref2.component, options = _ref2.options, resolve = _ref2.resolve, reject = _ref2.reject;
      var router = this;
      if (!tabEl)
        reject();
      var tabRouter;
      f7routers.tabs.forEach(function(tabData) {
        if (tabData.el && tabData.el === tabEl) {
          tabRouter = tabData;
        }
      });
      if (!tabRouter) {
        reject();
        return;
      }
      var id = getComponentId();
      var tabContent = {
        id,
        component,
        props: extend({
          f7route: options.route,
          f7router: router
        }, options.route.route && options.route.route.tab && options.route.route.tab.options && options.route.route.tab.options.props || {}, options.route.params, options.props || {})
      };
      var resolved;
      function onDidUpdate(componentRouterData) {
        if (componentRouterData !== tabRouter || resolved)
          return;
        f7events.off("tabRouterDidUpdate", onDidUpdate);
        var tabContentEl = tabEl.children[0];
        resolve(tabContentEl);
        resolved = true;
      }
      f7events.on("tabRouterDidUpdate", onDidUpdate);
      tabRouter.setTabContent(tabContent);
    },
    removeTabContent: function removeTabContent(tabEl) {
      if (!tabEl)
        return;
      var tabRouter;
      f7routers.tabs.forEach(function(tabData) {
        if (tabData.el && tabData.el === tabEl) {
          tabRouter = tabData;
        }
      });
      if (!tabRouter) {
        tabEl.innerHTML = "";
        return;
      }
      tabRouter.setTabContent(null);
    },
    modalComponentLoader: function modalComponentLoader(_temp2) {
      var _ref3 = _temp2 === void 0 ? {} : _temp2, component = _ref3.component, options = _ref3.options, resolve = _ref3.resolve, reject = _ref3.reject;
      var router = this;
      var modalsRouter = f7routers.modals;
      if (!modalsRouter) {
        reject();
        return;
      }
      var modalData = {
        component,
        id: getComponentId(),
        props: extend({
          f7route: options.route,
          f7router: router
        }, options.route.params, options.props || {})
      };
      var resolved;
      function onDidUpdate() {
        if (resolved)
          return;
        f7events.off("modalsRouterDidUpdate", onDidUpdate);
        var modalEl = modalsRouter.el.children[modalsRouter.el.children.length - 1];
        modalData.el = modalEl;
        resolve(modalEl);
        resolved = true;
      }
      f7events.on("modalsRouterDidUpdate", onDidUpdate);
      modalsRouter.modals.push(modalData);
      modalsRouter.setModals(modalsRouter.modals);
    },
    removeModal: function removeModal(modalEl) {
      var modalsRouter = f7routers.modals;
      if (!modalsRouter)
        return;
      var modalDataToRemove;
      modalsRouter.modals.forEach(function(modalData) {
        if (modalData.el === modalEl)
          modalDataToRemove = modalData;
      });
      modalsRouter.modals.splice(modalsRouter.modals.indexOf(modalDataToRemove), 1);
      modalsRouter.setModals(modalsRouter.modals);
    }
  }
};

// node_modules/framework7-react/esm/shared/plugin.js
var Framework7React = {
  name: "reactPlugin",
  installed: false,
  install: function install(params) {
    if (params === void 0) {
      params = {};
    }
    if (Framework7React.installed)
      return;
    Framework7React.installed = true;
    f7initEvents();
    var _params = params, paramsTheme = _params.theme, userAgent = _params.userAgent;
    if (paramsTheme === "md")
      theme.md = true;
    if (paramsTheme === "ios")
      theme.ios = true;
    if (paramsTheme === "aurora")
      theme.aurora = true;
    var needThemeCalc = typeof window === "undefined" ? !!userAgent : true;
    if (needThemeCalc && (!paramsTheme || paramsTheme === "auto")) {
      var device = framework7_lite_default.getDevice({
        userAgent
      }, true);
      theme.ios = !!device.ios;
      theme.aurora = device.desktop && device.electron;
      theme.md = !theme.ios && !theme.aurora;
    }
    f7ready(function() {
      setTheme();
    });
    framework7_lite_default.Router.use(components_router_default);
  }
};
var plugin_default = Framework7React;

// node_modules/framework7-react/esm/shared/use-store.js
var import_react = __toESM(require_react());
var useStore = function useStore2() {
  var assignedGetters = (0, import_react.useRef)({});
  var store = arguments.length <= 0 ? void 0 : arguments[0];
  var getter = arguments.length <= 1 ? void 0 : arguments[1];
  if (arguments.length === 1) {
    store = f7.store;
    getter = arguments.length <= 0 ? void 0 : arguments[0];
  }
  var obj = store._gettersPlain[getter];
  var _useState = (0, import_react.useState)(obj.value), value = _useState[0], setValue = _useState[1];
  function onUpdated(newValue) {
    setValue(newValue);
  }
  if (!assignedGetters.current[getter]) {
    obj.onUpdated(onUpdated);
    assignedGetters.current[getter] = true;
  }
  (0, import_react.useEffect)(function() {
    return function() {
      store.__removeCallback(onUpdated);
    };
  }, []);
  return value;
};

// node_modules/framework7-react/esm/components/accordion-content.js
var import_react2 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/mixins.js
function colorClasses(props) {
  var _ref;
  var color = props.color, colorTheme = props.colorTheme, textColor = props.textColor, bgColor = props.bgColor, borderColor = props.borderColor, rippleColor = props.rippleColor, themeDark = props.themeDark;
  return _ref = {
    "theme-dark": themeDark
  }, _ref["color-" + color] = color, _ref["color-theme-" + colorTheme] = colorTheme, _ref["text-color-" + textColor] = textColor, _ref["bg-color-" + bgColor] = bgColor, _ref["border-color-" + borderColor] = borderColor, _ref["ripple-color-" + rippleColor] = rippleColor, _ref;
}
function routerAttrs(props) {
  var force = props.force, reloadCurrent = props.reloadCurrent, reloadPrevious = props.reloadPrevious, reloadAll = props.reloadAll, reloadDetail = props.reloadDetail, animate = props.animate, ignoreCache = props.ignoreCache, routeTabId = props.routeTabId, view = props.view, transition = props.transition, openIn = props.openIn;
  var dataAnimate;
  if ("animate" in props && typeof animate !== "undefined") {
    dataAnimate = animate.toString();
  }
  var dataReloadDetail;
  if ("reloadDetail" in props && typeof reloadDetail !== "undefined") {
    dataReloadDetail = reloadDetail.toString();
  }
  return {
    "data-force": force || void 0,
    "data-reload-current": reloadCurrent || void 0,
    "data-reload-all": reloadAll || void 0,
    "data-reload-previous": reloadPrevious || void 0,
    "data-reload-detail": dataReloadDetail,
    "data-animate": dataAnimate,
    "data-ignore-cache": ignoreCache || void 0,
    "data-route-tab-id": routeTabId || void 0,
    "data-view": isStringProp(view) ? view : void 0,
    "data-transition": isStringProp(transition) ? transition : void 0,
    "data-open-in": isStringProp(openIn) ? openIn : void 0
  };
}
function routerClasses(props) {
  var back = props.back, linkBack = props.linkBack, external = props.external, preventRouter = props.preventRouter;
  return {
    back: back || linkBack,
    external,
    "prevent-router": preventRouter
  };
}
function actionsAttrs(props) {
  var searchbarEnable = props.searchbarEnable, searchbarDisable = props.searchbarDisable, searchbarClear = props.searchbarClear, searchbarToggle = props.searchbarToggle, panelOpen = props.panelOpen, panelClose = props.panelClose, panelToggle = props.panelToggle, popupOpen = props.popupOpen, popupClose = props.popupClose, actionsOpen = props.actionsOpen, actionsClose = props.actionsClose, popoverOpen = props.popoverOpen, popoverClose = props.popoverClose, loginScreenOpen = props.loginScreenOpen, loginScreenClose = props.loginScreenClose, sheetOpen = props.sheetOpen, sheetClose = props.sheetClose, sortableEnable = props.sortableEnable, sortableDisable = props.sortableDisable, sortableToggle = props.sortableToggle, cardOpen = props.cardOpen, cardClose = props.cardClose;
  return {
    "data-searchbar": isStringProp(searchbarEnable) && searchbarEnable || isStringProp(searchbarDisable) && searchbarDisable || isStringProp(searchbarClear) && searchbarClear || isStringProp(searchbarToggle) && searchbarToggle || void 0,
    "data-panel": isStringProp(panelOpen) && panelOpen || isStringProp(panelClose) && panelClose || isStringProp(panelToggle) && panelToggle || void 0,
    "data-popup": isStringProp(popupOpen) && popupOpen || isStringProp(popupClose) && popupClose || void 0,
    "data-actions": isStringProp(actionsOpen) && actionsOpen || isStringProp(actionsClose) && actionsClose || void 0,
    "data-popover": isStringProp(popoverOpen) && popoverOpen || isStringProp(popoverClose) && popoverClose || void 0,
    "data-sheet": isStringProp(sheetOpen) && sheetOpen || isStringProp(sheetClose) && sheetClose || void 0,
    "data-login-screen": isStringProp(loginScreenOpen) && loginScreenOpen || isStringProp(loginScreenClose) && loginScreenClose || void 0,
    "data-sortable": isStringProp(sortableEnable) && sortableEnable || isStringProp(sortableDisable) && sortableDisable || isStringProp(sortableToggle) && sortableToggle || void 0,
    "data-card": isStringProp(cardOpen) && cardOpen || isStringProp(cardClose) && cardClose || void 0
  };
}
function actionsClasses(props) {
  var searchbarEnable = props.searchbarEnable, searchbarDisable = props.searchbarDisable, searchbarClear = props.searchbarClear, searchbarToggle = props.searchbarToggle, panelOpen = props.panelOpen, panelClose = props.panelClose, panelToggle = props.panelToggle, popupOpen = props.popupOpen, popupClose = props.popupClose, actionsClose = props.actionsClose, actionsOpen = props.actionsOpen, popoverOpen = props.popoverOpen, popoverClose = props.popoverClose, loginScreenOpen = props.loginScreenOpen, loginScreenClose = props.loginScreenClose, sheetOpen = props.sheetOpen, sheetClose = props.sheetClose, sortableEnable = props.sortableEnable, sortableDisable = props.sortableDisable, sortableToggle = props.sortableToggle, cardOpen = props.cardOpen, cardPreventOpen = props.cardPreventOpen, cardClose = props.cardClose, menuClose = props.menuClose;
  return {
    "searchbar-enable": searchbarEnable || searchbarEnable === "",
    "searchbar-disable": searchbarDisable || searchbarDisable === "",
    "searchbar-clear": searchbarClear || searchbarClear === "",
    "searchbar-toggle": searchbarToggle || searchbarToggle === "",
    "panel-close": panelClose || panelClose === "",
    "panel-open": panelOpen || panelOpen === "",
    "panel-toggle": panelToggle || panelToggle === "",
    "popup-close": popupClose || popupClose === "",
    "popup-open": popupOpen || popupOpen === "",
    "actions-close": actionsClose || actionsClose === "",
    "actions-open": actionsOpen || actionsOpen === "",
    "popover-close": popoverClose || popoverClose === "",
    "popover-open": popoverOpen || popoverOpen === "",
    "sheet-close": sheetClose || sheetClose === "",
    "sheet-open": sheetOpen || sheetOpen === "",
    "login-screen-close": loginScreenClose || loginScreenClose === "",
    "login-screen-open": loginScreenOpen || loginScreenOpen === "",
    "sortable-enable": sortableEnable || sortableEnable === "",
    "sortable-disable": sortableDisable || sortableDisable === "",
    "sortable-toggle": sortableToggle || sortableToggle === "",
    "card-close": cardClose || cardClose === "",
    "card-open": cardOpen || cardOpen === "",
    "card-prevent-open": cardPreventOpen || cardPreventOpen === "",
    "menu-close": menuClose || menuClose === ""
  };
}

// node_modules/framework7-react/esm/components/accordion-content.js
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var AccordionContent = (0, import_react2.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var elRef = (0, import_react2.useRef)(null);
  (0, import_react2.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var extraAttrs = getExtraAttrs(props);
  var classes = classNames(className, "accordion-item-content", colorClasses(props));
  return import_react2.default.createElement("div", _extends({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
AccordionContent.displayName = "f7-accordion-content";
var accordion_content_default = AccordionContent;

// node_modules/framework7-react/esm/components/accordion-item.js
var import_react4 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/use-isomorphic-layout-effect.js
var import_react3 = __toESM(require_react());
function useIsomorphicLayoutEffect(callback, deps) {
  if (typeof window === "undefined")
    return (0, import_react3.useEffect)(callback, deps);
  return (0, import_react3.useLayoutEffect)(callback, deps);
}

// node_modules/framework7-react/esm/components/accordion-item.js
function _extends2() {
  _extends2 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends2.apply(this, arguments);
}
var AccordionItem = (0, import_react4.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, opened = props.opened;
  var elRef = (0, import_react4.useRef)(null);
  (0, import_react4.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var onBeforeOpen = function onBeforeOpen2(el, prevent) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionBeforeOpen", prevent);
  };
  var onOpen = function onOpen2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionOpen");
  };
  var onOpened = function onOpened2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionOpened");
  };
  var onBeforeClose = function onBeforeClose2(el, prevent) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionBeforeClose", prevent);
  };
  var onClose = function onClose2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionClose");
  };
  var onClosed = function onClosed2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionClosed");
  };
  var attachEvents = function attachEvents2() {
    f7ready(function() {
      f7.on("accordionBeforeOpen", onBeforeOpen);
      f7.on("accordionOpen", onOpen);
      f7.on("accordionOpened", onOpened);
      f7.on("accordionBeforeClose", onBeforeClose);
      f7.on("accordionClose", onClose);
      f7.on("accordionClosed", onClosed);
    });
  };
  var detachEvents = function detachEvents2() {
    f7.off("accordionBeforeOpen", onBeforeOpen);
    f7.off("accordionOpen", onOpen);
    f7.off("accordionOpened", onOpened);
    f7.off("accordionBeforeClose", onBeforeClose);
    f7.off("accordionClose", onClose);
    f7.off("accordionClosed", onClosed);
  };
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var extraAttrs = getExtraAttrs(props);
  var classes = classNames(className, "accordion-item", {
    "accordion-item-opened": opened
  }, colorClasses(props));
  return import_react4.default.createElement("div", _extends2({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
AccordionItem.displayName = "f7-accordion-item";
var accordion_item_default = AccordionItem;

// node_modules/framework7-react/esm/components/accordion-toggle.js
var import_react5 = __toESM(require_react());
function _extends3() {
  _extends3 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends3.apply(this, arguments);
}
var AccordionToggle = (0, import_react5.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var elRef = (0, import_react5.useRef)(null);
  (0, import_react5.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var extraAttrs = getExtraAttrs(props);
  var classes = classNames(className, "accordion-item-toggle", colorClasses(props));
  return import_react5.default.createElement("div", _extends3({
    id,
    style,
    className: classes
  }, extraAttrs, {
    ref: elRef
  }), children);
});
AccordionToggle.displayName = "f7-accordion-toggle";
var accordion_toggle_default = AccordionToggle;

// node_modules/framework7-react/esm/components/accordion.js
var import_react6 = __toESM(require_react());
function _extends4() {
  _extends4 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends4.apply(this, arguments);
}
var Accordion = (0, import_react6.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, accordionOpposite = props.accordionOpposite, children = props.children;
  var elRef = (0, import_react6.useRef)(null);
  (0, import_react6.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var extraAttrs = getExtraAttrs(props);
  var classes = classNames(className, "accordion-list", accordionOpposite && "accordion-opposite", colorClasses(props));
  return import_react6.default.createElement("div", _extends4({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Accordion.displayName = "f7-accordion";
var accordion_default = Accordion;

// node_modules/framework7-react/esm/components/actions-button.js
var import_react7 = __toESM(require_react());
function _extends5() {
  _extends5 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends5.apply(this, arguments);
}
var ComponentName = (0, import_react7.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, bold = props.bold, _props$close = props.close, close = _props$close === void 0 ? true : _props$close;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react7.useRef)(null);
  (0, import_react7.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, {
    "actions-button": true,
    "actions-button-bold": bold
  }, colorClasses(props));
  var mediaEl;
  var slots = getSlots(props);
  if (slots.media && slots.media.length) {
    mediaEl = import_react7.default.createElement("div", {
      className: "actions-button-media"
    }, slots.media);
  }
  var onClick = function onClick2(e) {
    if (elRef.current && close && f7) {
      f7.actions.close(f7.$(elRef.current).parents(".actions-modal"));
    }
    emit(props, "click", e);
  };
  return import_react7.default.createElement("div", _extends5({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), mediaEl, import_react7.default.createElement("div", {
    className: "actions-button-text"
  }, slots.default));
});
ComponentName.displayName = "f7-actions-button";
var actions_button_default = ComponentName;

// node_modules/framework7-react/esm/components/actions-group.js
var import_react8 = __toESM(require_react());
function _extends6() {
  _extends6 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends6.apply(this, arguments);
}
var ActionsGroup = (0, import_react8.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react8.useRef)(null);
  (0, import_react8.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "actions-group", colorClasses(props));
  return import_react8.default.createElement("div", _extends6({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
ActionsGroup.displayName = "f7-actions-group";
var actions_group_default = ActionsGroup;

// node_modules/framework7-react/esm/components/actions-label.js
var import_react9 = __toESM(require_react());
function _extends7() {
  _extends7 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends7.apply(this, arguments);
}
var ActionsLabel = (0, import_react9.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, bold = props.bold;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react9.useRef)(null);
  (0, import_react9.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "actions-label", {
    "actions-button-bold": bold
  }, colorClasses(props));
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  return import_react9.default.createElement("div", _extends7({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), children);
});
ActionsLabel.displayName = "f7-actions-label";
var actions_label_default = ActionsLabel;

// node_modules/framework7-react/esm/components/actions.js
var import_react11 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/watch-prop.js
var import_react10 = __toESM(require_react());
var watchProp = function watchProp2(value, callback) {
  var valueRef = (0, import_react10.useRef)(value);
  useIsomorphicLayoutEffect(function() {
    if (value !== valueRef.current && callback) {
      callback(value, valueRef.current);
    }
    valueRef.current = value;
  }, [value]);
};

// node_modules/framework7-react/esm/shared/modal-state-classes.js
var modalStateClasses = function modalStateClasses2(_temp) {
  var _ref = _temp === void 0 ? {} : _temp, isOpened = _ref.isOpened, isClosing = _ref.isClosing;
  return {
    "modal-in": isOpened.current && !isClosing.current,
    "modal-out": isClosing.current
  };
};

// node_modules/framework7-react/esm/components/actions.js
function _extends8() {
  _extends8 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends8.apply(this, arguments);
}
var Actions = (0, import_react11.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, grid = props.grid, _props$opened = props.opened, opened = _props$opened === void 0 ? false : _props$opened, animate = props.animate;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react11.useRef)(null);
  var isOpened = (0, import_react11.useRef)(opened);
  var isClosing = (0, import_react11.useRef)(false);
  var _f7Actions = (0, import_react11.useRef)(null);
  var onOpen = function onOpen2(instance) {
    isOpened.current = true;
    isClosing.current = false;
    emit(props, "actionsOpen", instance);
  };
  var onOpened = function onOpened2(instance) {
    emit(props, "actionsOpened", instance);
  };
  var onClose = function onClose2(instance) {
    isOpened.current = false;
    isClosing.current = true;
    emit(props, "actionsClose", instance);
  };
  var onClosed = function onClosed2(instance) {
    isClosing.current = false;
    emit(props, "actionsClosed", instance);
  };
  (0, import_react11.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Actions: function f7Actions() {
        return _f7Actions.current;
      }
    };
  });
  watchProp(opened, function(value) {
    if (!_f7Actions.current)
      return;
    if (value) {
      _f7Actions.current.open();
    } else {
      _f7Actions.current.close();
    }
  });
  var modalEvents = function modalEvents2(method) {
    if (!_f7Actions.current)
      return;
    _f7Actions.current[method]("open", onOpen);
    _f7Actions.current[method]("opened", onOpened);
    _f7Actions.current[method]("close", onClose);
    _f7Actions.current[method]("closed", onClosed);
  };
  var onMount = function onMount2() {
    if (!elRef.current)
      return;
    var target = props.target, convertToPopover = props.convertToPopover, forceToPopover = props.forceToPopover, closeByBackdropClick = props.closeByBackdropClick, closeByOutsideClick = props.closeByOutsideClick, closeOnEscape = props.closeOnEscape, backdrop = props.backdrop, backdropEl = props.backdropEl, containerEl = props.containerEl;
    var params = {
      el: elRef.current,
      grid
    };
    if (target)
      params.targetEl = target;
    if ("convertToPopover" in props)
      params.convertToPopover = convertToPopover;
    if ("forceToPopover" in props)
      params.forceToPopover = forceToPopover;
    if ("backdrop" in props)
      params.backdrop = backdrop;
    if ("backdropEl" in props)
      params.backdropEl = backdropEl;
    if ("closeByBackdropClick" in props)
      params.closeByBackdropClick = closeByBackdropClick;
    if ("closeByOutsideClick" in props)
      params.closeByOutsideClick = closeByOutsideClick;
    if ("closeOnEscape" in props)
      params.closeOnEscape = closeOnEscape;
    if ("animate" in props)
      params.animate = animate;
    if ("containerEl" in props)
      params.containerEl = containerEl;
    f7ready(function() {
      _f7Actions.current = f7.actions.create(params);
      modalEvents("on");
      if (opened) {
        _f7Actions.current.open(false);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Actions.current)
      _f7Actions.current.destroy();
    _f7Actions.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    modalEvents("on");
    return function() {
      modalEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var classes = classNames(className, "actions-modal", {
    "actions-grid": grid
  }, modalStateClasses({
    isOpened,
    isClosing
  }), colorClasses(props));
  return import_react11.default.createElement("div", _extends8({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Actions.displayName = "f7-actions";
var actions_default = Actions;

// node_modules/framework7-react/esm/components/app.js
var import_react13 = __toESM(require_react());

// node_modules/framework7-react/esm/components/routable-modals.js
var import_react12 = __toESM(require_react());
function _extends9() {
  _extends9 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends9.apply(this, arguments);
}
var RoutableModals = (0, import_react12.forwardRef)(function(props, ref) {
  var _useState = (0, import_react12.useState)([]), modals = _useState[0], _setModals = _useState[1];
  var elRef = (0, import_react12.useRef)(null);
  var routerData = (0, import_react12.useRef)(null);
  (0, import_react12.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var onMount = function onMount2() {
    routerData.current = {
      modals,
      el: elRef.current,
      setModals: function setModals(newModals) {
        _setModals([].concat(newModals));
      }
    };
    f7routers.modals = routerData.current;
  };
  var onDestroy = function onDestroy2() {
    if (!routerData.current)
      return;
    f7routers.modals = null;
    routerData.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  useIsomorphicLayoutEffect(function() {
    if (!routerData.current || !f7)
      return;
    f7events.emit("modalsRouterDidUpdate", routerData.current);
  });
  return import_react12.default.createElement("div", {
    ref: elRef,
    className: "framework7-modals"
  }, modals.map(function(_ref) {
    var ModalComponent = _ref.component, modalId = _ref.id, modalProps = _ref.props;
    return import_react12.default.createElement(ModalComponent, _extends9({
      key: modalId
    }, modalProps));
  }));
});
RoutableModals.displayName = "f7-routable-modals";
var routable_modals_default = RoutableModals;

// node_modules/framework7-react/esm/components/app.js
function _extends10() {
  _extends10 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends10.apply(this, arguments);
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var App = (0, import_react13.forwardRef)(function(props, ref) {
  var className = props.className, style = props.style, children = props.children, rest = _objectWithoutPropertiesLoose(props, ["className", "style", "children"]);
  var extraAttrs = getExtraAttrs(props);
  var params = rest;
  var elRef = (0, import_react13.useRef)(null);
  (0, import_react13.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "framework7-root", colorClasses(props));
  if (!f7 || typeof window === "undefined") {
    f7init(elRef.current, params, false);
  }
  useIsomorphicLayoutEffect(function() {
    var parentEl = elRef.current && elRef.current.parentNode;
    if (typeof document !== "undefined" && parentEl && parentEl !== document.body && parentEl.parentNode === document.body) {
      parentEl.style.height = "100%";
    }
    if (f7) {
      f7.init(elRef.current);
      return;
    }
    f7init(elRef.current, params, true);
  }, []);
  return import_react13.default.createElement("div", _extends10({
    id: "framework7-root",
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children, import_react13.default.createElement(routable_modals_default, null));
});
App.displayName = "f7-app";
var app_default = App;

// node_modules/framework7-react/esm/components/appbar.js
var import_react14 = __toESM(require_react());
function _extends11() {
  _extends11 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends11.apply(this, arguments);
}
var Appbar = (0, import_react14.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$inner = props.inner, inner = _props$inner === void 0 ? true : _props$inner, innerClass = props.innerClass, innerClassName = props.innerClassName, noShadow = props.noShadow, noHairline = props.noHairline;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react14.useRef)(null);
  (0, import_react14.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var innerEl;
  if (inner) {
    innerEl = import_react14.default.createElement("div", {
      className: classNames("appbar-inner", innerClass, innerClassName)
    }, children);
  }
  var classes = classNames(className, "appbar", {
    "no-shadow": noShadow,
    "no-hairline": noHairline
  }, colorClasses(props));
  var slots = getSlots(props);
  return import_react14.default.createElement("div", _extends11({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), slots["before-inner"], innerEl || slots.default, slots["after-inner"]);
});
Appbar.displayName = "f7-appbar";
var appbar_default = Appbar;

// node_modules/framework7-react/esm/components/area-chart.js
var import_react15 = __toESM(require_react());
function _extends12() {
  _extends12 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends12.apply(this, arguments);
}
var AreaChart = (0, import_react15.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, _props$lineChart = props.lineChart, lineChart = _props$lineChart === void 0 ? false : _props$lineChart, _props$datasets = props.datasets, datasets = _props$datasets === void 0 ? [] : _props$datasets, _props$axis = props.axis, axis = _props$axis === void 0 ? false : _props$axis, _props$axisLabels = props.axisLabels, axisLabels = _props$axisLabels === void 0 ? [] : _props$axisLabels, _props$tooltip = props.tooltip, tooltip = _props$tooltip === void 0 ? false : _props$tooltip, _props$legend = props.legend, legend = _props$legend === void 0 ? false : _props$legend, _props$toggleDatasets = props.toggleDatasets, toggleDatasets = _props$toggleDatasets === void 0 ? false : _props$toggleDatasets, _props$width = props.width, width = _props$width === void 0 ? 640 : _props$width, _props$height = props.height, height = _props$height === void 0 ? 320 : _props$height, _props$maxAxisLabels = props.maxAxisLabels, maxAxisLabels = _props$maxAxisLabels === void 0 ? 8 : _props$maxAxisLabels, formatAxisLabelProp = props.formatAxisLabel, formatLegendLabelProp = props.formatLegendLabel, formatTooltipProp = props.formatTooltip, formatTooltipAxisLabel = props.formatTooltipAxisLabel, formatTooltipTotal = props.formatTooltipTotal, formatTooltipDataset = props.formatTooltipDataset, children = props.children;
  var _useState = (0, import_react15.useState)(null), currentIndex = _useState[0], setCurrentIndex = _useState[1];
  var previousIndex = (0, import_react15.useRef)(null);
  var _useState2 = (0, import_react15.useState)([]), hiddenDatasets = _useState2[0], setHiddenDatasets = _useState2[1];
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react15.useRef)(null);
  var svgElRef = (0, import_react15.useRef)(null);
  var f7Tooltip = (0, import_react15.useRef)(null);
  var linesOffsets = (0, import_react15.useRef)(null);
  (0, import_react15.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var getVisibleLegends = function getVisibleLegends2() {
    if (!maxAxisLabels || axisLabels.length <= maxAxisLabels)
      return axisLabels;
    var skipStep = Math.ceil(axisLabels.length / maxAxisLabels);
    var filtered = axisLabels.filter(function(label, index) {
      return index % skipStep === 0;
    });
    return filtered;
  };
  var getSummValues = function getSummValues2() {
    var summValues = [];
    datasets.filter(function(dataset, index) {
      return !hiddenDatasets.includes(index);
    }).forEach(function(_ref) {
      var values = _ref.values;
      values.forEach(function(value, valueIndex) {
        if (!summValues[valueIndex])
          summValues[valueIndex] = 0;
        summValues[valueIndex] += value;
      });
    });
    return summValues;
  };
  var getChartData = function getChartData2() {
    var data = [];
    if (!datasets.length) {
      return data;
    }
    var lastValues = datasets[0].values.map(function() {
      return 0;
    });
    var maxValue = 0;
    if (lineChart) {
      datasets.forEach(function(_ref2) {
        var values = _ref2.values;
        var datasetMaxValue = Math.max.apply(Math, values);
        if (datasetMaxValue > maxValue)
          maxValue = datasetMaxValue;
      });
    } else {
      maxValue = Math.max.apply(Math, getSummValues());
    }
    datasets.filter(function(dataset, index) {
      return !hiddenDatasets.includes(index);
    }).forEach(function(_ref3) {
      var label = _ref3.label, values = _ref3.values, color = _ref3.color;
      var points = values.map(function(originalValue, valueIndex) {
        lastValues[valueIndex] += originalValue;
        var value = lineChart ? originalValue : lastValues[valueIndex];
        var x = valueIndex / (values.length - 1) * width;
        var y = height - value / maxValue * height;
        if (lineChart) {
          return (valueIndex === 0 ? "M" : "L") + x + "," + y;
        }
        return x + " " + y;
      });
      if (!lineChart) {
        points.push(width + " " + height + " 0 " + height);
      }
      data.push({
        label,
        points: points.join(" "),
        color
      });
    });
    return data.reverse();
  };
  var getVerticalLines = function getVerticalLines2() {
    var lines = [];
    if (!datasets.length) {
      return lines;
    }
    var values = datasets[0].values;
    values.forEach(function(value, valueIndex) {
      var x = valueIndex / (values.length - 1) * width;
      lines.push(x);
    });
    return lines;
  };
  var toggleDataset = function toggleDataset2(index) {
    if (!toggleDatasets)
      return;
    if (hiddenDatasets.includes(index)) {
      hiddenDatasets.splice(hiddenDatasets.indexOf(index), 1);
    } else {
      hiddenDatasets.push(index);
    }
    setHiddenDatasets([].concat(hiddenDatasets));
  };
  var formatAxisLabel = function formatAxisLabel2(label) {
    if (formatAxisLabelProp)
      return formatAxisLabelProp(label);
    return label;
  };
  var formatLegendLabel = function formatLegendLabel2(label) {
    if (formatLegendLabelProp)
      return formatLegendLabelProp(label);
    return label;
  };
  var calcLinesOffsets = function calcLinesOffsets2() {
    var lines = svgElRef.current.querySelectorAll("line");
    linesOffsets.current = [];
    for (var i = 0; i < lines.length; i += 1) {
      linesOffsets.current.push(lines[i].getBoundingClientRect().left);
    }
  };
  var formatTooltip = function formatTooltip2() {
    if (currentIndex === null)
      return "";
    var total = 0;
    var currentValues = datasets.filter(function(dataset, index) {
      return !hiddenDatasets.includes(index);
    }).map(function(dataset) {
      return {
        color: dataset.color,
        label: dataset.label,
        value: dataset.values[currentIndex]
      };
    });
    currentValues.forEach(function(dataset) {
      total += dataset.value;
    });
    if (formatTooltipProp) {
      return formatTooltipProp({
        index: currentIndex,
        total,
        datasets: currentValues
      });
    }
    var labelText = formatTooltipAxisLabel ? formatTooltipAxisLabel(axisLabels[currentIndex]) : formatAxisLabel(axisLabels[currentIndex]);
    if (!labelText)
      labelText = "";
    var totalText = formatTooltipTotal ? formatTooltipTotal(total) : total;
    var datasetsText = currentValues.length > 0 ? '\n      <ul class="area-chart-tooltip-list">\n        ' + currentValues.map(function(_ref4) {
      var label = _ref4.label, color = _ref4.color, value = _ref4.value;
      var valueText = formatTooltipDataset ? formatTooltipDataset(label, value, color) : label + ": " + value;
      return '\n              <li><span style="background-color: ' + color + ';"></span>' + valueText + "</li>\n            ";
    }).join("") + "\n      </ul>" : "";
    return '\n      <div class="area-chart-tooltip-label">' + labelText + '</div>\n      <div class="area-chart-tooltip-total">' + totalText + "</div>\n      " + datasetsText + "\n    ";
  };
  var setTooltip = function setTooltip2() {
    if (!tooltip)
      return;
    var hasVisibleDataSets = datasets.filter(function(dataset, index) {
      return !hiddenDatasets.includes(index);
    }).length > 0;
    if (!hasVisibleDataSets) {
      if (f7Tooltip.current && f7Tooltip.current.hide)
        f7Tooltip.current.hide();
      return;
    }
    if (currentIndex !== null && !f7Tooltip.current) {
      f7Tooltip.current = f7.tooltip.create({
        trigger: "manual",
        containerEl: elRef.current,
        targetEl: svgElRef.current.querySelector('line[data-index="' + currentIndex + '"]'),
        text: formatTooltip(),
        cssClass: "area-chart-tooltip"
      });
      if (f7Tooltip.current && f7Tooltip.current.show) {
        f7Tooltip.current.show();
      }
      return;
    }
    if (!f7Tooltip.current || !f7Tooltip.current.hide || !f7Tooltip.current.show) {
      return;
    }
    if (currentIndex !== null) {
      f7Tooltip.current.setText(formatTooltip());
      f7Tooltip.current.setTargetEl(svgElRef.current.querySelector('line[data-index="' + currentIndex + '"]'));
      f7Tooltip.current.show();
    } else {
      f7Tooltip.current.hide();
    }
  };
  var onMouseEnter = function onMouseEnter2() {
    calcLinesOffsets();
  };
  var onMouseMove = function onMouseMove2(e) {
    if (!linesOffsets.current) {
      calcLinesOffsets();
    }
    var currentLeft = e.pageX;
    if (typeof currentLeft === "undefined")
      currentLeft = 0;
    var distances = linesOffsets.current.map(function(left) {
      return Math.abs(currentLeft - left);
    });
    var minDistance = Math.min.apply(Math, distances);
    var closestIndex = distances.indexOf(minDistance);
    setCurrentIndex(closestIndex);
  };
  var onMouseLeave = function onMouseLeave2() {
    setCurrentIndex(null);
  };
  var attachEvents = function attachEvents2() {
    if (!svgElRef.current)
      return;
    svgElRef.current.addEventListener("mouseenter", onMouseEnter);
    svgElRef.current.addEventListener("mousemove", onMouseMove);
    svgElRef.current.addEventListener("mouseleave", onMouseLeave);
  };
  var detachEvents = function detachEvents2() {
    if (!svgElRef.current)
      return;
    svgElRef.current.removeEventListener("mouseenter", onMouseEnter);
    svgElRef.current.removeEventListener("mousemove", onMouseMove);
    svgElRef.current.removeEventListener("mouseleave", onMouseLeave);
  };
  (0, import_react15.useEffect)(function() {
    if (previousIndex.current === currentIndex)
      return;
    previousIndex.current = currentIndex;
    emit(props, "select", currentIndex);
    setTooltip();
  }, [currentIndex]);
  (0, import_react15.useEffect)(function() {
    attachEvents();
    return detachEvents;
  });
  (0, import_react15.useEffect)(function() {
    return function() {
      if (f7Tooltip.current && f7Tooltip.current.destroy) {
        f7Tooltip.current.destroy();
      }
      f7Tooltip.current = null;
    };
  }, []);
  var classes = classNames("area-chart", className);
  var chartData = getChartData();
  var verticalLines = getVerticalLines();
  var visibleLegends = getVisibleLegends();
  var LegendItemTag = toggleDatasets ? "button" : "span";
  var ChartTag = lineChart ? "path" : "polygon";
  return import_react15.default.createElement("div", _extends12({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react15.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width,
    height,
    viewBox: "0 0 " + width + " " + height,
    preserveAspectRatio: "none",
    ref: svgElRef
  }, chartData.map(function(data, index) {
    return import_react15.default.createElement(ChartTag, {
      key: ChartTag + "-" + index,
      fill: lineChart ? void 0 : data.color,
      stroke: lineChart ? data.color : void 0,
      fillRule: "evenodd",
      points: lineChart ? void 0 : data.points,
      d: lineChart ? data.points : void 0
    });
  }), verticalLines.map(function(line, index) {
    return import_react15.default.createElement("line", {
      key: "line-" + index,
      "data-index": index,
      fill: "#000",
      x1: line,
      y1: 0,
      x2: line,
      y2: height,
      className: classNames({
        "area-chart-current-line": currentIndex === index
      })
    });
  })), axis && import_react15.default.createElement("div", {
    className: "area-chart-axis"
  }, axisLabels.map(function(label, index) {
    return import_react15.default.createElement("span", {
      key: index
    }, visibleLegends.includes(label) && import_react15.default.createElement("span", null, formatAxisLabel(label)));
  })), legend && import_react15.default.createElement("div", {
    className: "area-chart-legend"
  }, datasets.map(function(dataset, index) {
    return import_react15.default.createElement(LegendItemTag, {
      key: index,
      className: classNames("area-chart-legend-item", {
        "area-chart-legend-item-hidden": hiddenDatasets.includes(index),
        "area-chart-legend-button": toggleDatasets
      }),
      type: toggleDatasets ? "button" : void 0,
      onClick: function onClick() {
        return toggleDataset(index);
      }
    }, import_react15.default.createElement("span", {
      style: {
        backgroundColor: dataset.color
      }
    }), formatLegendLabel(dataset.label));
  })), children);
});
AreaChart.displayName = "f7-area-chart";
var area_chart_default = AreaChart;

// node_modules/framework7-react/esm/components/badge.js
var import_react17 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/use-tooltip.js
var import_react16 = __toESM(require_react());
var useTooltip = function useTooltip2(elRef, props) {
  var f7Tooltip = (0, import_react16.useRef)(null);
  var tooltip = props.tooltip, tooltipTrigger = props.tooltipTrigger;
  var onMount = function onMount2() {
    if (!elRef.current)
      return;
    if (!tooltip)
      return;
    f7ready(function() {
      f7Tooltip.current = f7.tooltip.create({
        targetEl: elRef.current,
        text: tooltip,
        trigger: tooltipTrigger
      });
    });
  };
  var onDestroy = function onDestroy2() {
    if (f7Tooltip.current && f7Tooltip.current.destroy) {
      f7Tooltip.current.destroy();
      f7Tooltip.current = null;
    }
  };
  (0, import_react16.useEffect)(function() {
    onMount();
    return onDestroy;
  }, []);
  watchProp(tooltip, function(value) {
    if (!value && f7Tooltip.current) {
      f7Tooltip.current.destroy();
      f7Tooltip.current = null;
      return;
    }
    if (value && !f7Tooltip.current && f7) {
      f7Tooltip.current = f7.tooltip.create({
        targetEl: elRef.current,
        text: value,
        trigger: tooltipTrigger
      });
      return;
    }
    if (!value || !f7Tooltip.current)
      return;
    f7Tooltip.current.setText(value);
  });
};

// node_modules/framework7-react/esm/components/badge.js
function _extends13() {
  _extends13 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends13.apply(this, arguments);
}
var Badge = (0, import_react17.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react17.useRef)(null);
  (0, import_react17.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(elRef, props);
  var classes = classNames(className, "badge", colorClasses(props));
  return import_react17.default.createElement("span", _extends13({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Badge.displayName = "f7-badge";
var badge_default = Badge;

// node_modules/framework7-react/esm/components/block-footer.js
var import_react18 = __toESM(require_react());
function _extends14() {
  _extends14 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends14.apply(this, arguments);
}
var BlockFooter = (0, import_react18.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react18.useRef)(null);
  (0, import_react18.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "block-footer", colorClasses(props));
  return import_react18.default.createElement("div", _extends14({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
BlockFooter.displayName = "f7-block-footer";
var block_footer_default = BlockFooter;

// node_modules/framework7-react/esm/components/block-header.js
var import_react19 = __toESM(require_react());
function _extends15() {
  _extends15 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends15.apply(this, arguments);
}
var BlockHeader = (0, import_react19.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react19.useRef)(null);
  (0, import_react19.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "block-header", colorClasses(props));
  return import_react19.default.createElement("div", _extends15({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
BlockHeader.displayName = "f7-block-header";
var block_header_default = BlockHeader;

// node_modules/framework7-react/esm/components/block-title.js
var import_react20 = __toESM(require_react());
function _extends16() {
  _extends16 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends16.apply(this, arguments);
}
var BlockTitle = (0, import_react20.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, large = props.large, medium = props.medium;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react20.useRef)(null);
  (0, import_react20.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "block-title", {
    "block-title-large": large,
    "block-title-medium": medium
  }, colorClasses(props));
  return import_react20.default.createElement("div", _extends16({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
BlockTitle.displayName = "f7-block-title";
var block_title_default = BlockTitle;

// node_modules/framework7-react/esm/components/block.js
var import_react21 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/use-tab.js
var useTab = function useTab2(elRef, props) {
  var onTabShow = function onTabShow2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "tabShow", el);
  };
  var onTabHide = function onTabHide2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "tabHide", el);
  };
  var attachEvents = function attachEvents2() {
    if (!elRef.current)
      return;
    f7ready(function() {
      f7.on("tabShow", onTabShow);
      f7.on("tabHide", onTabHide);
    });
  };
  var detachEvents = function detachEvents2() {
    if (!f7)
      return;
    f7.off("tabShow", onTabShow);
    f7.off("tabHide", onTabHide);
  };
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
};

// node_modules/framework7-react/esm/components/block.js
function _extends17() {
  _extends17 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends17.apply(this, arguments);
}
var Block = (0, import_react21.forwardRef)(function(props, ref) {
  var className = props.className, inset = props.inset, xsmallInset = props.xsmallInset, smallInset = props.smallInset, mediumInset = props.mediumInset, largeInset = props.largeInset, xlargeInset = props.xlargeInset, strong = props.strong, accordionList = props.accordionList, accordionOpposite = props.accordionOpposite, tabs = props.tabs, tab = props.tab, tabActive = props.tabActive, noHairlines = props.noHairlines, noHairlinesIos = props.noHairlinesIos, noHairlinesMd = props.noHairlinesMd, noHairlinesAurora = props.noHairlinesAurora, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react21.useRef)(null);
  (0, import_react21.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTab(elRef, props);
  var classes = classNames(className, "block", {
    inset,
    "xsmall-inset": xsmallInset,
    "small-inset": smallInset,
    "medium-inset": mediumInset,
    "large-inset": largeInset,
    "xlarge-inset": xlargeInset,
    "block-strong": strong,
    "accordion-list": accordionList,
    "accordion-opposite": accordionOpposite,
    tabs,
    tab,
    "tab-active": tabActive,
    "no-hairlines": noHairlines,
    "no-hairlines-md": noHairlinesMd,
    "no-hairlines-ios": noHairlinesIos,
    "no-hairlines-aurora": noHairlinesAurora
  }, colorClasses(props));
  return import_react21.default.createElement("div", _extends17({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Block.displayName = "f7-block";
var block_default = Block;

// node_modules/framework7-react/esm/components/button.js
var import_react27 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/use-icon.js
var import_react24 = __toESM(require_react());

// node_modules/framework7-react/esm/components/icon.js
var import_react23 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/use-theme.js
var import_react22 = __toESM(require_react());
var useTheme = function useTheme2() {
  var _useState = (0, import_react22.useState)(f7 ? theme : null), t = _useState[0], setTheme3 = _useState[1];
  if (!f7) {
    f7ready(function() {
      setTheme3(theme);
    });
  }
  return t;
};

// node_modules/framework7-react/esm/components/icon.js
function _extends18() {
  _extends18 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends18.apply(this, arguments);
}
var Icon = (0, import_react23.forwardRef)(function(props, ref) {
  var theme2 = useTheme();
  var className = props.className, id = props.id, style = props.style, children = props.children, material = props.material, f72 = props.f7, icon = props.icon, md = props.md, ios = props.ios, aurora = props.aurora, size = props.size;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react23.useRef)(null);
  (0, import_react23.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(elRef, props);
  var getClasses = function getClasses2() {
    var classes = {
      icon: true
    };
    var themeIcon;
    if (theme2 && theme2.ios)
      themeIcon = ios;
    else if (theme2 && theme2.md)
      themeIcon = md;
    else if (theme2 && theme2.aurora)
      themeIcon = aurora;
    if (themeIcon) {
      var parts = themeIcon.split(":");
      var prop = parts[0];
      var value = parts[1];
      if (prop === "material" || prop === "f7") {
        classes["material-icons"] = prop === "material";
        classes["f7-icons"] = prop === "f7";
      }
      if (prop === "icon") {
        classes[value] = true;
      }
    } else {
      classes = {
        icon: true,
        "material-icons": material,
        "f7-icons": f72
      };
      if (icon)
        classes[icon] = true;
    }
    return classNames(className, classes, colorClasses(props));
  };
  var getIconText = function getIconText2() {
    var text = material || f72;
    if (md && theme2 && theme2.md && (md.indexOf("material:") >= 0 || md.indexOf("f7:") >= 0)) {
      text = md.split(":")[1];
    } else if (ios && theme2 && theme2.ios && (ios.indexOf("material:") >= 0 || ios.indexOf("f7:") >= 0)) {
      text = ios.split(":")[1];
    } else if (aurora && theme2 && theme2.aurora && (aurora.indexOf("material:") >= 0 || aurora.indexOf("f7:") >= 0)) {
      text = aurora.split(":")[1];
    }
    return text;
  };
  var sizeComputed = size;
  if (typeof size === "number" || parseFloat(size) === size * 1) {
    sizeComputed = size + "px";
  }
  return import_react23.default.createElement("i", _extends18({
    id,
    style: extend({
      fontSize: sizeComputed,
      width: sizeComputed,
      height: sizeComputed
    }, style),
    className: getClasses(),
    ref: elRef
  }, extraAttrs), getIconText(), children);
});
Icon.displayName = "f7-icon";
var icon_default = Icon;

// node_modules/framework7-react/esm/shared/use-icon.js
var useIcon = function useIcon2(props) {
  if (props === void 0) {
    props = {};
  }
  var _props = props, icon = _props.icon, iconMaterial = _props.iconMaterial, iconF7 = _props.iconF7, iconMd = _props.iconMd, iconIos = _props.iconIos, iconAurora = _props.iconAurora, iconColor = _props.iconColor, iconSize = _props.iconSize, iconBadge = _props.iconBadge, badgeColor = _props.badgeColor, iconBadgeColor = _props.iconBadgeColor;
  if (icon || iconMaterial || iconF7 || iconMd || iconIos || iconAurora) {
    return import_react24.default.createElement(icon_default, {
      material: iconMaterial,
      f7: iconF7,
      icon,
      md: iconMd,
      ios: iconIos,
      aurora: iconAurora,
      color: iconColor,
      size: iconSize
    }, (iconBadge || iconBadge === 0) && import_react24.default.createElement(badge_default, {
      color: badgeColor || iconBadgeColor
    }, iconBadge));
  }
  return null;
};

// node_modules/framework7-react/esm/shared/use-route-props.js
var import_react25 = __toESM(require_react());
var useRouteProps = function useRouteProps2(elRef, _temp) {
  var _ref = _temp === void 0 ? {} : _temp, routeProps = _ref.routeProps;
  (0, import_react25.useEffect)(function() {
    if (elRef.current) {
      elRef.current.f7RouteProps = routeProps;
    }
    return function() {
      if (elRef.current && elRef.current.f7RouteProps) {
        delete elRef.current.f7RouteProps;
      }
    };
  }, [routeProps]);
};

// node_modules/framework7-react/esm/components/preloader.js
var import_react26 = __toESM(require_react());
function _extends19() {
  _extends19 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends19.apply(this, arguments);
}
var Preloader = (0, import_react26.forwardRef)(function(props, ref) {
  var theme2 = useTheme();
  var className = props.className, id = props.id, style = props.style, size = props.size;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react26.useRef)(null);
  (0, import_react26.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var preloaderStyle = {};
  var sizeComputed = size;
  if (sizeComputed && typeof sizeComputed === "string" && sizeComputed.indexOf("px") >= 0) {
    sizeComputed = sizeComputed.replace("px", "");
  }
  if (sizeComputed) {
    preloaderStyle.width = sizeComputed + "px";
    preloaderStyle.height = sizeComputed + "px";
    preloaderStyle["--f7-preloader-size"] = sizeComputed + "px";
  }
  if (style)
    extend(preloaderStyle, style || {});
  var innerEl;
  if (theme2 && theme2.md) {
    innerEl = import_react26.default.createElement("span", {
      className: "preloader-inner"
    }, import_react26.default.createElement("svg", {
      viewBox: "0 0 36 36"
    }, import_react26.default.createElement("circle", {
      cx: "18",
      cy: "18",
      r: "16"
    })));
  } else if (theme2 && theme2.ios) {
    innerEl = import_react26.default.createElement("span", {
      className: "preloader-inner"
    }, import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }), import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }), import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }), import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }), import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }), import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }), import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }), import_react26.default.createElement("span", {
      className: "preloader-inner-line"
    }));
  } else if (theme2 && theme2.aurora) {
    innerEl = import_react26.default.createElement("span", {
      className: "preloader-inner"
    }, import_react26.default.createElement("span", {
      className: "preloader-inner-circle"
    }));
  } else if (!theme2) {
    innerEl = import_react26.default.createElement("span", {
      className: "preloader-inner"
    });
  }
  var classes = classNames(className, "preloader", colorClasses(props));
  return import_react26.default.createElement("span", _extends19({
    id,
    style: preloaderStyle,
    className: classes,
    ref: elRef
  }, extraAttrs), innerEl);
});
Preloader.displayName = "f7-preloader";
var preloader_default = Preloader;

// node_modules/framework7-react/esm/components/button.js
function _extends20() {
  _extends20 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends20.apply(this, arguments);
}
var Button = (0, import_react27.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, text = props.text, type = props.type, _props$href = props.href, href = _props$href === void 0 ? "#" : _props$href, target = props.target, tabLink = props.tabLink, tabLinkActive = props.tabLinkActive, round = props.round, roundIos = props.roundIos, roundAurora = props.roundAurora, roundMd = props.roundMd, fill = props.fill, fillIos = props.fillIos, fillAurora = props.fillAurora, fillMd = props.fillMd, large = props.large, largeIos = props.largeIos, largeAurora = props.largeAurora, largeMd = props.largeMd, small = props.small, smallIos = props.smallIos, smallAurora = props.smallAurora, smallMd = props.smallMd, raised = props.raised, raisedIos = props.raisedIos, raisedAurora = props.raisedAurora, raisedMd = props.raisedMd, active = props.active, outline = props.outline, outlineIos = props.outlineIos, outlineAurora = props.outlineAurora, outlineMd = props.outlineMd, disabled = props.disabled, preloader = props.preloader, preloaderSize = props.preloaderSize, preloaderColor = props.preloaderColor, loading = props.loading;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react27.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  (0, import_react27.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(elRef, props);
  useRouteProps(elRef, props);
  var getClasses = function getClasses2() {
    return classNames(className, "button", {
      "tab-link": tabLink || tabLink === "",
      "tab-link-active": tabLinkActive,
      "button-round": round,
      "button-round-ios": roundIos,
      "button-round-aurora": roundAurora,
      "button-round-md": roundMd,
      "button-fill": fill,
      "button-fill-ios": fillIos,
      "button-fill-aurora": fillAurora,
      "button-fill-md": fillMd,
      "button-large": large,
      "button-large-ios": largeIos,
      "button-large-aurora": largeAurora,
      "button-large-md": largeMd,
      "button-small": small,
      "button-small-ios": smallIos,
      "button-small-aurora": smallAurora,
      "button-small-md": smallMd,
      "button-raised": raised,
      "button-raised-ios": raisedIos,
      "button-raised-aurora": raisedAurora,
      "button-raised-md": raisedMd,
      "button-active": active,
      "button-outline": outline,
      "button-outline-ios": outlineIos,
      "button-outline-aurora": outlineAurora,
      "button-outline-md": outlineMd,
      "button-preloader": preloader,
      "button-loading": loading,
      disabled
    }, colorClasses(props), routerClasses(props), actionsClasses(props));
  };
  var ButtonTag = type === "submit" || type === "reset" || type === "button" ? "button" : "a";
  var getAttrs = function getAttrs2() {
    var hrefComputed = href;
    if (href === true)
      hrefComputed = "#";
    if (href === false || ButtonTag === "button")
      hrefComputed = void 0;
    return extend({
      href: hrefComputed,
      target,
      type,
      "data-tab": isStringProp(tabLink) && tabLink || void 0
    }, routerAttrs(props), actionsAttrs(props));
  };
  var iconEl = useIcon(props);
  var textEl;
  if (text) {
    textEl = import_react27.default.createElement("span", null, text);
  }
  if (preloader) {
    return import_react27.default.createElement(ButtonTag, _extends20({
      ref: elRef,
      id,
      style,
      className: getClasses()
    }, getAttrs(), extraAttrs, {
      onClick
    }), import_react27.default.createElement(preloader_default, {
      size: preloaderSize,
      color: preloaderColor
    }), import_react27.default.createElement("span", null, iconEl, textEl, children));
  }
  return import_react27.default.createElement(ButtonTag, _extends20({
    ref: elRef,
    id,
    style,
    className: getClasses()
  }, getAttrs(), extraAttrs, {
    onClick
  }), iconEl, textEl, children);
});
Button.displayName = "f7-button";
var button_default = Button;

// node_modules/framework7-react/esm/components/card-content.js
var import_react28 = __toESM(require_react());
function _extends21() {
  _extends21 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends21.apply(this, arguments);
}
var CardContent = (0, import_react28.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$padding = props.padding, padding = _props$padding === void 0 ? true : _props$padding;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react28.useRef)(null);
  (0, import_react28.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "card-content", {
    "card-content-padding": padding
  }, colorClasses(props));
  return import_react28.default.createElement("div", _extends21({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
CardContent.displayName = "f7-card-content";
var card_content_default = CardContent;

// node_modules/framework7-react/esm/components/card-footer.js
var import_react29 = __toESM(require_react());
function _extends22() {
  _extends22 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends22.apply(this, arguments);
}
var CardFooter = (0, import_react29.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react29.useRef)(null);
  (0, import_react29.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "card-footer", colorClasses(props));
  return import_react29.default.createElement("div", _extends22({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
CardFooter.displayName = "f7-card-footer";
var card_footer_default = CardFooter;

// node_modules/framework7-react/esm/components/card-header.js
var import_react30 = __toESM(require_react());
function _extends23() {
  _extends23 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends23.apply(this, arguments);
}
var CardHeader = (0, import_react30.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react30.useRef)(null);
  (0, import_react30.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "card-header", colorClasses(props));
  return import_react30.default.createElement("div", _extends23({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
CardHeader.displayName = "f7-card-header";
var card_header_default = CardHeader;

// node_modules/framework7-react/esm/components/card.js
var import_react31 = __toESM(require_react());
function _extends24() {
  _extends24 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends24.apply(this, arguments);
}
var Card = (0, import_react31.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, title = props.title, content = props.content, footer = props.footer, padding = props.padding, outline = props.outline, expandable = props.expandable, expandableAnimateWidth = props.expandableAnimateWidth, expandableOpened = props.expandableOpened, animate = props.animate, hideNavbarOnOpen = props.hideNavbarOnOpen, hideToolbarOnOpen = props.hideToolbarOnOpen, hideStatusbarOnOpen = props.hideStatusbarOnOpen, scrollableEl = props.scrollableEl, swipeToClose = props.swipeToClose, closeByBackdropClick = props.closeByBackdropClick, backdrop = props.backdrop, backdropEl = props.backdropEl, noShadow = props.noShadow, noBorder = props.noBorder;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react31.useRef)(null);
  var open = function open2() {
    if (!elRef.current)
      return;
    f7.card.open(elRef.current);
  };
  var close = function close2() {
    if (!elRef.current)
      return;
    f7.card.close(elRef.current);
  };
  var onBeforeOpen = function onBeforeOpen2(el, prevent) {
    if (elRef.current !== el)
      return;
    emit(props, "cardBeforeOpen", el, prevent);
  };
  var onOpen = function onOpen2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "cardOpen", el);
  };
  var onOpened = function onOpened2(el, pageEl) {
    if (elRef.current !== el)
      return;
    emit(props, "cardOpened", el, pageEl);
  };
  var onClose = function onClose2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "cardClose", el);
  };
  var onClosed = function onClosed2(el, pageEl) {
    if (elRef.current !== el)
      return;
    emit(props, "cardClosed", el, pageEl);
  };
  var attachEvents = function attachEvents2() {
    if (!expandable || !elRef.current)
      return;
    f7ready(function() {
      f7.on("cardBeforeOpen", onBeforeOpen);
      f7.on("cardOpen", onOpen);
      f7.on("cardOpened", onOpened);
      f7.on("cardClose", onClose);
      f7.on("cardClosed", onClosed);
    });
  };
  var detachEvents = function detachEvents2() {
    f7.off("cardBeforeOpen", onBeforeOpen);
    f7.off("cardOpen", onOpen);
    f7.off("cardOpened", onOpened);
    f7.off("cardClose", onClose);
    f7.off("cardClosed", onClosed);
  };
  var onMount = function onMount2() {
    if (!expandable || !elRef.current)
      return;
    f7ready(function() {
      if (expandable && expandableOpened) {
        f7.card.open(elRef.current, false);
      }
    });
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
  }, []);
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  watchProp(expandableOpened, function(value) {
    if (value) {
      open();
    } else {
      close();
    }
  });
  (0, import_react31.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      open,
      close
    };
  });
  var headerEl;
  var contentEl;
  var footerEl;
  var classes = classNames(className, "card", {
    "card-outline": outline,
    "card-expandable": expandable,
    "card-expandable-animate-width": expandableAnimateWidth,
    "no-shadow": noShadow,
    "no-border": noBorder
  }, colorClasses(props));
  var slots = getSlots(props);
  if (title || slots.header) {
    headerEl = import_react31.default.createElement(card_header_default, null, title, slots.header);
  }
  if (content || slots.content) {
    contentEl = import_react31.default.createElement(card_content_default, {
      padding
    }, content, slots.content);
  }
  if (footer || slots.footer) {
    footerEl = import_react31.default.createElement(card_footer_default, null, footer, slots.footer);
  }
  return import_react31.default.createElement("div", _extends24({
    id,
    style,
    className: classes,
    "data-animate": typeof animate === "undefined" ? animate : animate.toString(),
    "data-hide-navbar-on-open": typeof hideNavbarOnOpen === "undefined" ? hideNavbarOnOpen : hideNavbarOnOpen.toString(),
    "data-hide-toolbar-on-open": typeof hideToolbarOnOpen === "undefined" ? hideToolbarOnOpen : hideToolbarOnOpen.toString(),
    "data-hide-statusbar-on-open": typeof hideStatusbarOnOpen === "undefined" ? hideStatusbarOnOpen : hideStatusbarOnOpen.toString(),
    "data-scrollable-el": scrollableEl,
    "data-swipe-to-close": typeof swipeToClose === "undefined" ? swipeToClose : swipeToClose.toString(),
    "data-close-by-backdrop-click": typeof closeByBackdropClick === "undefined" ? closeByBackdropClick : closeByBackdropClick.toString(),
    "data-backdrop": typeof backdrop === "undefined" ? backdrop : backdrop.toString(),
    "data-backdrop-el": backdropEl,
    ref: elRef
  }, extraAttrs), headerEl, contentEl, footerEl, slots.default);
});
Card.displayName = "f7-card";
var card_default = Card;

// node_modules/framework7-react/esm/components/checkbox.js
var import_react32 = __toESM(require_react());
function _extends25() {
  _extends25 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends25.apply(this, arguments);
}
var Checkbox = (0, import_react32.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, name2 = props.name, value = props.value, disabled = props.disabled, readonly = props.readonly, checked = props.checked, defaultChecked = props.defaultChecked, indeterminate = props.indeterminate;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react32.useRef)(null);
  var inputElRef = (0, import_react32.useRef)(null);
  (0, import_react32.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      inputEl: inputElRef.current
    };
  });
  var onChange = function onChange2(event) {
    emit(props, "change", event);
  };
  (0, import_react32.useEffect)(function() {
    if (inputElRef.current) {
      inputElRef.current.indeterminate = !!indeterminate;
    }
  }, [indeterminate]);
  var inputEl = import_react32.default.createElement("input", {
    ref: inputElRef,
    type: "checkbox",
    name: name2,
    value,
    disabled,
    readOnly: readonly,
    checked,
    defaultChecked,
    onChange
  });
  var iconEl = import_react32.default.createElement("i", {
    className: "icon-checkbox"
  });
  var classes = classNames(className, {
    checkbox: true,
    disabled
  }, colorClasses(props));
  return import_react32.default.createElement("label", _extends25({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), inputEl, iconEl, children);
});
Checkbox.displayName = "f7-checkbox";
var checkbox_default = Checkbox;

// node_modules/framework7-react/esm/components/chip.js
var import_react33 = __toESM(require_react());
function _extends26() {
  _extends26 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends26.apply(this, arguments);
}
var Chip = (0, import_react33.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, media = props.media, text = props.text, deleteable = props.deleteable, mediaTextColor = props.mediaTextColor, mediaBgColor = props.mediaBgColor, outline = props.outline;
  var extraAttrs = getExtraAttrs(props);
  var onClick = function onClick2(event) {
    emit(props, "click", event);
  };
  var onDeleteClick = function onDeleteClick2(event) {
    emit(props, "delete", event);
  };
  var elRef = (0, import_react33.useRef)(null);
  (0, import_react33.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(elRef, props);
  var slots = getSlots(props);
  var iconEl = useIcon(props);
  var mediaEl;
  var labelEl;
  var deleteEl;
  if (media || iconEl || slots && slots.media) {
    var mediaClasses = classNames("chip-media", mediaTextColor && "text-color-" + mediaTextColor, mediaBgColor && "bg-color-" + mediaBgColor);
    mediaEl = import_react33.default.createElement("div", {
      className: mediaClasses
    }, iconEl, media, slots.media);
  }
  if (text || slots && (slots.text || slots.default && slots.default.length)) {
    labelEl = import_react33.default.createElement("div", {
      className: "chip-label"
    }, text, slots.text, slots.default);
  }
  if (deleteable) {
    deleteEl = import_react33.default.createElement("a", {
      className: "chip-delete",
      onClick: onDeleteClick
    });
  }
  var classes = classNames(className, "chip", {
    "chip-outline": outline
  }, colorClasses(props));
  return import_react33.default.createElement("div", _extends26({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), mediaEl, labelEl, deleteEl);
});
Chip.displayName = "f7-chip";
var chip_default = Chip;

// node_modules/framework7-react/esm/components/col.js
var import_react34 = __toESM(require_react());
function _extends27() {
  _extends27 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends27.apply(this, arguments);
}
var Col = (0, import_react34.forwardRef)(function(props, ref) {
  var _classNames;
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$tag = props.tag, tag = _props$tag === void 0 ? "div" : _props$tag, _props$width = props.width, width = _props$width === void 0 ? "auto" : _props$width, xsmall = props.xsmall, small = props.small, medium = props.medium, large = props.large, xlarge = props.xlarge, resizable = props.resizable, resizableFixed = props.resizableFixed, resizableAbsolute = props.resizableAbsolute, _props$resizableHandl = props.resizableHandler, resizableHandler = _props$resizableHandl === void 0 ? true : _props$resizableHandl;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react34.useRef)(null);
  var onClick = function onClick2(event) {
    emit(props, "click", event);
  };
  var onResize = function onResize2(el) {
    if (el === elRef.current) {
      emit(props, "gridResize");
    }
  };
  (0, import_react34.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var ColTag = tag;
  var classes = classNames(className, (_classNames = {
    col: width === "auto"
  }, _classNames["col-" + width] = width !== "auto", _classNames["xsmall-" + xsmall] = xsmall, _classNames["small-" + small] = small, _classNames["medium-" + medium] = medium, _classNames["large-" + large] = large, _classNames["xlarge-" + xlarge] = xlarge, _classNames.resizable = resizable, _classNames["resizable-fixed"] = resizableFixed, _classNames["resizable-absolute"] = resizableAbsolute, _classNames), colorClasses(props));
  (0, import_react34.useEffect)(function() {
    f7ready(function() {
      f7.on("gridResize", onResize);
    });
    return function() {
      f7.off("gridResize", onResize);
    };
  });
  return import_react34.default.createElement(ColTag, _extends27({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), children, resizable && resizableHandler && import_react34.default.createElement("span", {
    className: "resize-handler"
  }));
});
Col.displayName = "f7-col";
var col_default = Col;

// node_modules/framework7-react/esm/components/fab-backdrop.js
var import_react35 = __toESM(require_react());
function _extends28() {
  _extends28 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends28.apply(this, arguments);
}
var FabBackdrop = (0, import_react35.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react35.useRef)(null);
  (0, import_react35.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "fab-backdrop");
  return import_react35.default.createElement("div", _extends28({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
FabBackdrop.displayName = "f7-fab-backdrop";
var fab_backdrop_default = FabBackdrop;

// node_modules/framework7-react/esm/components/fab-button.js
var import_react36 = __toESM(require_react());
function _extends29() {
  _extends29 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends29.apply(this, arguments);
}
var FabButton = (0, import_react36.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, fabClose = props.fabClose, label = props.label, target = props.target;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react36.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  (0, import_react36.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(elRef, props);
  var classes = classNames(className, {
    "fab-close": fabClose,
    "fab-label-button": label
  }, colorClasses(props));
  var labelEl;
  if (label) {
    labelEl = import_react36.default.createElement("span", {
      className: "fab-label"
    }, label);
  }
  return import_react36.default.createElement("a", _extends29({
    id,
    style,
    target,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), children, labelEl);
});
FabButton.displayName = "f7-fab-button";
var fab_button_default = FabButton;

// node_modules/framework7-react/esm/components/fab-buttons.js
var import_react37 = __toESM(require_react());
function _extends30() {
  _extends30 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends30.apply(this, arguments);
}
var FabButtons = (0, import_react37.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, position = props.position;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react37.useRef)(null);
  (0, import_react37.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "fab-buttons", "fab-buttons-" + position, colorClasses(props));
  return import_react37.default.createElement("div", _extends30({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
FabButtons.displayName = "f7-fab-buttons";
var fab_buttons_default = FabButtons;

// node_modules/framework7-react/esm/components/fab.js
var import_react38 = __toESM(require_react());
function _extends31() {
  _extends31 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends31.apply(this, arguments);
}
var Fab = (0, import_react38.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, morphTo = props.morphTo, href = props.href, target = props.target, text = props.text, _props$position = props.position, position = _props$position === void 0 ? "right-bottom" : _props$position;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react38.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  (0, import_react38.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(elRef, props);
  var hrefComputed = href;
  if (hrefComputed === true)
    hrefComputed = "#";
  if (hrefComputed === false)
    hrefComputed = void 0;
  var linkChildren = [];
  var rootChildren = [];
  var _getSlots = getSlots(props), linkSlots = _getSlots.link, defaultSlots = _getSlots.default, rootSlots = _getSlots.root, textSlots = _getSlots.text;
  if (defaultSlots) {
    for (var i = 0; i < defaultSlots.length; i += 1) {
      var child = defaultSlots[i];
      var isRoot = void 0;
      var tag = child.type && (child.type.displayName || child.type.name);
      if (tag === "FabButtons" || tag === "f7-fab-buttons")
        isRoot = true;
      if (isRoot)
        rootChildren.push(child);
      else
        linkChildren.push(child);
    }
  }
  var textEl;
  if (text || textSlots && textSlots.length) {
    textEl = import_react38.default.createElement("div", {
      className: "fab-text"
    }, text, textSlots);
  }
  var linkEl;
  if (linkChildren.length || linkSlots && linkSlots.length || textEl) {
    linkEl = import_react38.default.createElement("a", {
      target,
      href: hrefComputed,
      onClick
    }, linkChildren, textEl, linkSlots);
  }
  var classes = classNames(className, "fab", "fab-" + position, {
    "fab-morph": morphTo,
    "fab-extended": typeof textEl !== "undefined"
  }, colorClasses(props));
  return import_react38.default.createElement("div", _extends31({
    id,
    style,
    className: classes,
    "data-morph-to": morphTo,
    ref: elRef
  }, extraAttrs), linkEl, rootChildren, rootSlots);
});
Fab.displayName = "f7-fab";
var fab_default = Fab;

// node_modules/framework7-react/esm/components/gauge.js
var import_react39 = __toESM(require_react());
function _extends32() {
  _extends32 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends32.apply(this, arguments);
}
var Gauge = (0, import_react39.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, _props$type = props.type, type = _props$type === void 0 ? "circle" : _props$type, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$size = props.size, size = _props$size === void 0 ? 200 : _props$size, _props$bgColor = props.bgColor, bgColor = _props$bgColor === void 0 ? "transparent" : _props$bgColor, _props$borderBgColor = props.borderBgColor, borderBgColor = _props$borderBgColor === void 0 ? "#eeeeee" : _props$borderBgColor, _props$borderColor = props.borderColor, borderColor = _props$borderColor === void 0 ? "#000000" : _props$borderColor, _props$borderWidth = props.borderWidth, borderWidth = _props$borderWidth === void 0 ? 10 : _props$borderWidth, valueText = props.valueText, _props$valueTextColor = props.valueTextColor, valueTextColor = _props$valueTextColor === void 0 ? "#000000" : _props$valueTextColor, _props$valueFontSize = props.valueFontSize, valueFontSize = _props$valueFontSize === void 0 ? 31 : _props$valueFontSize, _props$valueFontWeigh = props.valueFontWeight, valueFontWeight = _props$valueFontWeigh === void 0 ? 500 : _props$valueFontWeigh, labelText = props.labelText, _props$labelTextColor = props.labelTextColor, labelTextColor = _props$labelTextColor === void 0 ? "#888888" : _props$labelTextColor, _props$labelFontSize = props.labelFontSize, labelFontSize = _props$labelFontSize === void 0 ? 14 : _props$labelFontSize, _props$labelFontWeigh = props.labelFontWeight, labelFontWeight = _props$labelFontWeigh === void 0 ? 400 : _props$labelFontWeigh;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react39.useRef)(null);
  (0, import_react39.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "gauge");
  var semiCircle = type === "semicircle";
  var radius = size / 2 - borderWidth / 2;
  var length = 2 * Math.PI * radius;
  var progress = Math.max(Math.min(value, 1), 0);
  return import_react39.default.createElement("div", _extends32({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react39.default.createElement("svg", {
    className: "gauge-svg",
    width: size + "px",
    height: (semiCircle ? size / 2 : size) + "px",
    viewBox: "0 0 " + size + " " + (semiCircle ? size / 2 : size)
  }, semiCircle && import_react39.default.createElement("path", {
    className: "gauge-back-semi",
    d: "M" + (size - borderWidth / 2) + "," + size / 2 + " a1,1 0 0,0 -" + (size - borderWidth) + ",0",
    stroke: borderBgColor,
    strokeWidth: borderWidth,
    fill: bgColor || "none"
  }), semiCircle && import_react39.default.createElement("path", {
    className: "gauge-front-semi",
    d: "M" + (size - borderWidth / 2) + "," + size / 2 + " a1,1 0 0,0 -" + (size - borderWidth) + ",0",
    stroke: borderColor,
    strokeWidth: borderWidth,
    strokeDasharray: length / 2,
    strokeDashoffset: length / 2 * (1 + progress),
    fill: borderBgColor ? "none" : bgColor || "none"
  }), !semiCircle && borderBgColor && import_react39.default.createElement("circle", {
    className: "gauge-back-circle",
    stroke: borderBgColor,
    strokeWidth: borderWidth,
    fill: bgColor || "none",
    cx: size / 2,
    cy: size / 2,
    r: radius
  }), !semiCircle && import_react39.default.createElement("circle", {
    className: "gauge-front-circle",
    transform: "rotate(-90 " + size / 2 + " " + size / 2 + ")",
    stroke: borderColor,
    strokeWidth: borderWidth,
    strokeDasharray: length,
    strokeDashoffset: length * (1 - progress),
    fill: borderBgColor ? "none" : bgColor || "none",
    cx: size / 2,
    cy: size / 2,
    r: radius
  }), valueText && import_react39.default.createElement("text", {
    className: "gauge-value-text",
    x: "50%",
    y: semiCircle ? "100%" : "50%",
    fontWeight: valueFontWeight,
    fontSize: valueFontSize,
    fill: valueTextColor,
    dy: semiCircle ? labelText ? -labelFontSize - 15 : -5 : 0,
    textAnchor: "middle",
    dominantBaseline: !semiCircle ? "middle" : null
  }, valueText), labelText && import_react39.default.createElement("text", {
    className: "gauge-label-text",
    x: "50%",
    y: semiCircle ? "100%" : "50%",
    fontWeight: labelFontWeight,
    fontSize: labelFontSize,
    fill: labelTextColor,
    dy: semiCircle ? -5 : valueText ? valueFontSize / 2 + 10 : 0,
    textAnchor: "middle",
    dominantBaseline: !semiCircle ? "middle" : null
  }, labelText)));
});
Gauge.displayName = "f7-gauge";
var gauge_default = Gauge;

// node_modules/framework7-react/esm/components/input.js
var import_react43 = __toESM(require_react());

// node_modules/framework7-react/esm/components/toggle.js
var import_react40 = __toESM(require_react());
function _extends33() {
  _extends33 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends33.apply(this, arguments);
}
var Toggle = (0, import_react40.forwardRef)(function(props, ref) {
  var _f7Toggle = (0, import_react40.useRef)(null);
  var className = props.className, id = props.id, style = props.style, _props$init = props.init, init = _props$init === void 0 ? true : _props$init, checked = props.checked, defaultChecked = props.defaultChecked, disabled = props.disabled, readonly = props.readonly, name2 = props.name, value = props.value;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react40.useRef)(null);
  var inputElRef = (0, import_react40.useRef)(null);
  var onChange = function onChange2(event) {
    emit(props, "change", event);
  };
  (0, import_react40.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Toggle: function f7Toggle() {
        return _f7Toggle.current;
      }
    };
  });
  useTooltip(elRef, props);
  watchProp(checked, function(newValue) {
    if (!_f7Toggle.current)
      return;
    _f7Toggle.current.checked = newValue;
  });
  var onToggleChange = function onToggleChange2(toggleInstance) {
    emit(props, "toggleChange", toggleInstance.checked);
  };
  var toggleEvents = function toggleEvents2(method) {
    if (!_f7Toggle.current)
      return;
    _f7Toggle.current[method]("toggleChange", onToggleChange);
  };
  var onMount = function onMount2() {
    f7ready(function() {
      if (!init || !elRef.current)
        return;
      _f7Toggle.current = f7.toggle.create({
        el: elRef.current
      });
      toggleEvents("on");
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Toggle.current && _f7Toggle.current.destroy && _f7Toggle.current.$el) {
      _f7Toggle.current.destroy();
    }
    _f7Toggle.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    toggleEvents("on");
    if (inputElRef.current) {
      inputElRef.current.addEventListener("change", onChange);
    }
    return function() {
      toggleEvents("off");
      if (inputElRef.current) {
        inputElRef.current.removeEventListener("change", onChange);
      }
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var labelClasses = classNames("toggle", className, {
    disabled
  }, colorClasses(props));
  var inputEl = import_react40.default.createElement("input", {
    ref: inputElRef,
    type: "checkbox",
    name: name2,
    disabled,
    readOnly: readonly,
    checked,
    defaultChecked,
    value,
    onChange: function onChange2() {
    }
  });
  return import_react40.default.createElement("label", _extends33({
    id,
    style,
    className: labelClasses,
    ref: elRef
  }, extraAttrs), inputEl, import_react40.default.createElement("span", {
    className: "toggle-icon"
  }));
});
Toggle.displayName = "f7-toggle";
var toggle_default = Toggle;

// node_modules/framework7-react/esm/components/range.js
var import_react41 = __toESM(require_react());
function _extends34() {
  _extends34 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends34.apply(this, arguments);
}
var Range = (0, import_react41.forwardRef)(function(props, ref) {
  var _f7Range = (0, import_react41.useRef)(null);
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$init = props.init, init = _props$init === void 0 ? true : _props$init, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$min = props.min, min = _props$min === void 0 ? 0 : _props$min, _props$max = props.max, max = _props$max === void 0 ? 100 : _props$max, _props$step = props.step, step = _props$step === void 0 ? 1 : _props$step, _props$label = props.label, label = _props$label === void 0 ? false : _props$label, _props$dual = props.dual, dual = _props$dual === void 0 ? false : _props$dual, _props$vertical = props.vertical, vertical = _props$vertical === void 0 ? false : _props$vertical, _props$verticalRevers = props.verticalReversed, verticalReversed = _props$verticalRevers === void 0 ? false : _props$verticalRevers, _props$draggableBar = props.draggableBar, draggableBar = _props$draggableBar === void 0 ? true : _props$draggableBar, formatLabel = props.formatLabel, _props$scale = props.scale, scale = _props$scale === void 0 ? false : _props$scale, _props$scaleSteps = props.scaleSteps, scaleSteps = _props$scaleSteps === void 0 ? 5 : _props$scaleSteps, _props$scaleSubSteps = props.scaleSubSteps, scaleSubSteps = _props$scaleSubSteps === void 0 ? 0 : _props$scaleSubSteps, formatScaleLabel = props.formatScaleLabel, _props$limitKnobPosit = props.limitKnobPosition, limitKnobPosition = _props$limitKnobPosit === void 0 ? void 0 : _props$limitKnobPosit, name2 = props.name, input = props.input, inputId = props.inputId, disabled = props.disabled;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react41.useRef)(null);
  (0, import_react41.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Range: function f7Range() {
        return _f7Range.current;
      }
    };
  });
  watchProp(value, function(newValue) {
    if (!_f7Range.current)
      return;
    var rangeValue = _f7Range.current.value;
    if (Array.isArray(newValue) && Array.isArray(rangeValue)) {
      if (rangeValue[0] !== newValue[0] || rangeValue[1] !== newValue[1]) {
        _f7Range.current.setValue(newValue);
      }
    } else {
      _f7Range.current.setValue(newValue);
    }
  });
  var onChange = function onChange2(range, val) {
    emit(props, "rangeChange", val);
  };
  var onChanged = function onChanged2(range, val) {
    emit(props, "rangeChanged", val);
  };
  var rangeEvents = function rangeEvents2(method) {
    if (!_f7Range.current)
      return;
    _f7Range.current[method]("change", onChange);
    _f7Range.current[method]("changed", onChanged);
  };
  var onMount = function onMount2() {
    f7ready(function() {
      if (!init || !elRef.current)
        return;
      _f7Range.current = f7.range.create(noUndefinedProps({
        el: elRef.current,
        value,
        min,
        max,
        step,
        label,
        dual,
        draggableBar,
        vertical,
        verticalReversed,
        formatLabel,
        scale,
        scaleSteps,
        scaleSubSteps,
        formatScaleLabel,
        limitKnobPosition
      }));
      rangeEvents("on");
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Range.current && _f7Range.current.destroy)
      _f7Range.current.destroy();
    _f7Range.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    rangeEvents("on");
    return function() {
      rangeEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var classes = classNames(className, "range-slider", {
    "range-slider-horizontal": !vertical,
    "range-slider-vertical": vertical,
    "range-slider-vertical-reversed": vertical && verticalReversed,
    disabled
  }, colorClasses(props));
  return import_react41.default.createElement("div", _extends34({
    ref: elRef,
    id,
    style,
    className: classes
  }, extraAttrs), input && import_react41.default.createElement("input", {
    type: "range",
    name: name2,
    id: inputId
  }), children);
});
Range.displayName = "f7-range";
var range_default = Range;

// node_modules/framework7-react/esm/components/text-editor.js
var import_react42 = __toESM(require_react());
function _extends35() {
  _extends35 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends35.apply(this, arguments);
}
var TextEditor = (0, import_react42.forwardRef)(function(props, ref) {
  var _f7TextEditor = (0, import_react42.useRef)(null);
  var className = props.className, id = props.id, style = props.style, mode = props.mode, value = props.value, buttons = props.buttons, customButtons = props.customButtons, dividers = props.dividers, imageUrlText = props.imageUrlText, linkUrlText = props.linkUrlText, placeholder = props.placeholder, clearFormattingOnPaste = props.clearFormattingOnPaste, _props$resizable = props.resizable, resizable = _props$resizable === void 0 ? false : _props$resizable;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react42.useRef)(null);
  var onChange = function onChange2(editor, editorValue) {
    emit(props, "textEditorChange", editorValue);
  };
  var onInput = function onInput2(editor, editorValue) {
    emit(props, "textEditorInput", editorValue);
  };
  var onFocus = function onFocus2() {
    emit(props, "textEditorFocus");
  };
  var onBlur = function onBlur2() {
    emit(props, "textEditorBlur");
  };
  var onButtonClick = function onButtonClick2(editor, button) {
    emit(props, "textEditorButtonClick", button);
  };
  var onKeyboardOpen = function onKeyboardOpen2() {
    emit(props, "textEditorKeyboardOpen");
  };
  var onKeyboardClose = function onKeyboardClose2() {
    emit(props, "textEditorKeyboardClose");
  };
  var onPopoverOpen = function onPopoverOpen2() {
    emit(props, "textEditorPopoverOpen");
  };
  var onPopoverClose = function onPopoverClose2() {
    emit(props, "textEditorPopoverClose");
  };
  var onInsertLink = function onInsertLink2(editor, url) {
    emit(props, "textEditorInsertLink", url);
  };
  var onInsertImage = function onInsertImage2(editor, url) {
    emit(props, "textEditorInsertImage", url);
  };
  (0, import_react42.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7TextEditor: function f7TextEditor() {
        return _f7TextEditor.current;
      }
    };
  });
  watchProp(value, function(newValue) {
    if (_f7TextEditor.current) {
      _f7TextEditor.current.setValue(newValue);
    }
  });
  var onMount = function onMount2() {
    var params = noUndefinedProps({
      el: elRef.current,
      mode,
      value,
      buttons,
      customButtons,
      dividers,
      imageUrlText,
      linkUrlText,
      placeholder,
      clearFormattingOnPaste,
      on: {
        change: onChange,
        input: onInput,
        focus: onFocus,
        blur: onBlur,
        buttonClick: onButtonClick,
        keyboardOpen: onKeyboardOpen,
        keyboardClose: onKeyboardClose,
        popoverOpen: onPopoverOpen,
        popoverClose: onPopoverClose,
        insertLink: onInsertLink,
        insertImage: onInsertImage
      }
    });
    f7ready(function() {
      _f7TextEditor.current = f7.textEditor.create(params);
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7TextEditor.current && _f7TextEditor.current.destroy) {
      _f7TextEditor.current.destroy();
    }
    _f7TextEditor.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var slots = getSlots(props);
  var classes = classNames(className, "text-editor", resizable && "text-editor-resizable", colorClasses(props));
  return import_react42.default.createElement("div", _extends35({
    ref: elRef,
    id,
    style,
    className: classes
  }, extraAttrs), slots["root-start"], import_react42.default.createElement("div", {
    className: "text-editor-content",
    contentEditable: true
  }, slots.default), slots["root-end"], slots.root);
});
TextEditor.displayName = "f7-text-editor";
var text_editor_default = TextEditor;

// node_modules/framework7-react/esm/components/input.js
function _extends36() {
  _extends36 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends36.apply(this, arguments);
}
var Input = (0, import_react43.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, type = props.type, name2 = props.name, value = props.value, defaultValue = props.defaultValue, inputmode = props.inputmode, placeholder = props.placeholder, inputId = props.inputId, size = props.size, accept = props.accept, autocomplete = props.autocomplete, autocorrect = props.autocorrect, autocapitalize = props.autocapitalize, spellcheck = props.spellcheck, autofocus = props.autofocus, autosave = props.autosave, checked = props.checked, disabled = props.disabled, max = props.max, min = props.min, step = props.step, maxlength = props.maxlength, minlength = props.minlength, multiple = props.multiple, readonly = props.readonly, required = props.required, inputStyle = props.inputStyle, pattern = props.pattern, validate = props.validate, validateOnBlur = props.validateOnBlur, onValidate = props.onValidate, tabindex = props.tabindex, resizable = props.resizable, clearButton = props.clearButton, noFormStoreData = props.noFormStoreData, noStoreData = props.noStoreData, ignoreStoreData = props.ignoreStoreData, errorMessage = props.errorMessage, errorMessageForce = props.errorMessageForce, info = props.info, outline = props.outline, _props$wrap = props.wrap, wrap = _props$wrap === void 0 ? true : _props$wrap, _props$dropdown = props.dropdown, dropdown = _props$dropdown === void 0 ? "auto" : _props$dropdown, calendarParams = props.calendarParams, colorPickerParams = props.colorPickerParams, textEditorParams = props.textEditorParams;
  var _useState = (0, import_react43.useState)(false), inputInvalid = _useState[0], setInputInvalid = _useState[1];
  var _useState2 = (0, import_react43.useState)(false), inputFocused = _useState2[0], setInputFocused = _useState2[1];
  var extraAttrs = getExtraAttrs(props);
  var f7Calendar = (0, import_react43.useRef)(null);
  var f7ColorPicker = (0, import_react43.useRef)(null);
  var elRef = (0, import_react43.useRef)(null);
  var inputElRef = (0, import_react43.useRef)(null);
  var updateInputOnDidUpdate = (0, import_react43.useRef)(false);
  var getDomValue = function getDomValue2() {
    if (!inputElRef.current)
      return void 0;
    return inputElRef.current.value;
  };
  var isInputHasValue = function isInputHasValue2() {
    if (type === "datepicker" && Array.isArray(value) && value.length === 0) {
      return false;
    }
    var domValue2 = getDomValue();
    return typeof value === "undefined" ? domValue2 || domValue2 === 0 : value || value === 0;
  };
  var validateInput = function validateInput2() {
    if (!f7 || !inputElRef.current)
      return;
    var validity = inputElRef.current.validity;
    if (!validity)
      return;
    if (!validity.valid) {
      if (onValidate)
        onValidate(false);
      if (inputInvalid !== true) {
        setInputInvalid(true);
      }
    } else {
      if (onValidate)
        onValidate(true);
      if (inputInvalid !== false) {
        setInputInvalid(false);
      }
    }
  };
  var onTextareaResize = function onTextareaResize2(event) {
    emit(props, "textareaResize", event);
  };
  var onInputNotEmpty = function onInputNotEmpty2(event) {
    emit(props, "inputNotEmpty", event);
  };
  var onInputEmpty = function onInputEmpty2(event) {
    emit(props, "inputEmpty", event);
  };
  var onInputClear = function onInputClear2(event) {
    emit(props, "inputClear", event);
  };
  var onInput = function onInput2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    emit.apply(void 0, [props, "input"].concat(args));
    if (!(validateOnBlur || validateOnBlur === "") && (validate || validate === "") && inputElRef.current) {
      validateInput();
    }
  };
  var onFocus = function onFocus2() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    emit.apply(void 0, [props, "focus"].concat(args));
    setInputFocused(true);
  };
  var onBlur = function onBlur2() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    emit.apply(void 0, [props, "blur"].concat(args));
    if ((validate || validate === "" || validateOnBlur || validateOnBlur === "") && inputElRef.current) {
      validateInput();
    }
    setInputFocused(false);
  };
  var onChange = function onChange2() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    emit.apply(void 0, [props, "change"].concat(args));
    if (type === "texteditor") {
      emit(props, "textEditorChange", args[1]);
    }
  };
  (0, import_react43.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var onMount = function onMount2() {
    f7ready(function() {
      if (type === "range" || type === "toggle")
        return;
      if (!inputElRef.current)
        return;
      inputElRef.current.addEventListener("input:notempty", onInputNotEmpty, false);
      if (type === "textarea" && resizable) {
        inputElRef.current.addEventListener("textarea:resize", onTextareaResize, false);
      }
      if (clearButton) {
        inputElRef.current.addEventListener("input:empty", onInputEmpty, false);
        inputElRef.current.addEventListener("input:clear", onInputClear, false);
      }
      if (type === "datepicker") {
        f7Calendar.current = f7.calendar.create(_extends36({
          inputEl: inputElRef.current,
          value,
          on: {
            change: function change(calendar, calendarValue) {
              emit(props, "calendarChange", calendarValue);
            }
          }
        }, calendarParams || {}));
      }
      if (type === "colorpicker") {
        f7ColorPicker.current = f7.colorPicker.create(_extends36({
          inputEl: inputElRef.current,
          value,
          on: {
            change: function change(colorPicker, colorPickerValue) {
              emit(props, "colorPickerChange", colorPickerValue);
            }
          }
        }, colorPickerParams || {}));
      }
      f7.input.checkEmptyState(inputElRef.current);
      if (!(validateOnBlur || validateOnBlur === "") && (validate || validate === "") && (typeof value !== "undefined" && value !== null && value !== "" || typeof defaultValue !== "undefined" && defaultValue !== null && defaultValue !== "")) {
        setTimeout(function() {
          validateInput();
        }, 0);
      }
      if (resizable) {
        f7.input.resizeTextarea(inputElRef.current);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (type === "range" || type === "toggle")
      return;
    if (!inputElRef.current)
      return;
    inputElRef.current.removeEventListener("input:notempty", onInputNotEmpty, false);
    if (type === "textarea" && resizable) {
      inputElRef.current.removeEventListener("textarea:resize", onTextareaResize, false);
    }
    if (clearButton) {
      inputElRef.current.removeEventListener("input:empty", onInputEmpty, false);
      inputElRef.current.removeEventListener("input:clear", onInputClear, false);
    }
    if (f7Calendar.current && f7Calendar.current.destroy) {
      f7Calendar.current.destroy();
      f7Calendar.current = null;
    }
    if (f7ColorPicker.current && f7ColorPicker.current.destroy) {
      f7ColorPicker.current.destroy();
      f7ColorPicker.current = null;
    }
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  useIsomorphicLayoutEffect(function() {
    if (!f7)
      return;
    if (updateInputOnDidUpdate.current) {
      if (!inputElRef.current)
        return;
      updateInputOnDidUpdate.current = false;
      f7.input.checkEmptyState(inputElRef.current);
      if (validate && !validateOnBlur) {
        validateInput();
      }
      if (resizable) {
        f7.input.resizeTextarea(inputElRef.current);
      }
    }
  });
  watchProp(colorPickerParams, function(newValue) {
    if (!f7 || !f7ColorPicker.current)
      return;
    extend(f7ColorPicker.current.params, newValue || {});
  });
  watchProp(calendarParams, function(newValue) {
    if (!f7 || !f7Calendar.current)
      return;
    extend(f7Calendar.current.params, newValue || {});
  });
  watchProp(value, function(newValue) {
    if (type === "range" || type === "toggle")
      return;
    if (!f7)
      return;
    updateInputOnDidUpdate.current = true;
    if (f7Calendar.current) {
      f7Calendar.current.setValue(newValue);
    }
    if (f7ColorPicker.current) {
      f7ColorPicker.current.setValue(newValue);
    }
  });
  var domValue = getDomValue();
  var inputHasValue = isInputHasValue();
  var slots = getSlots(props);
  var inputEl;
  var createInput = function createInput2(InputTag, children) {
    var needsValue = type !== "file" && type !== "datepicker" && type !== "colorpicker";
    var needsType = InputTag === "input";
    var inputType = type;
    if (inputType === "datepicker" || inputType === "colorpicker") {
      inputType = "text";
    }
    var inputClassName = classNames(!wrap && className, {
      resizable: inputType === "textarea" && resizable,
      "no-store-data": noFormStoreData || noStoreData || ignoreStoreData,
      "input-invalid": errorMessage && errorMessageForce || inputInvalid,
      "input-with-value": inputHasValue,
      "input-focused": inputFocused
    });
    var inputValue;
    if (needsValue) {
      if (typeof value !== "undefined")
        inputValue = value;
      else
        inputValue = domValue;
    }
    var valueProps = {};
    if (type !== "datepicker" && type !== "colorpicker") {
      if ("value" in props)
        valueProps.value = inputValue;
      if ("defaultValue" in props)
        valueProps.defaultValue = defaultValue;
    }
    return import_react43.default.createElement(InputTag, _extends36({
      ref: inputElRef,
      style: inputStyle,
      name: name2,
      type: needsType ? inputType : void 0,
      placeholder,
      inputMode: inputmode,
      id: inputId,
      size,
      accept,
      autoComplete: autocomplete,
      autoCorrect: autocorrect,
      autoCapitalize: autocapitalize,
      spellCheck: spellcheck,
      autoFocus: autofocus,
      autoSave: autosave,
      checked,
      disabled,
      max,
      maxLength: maxlength,
      min,
      minLength: minlength,
      step,
      multiple,
      readOnly: readonly,
      required,
      pattern,
      validate: typeof validate === "string" && validate.length ? validate : void 0,
      "data-validate": validate === true || validate === "" || validateOnBlur === true || validateOnBlur === "" ? true : void 0,
      "data-validate-on-blur": validateOnBlur === true || validateOnBlur === "" ? true : void 0,
      tabIndex: tabindex,
      "data-error-message": errorMessageForce ? void 0 : errorMessage,
      className: inputClassName,
      onFocus,
      onBlur,
      onInput,
      onChange
    }, valueProps), children);
  };
  if (type === "select" || type === "textarea" || type === "file") {
    if (type === "select") {
      inputEl = createInput("select", slots.default);
    } else if (type === "file") {
      inputEl = createInput("input");
    } else {
      inputEl = createInput("textarea");
    }
  } else if (slots.default && slots.default.length > 0 || !type) {
    inputEl = slots.default;
  } else if (type === "toggle") {
    inputEl = import_react43.default.createElement(toggle_default, {
      checked,
      readonly,
      name: name2,
      value,
      disabled,
      id: inputId,
      onChange
    });
  } else if (type === "range") {
    inputEl = import_react43.default.createElement(range_default, {
      value,
      disabled,
      min,
      max,
      step,
      name: name2,
      id: inputId,
      input: true,
      onRangeChange: onChange
    });
  } else if (type === "texteditor") {
    inputEl = import_react43.default.createElement(text_editor_default, _extends36({
      value,
      resizable,
      placeholder,
      onTextEditorFocus: onFocus,
      onTextEditorBlur: onBlur,
      onTextEditorInput: onInput,
      onTextEditorChange: onChange
    }, textEditorParams));
  } else {
    inputEl = createInput("input");
  }
  if (wrap) {
    var wrapClasses = classNames(className, "input", {
      "input-outline": outline,
      "input-dropdown": dropdown === "auto" ? type === "select" : dropdown,
      "input-invalid": errorMessage && errorMessageForce || inputInvalid
    }, colorClasses(props));
    return import_react43.default.createElement("div", _extends36({
      id,
      className: wrapClasses,
      style,
      ref: elRef
    }, extraAttrs), inputEl, (errorMessage || slots["error-message"] && slots["error-message"].length) && errorMessageForce && import_react43.default.createElement("div", {
      className: "input-error-message"
    }, errorMessage, slots["error-message"]), clearButton && import_react43.default.createElement("span", {
      className: "input-clear-button"
    }), (info || slots.info && slots.info.length) && import_react43.default.createElement("div", {
      className: "input-info"
    }, info, slots.info));
  }
  return inputEl;
});
Input.displayName = "f7-input";
var input_default = Input;

// node_modules/framework7-react/esm/components/link.js
var import_react46 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/tabbar-context.js
var import_react44 = __toESM(require_react());
var TabbarContext = import_react44.default.createContext({
  tabbarHasLabels: false
});

// node_modules/framework7-react/esm/shared/use-smart-select.js
var import_react45 = __toESM(require_react());
var useSmartSelect = function useSmartSelect2(smartSelect, smartSelectParams, f7SmartSelect, getEl) {
  var onMount = function onMount2() {
    f7ready(function() {
      if (smartSelect) {
        var ssParams = extend({
          el: getEl()
        }, smartSelectParams || {});
        f7SmartSelect.current = f7.smartSelect.create(ssParams);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (f7SmartSelect.current && f7SmartSelect.current.destroy) {
      f7SmartSelect.current.destroy();
    }
    f7SmartSelect.current = null;
  };
  (0, import_react45.useEffect)(function() {
    onMount();
    return onDestroy;
  }, []);
};

// node_modules/framework7-react/esm/components/link.js
function _extends37() {
  _extends37 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends37.apply(this, arguments);
}
var Link = (0, import_react46.forwardRef)(function(props, ref) {
  var _f7SmartSelect = (0, import_react46.useRef)(null);
  var className = props.className, id = props.id, style = props.style, children = props.children, noLinkClass = props.noLinkClass, text = props.text, tabLink = props.tabLink, tabLinkActive = props.tabLinkActive, tabbarLabel = props.tabbarLabel, iconOnly = props.iconOnly, badge = props.badge, badgeColor = props.badgeColor, _props$href = props.href, href = _props$href === void 0 ? "#" : _props$href, target = props.target, smartSelect = props.smartSelect, smartSelectParams = props.smartSelectParams;
  var tabbarContext = (0, import_react46.useContext)(TabbarContext);
  var isTabbarLabel = tabbarLabel || tabbarContext.tabbarHasLabels;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react46.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  (0, import_react46.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7SmartSelect: function f7SmartSelect() {
        return _f7SmartSelect.current;
      }
    };
  });
  useTooltip(elRef, props);
  useRouteProps(elRef, props);
  useSmartSelect(smartSelect, smartSelectParams, _f7SmartSelect, function() {
    return elRef.current;
  });
  var textEl;
  var badgeEl;
  if (text) {
    if (badge)
      badgeEl = import_react46.default.createElement(badge_default, {
        color: badgeColor
      }, badge);
    textEl = import_react46.default.createElement("span", {
      className: isTabbarLabel ? "tabbar-label" : ""
    }, text, badgeEl);
  }
  var iconEl = useIcon(props);
  var iconOnlyComputed;
  if (iconOnly || !text && children && children.length === 0 || !text && !children) {
    iconOnlyComputed = true;
  } else {
    iconOnlyComputed = false;
  }
  var classes = classNames(className, {
    link: !(noLinkClass || isTabbarLabel),
    "icon-only": iconOnlyComputed,
    "tab-link": tabLink || tabLink === "",
    "tab-link-active": tabLinkActive,
    "smart-select": smartSelect
  }, colorClasses(props), routerClasses(props), actionsClasses(props));
  var hrefComputed = href;
  if (href === true)
    hrefComputed = "#";
  if (href === false)
    hrefComputed = void 0;
  var attrs = _extends37({
    href: hrefComputed,
    target,
    "data-tab": isStringProp(tabLink) && tabLink || void 0
  }, routerAttrs(props), actionsAttrs(props));
  return import_react46.default.createElement("a", _extends37({
    ref: elRef,
    id,
    style,
    className: classes
  }, attrs, extraAttrs, {
    onClick
  }), iconEl, textEl, children);
});
Link.displayName = "f7-link";
var link_default = Link;

// node_modules/framework7-react/esm/components/list-button.js
var import_react47 = __toESM(require_react());
function _extends38() {
  _extends38 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends38.apply(this, arguments);
}
var ListButton = (0, import_react47.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, title = props.title, text = props.text, tabLink = props.tabLink, tabLinkActive = props.tabLinkActive, link = props.link, href = props.href, target = props.target;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react47.useRef)(null);
  var linkElRef = (0, import_react47.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  (0, import_react47.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(linkElRef, props);
  useRouteProps(linkElRef, props);
  var linkAttrs = _extends38({
    href: typeof link === "boolean" && typeof href === "boolean" ? "#" : link || href,
    target,
    "data-tab": isStringProp(tabLink) && tabLink
  }, routerAttrs(props), actionsAttrs(props));
  var linkClasses = classNames(_extends38({
    "list-button": true,
    "tab-link": tabLink || tabLink === "",
    "tab-link-active": tabLinkActive
  }, colorClasses(props), routerClasses(props), actionsClasses(props)));
  return import_react47.default.createElement("li", _extends38({
    id,
    style,
    className,
    ref: elRef
  }, extraAttrs), import_react47.default.createElement("a", _extends38({
    className: linkClasses
  }, linkAttrs, {
    onClick,
    ref: linkElRef
  }), title, text, children));
});
ListButton.displayName = "f7-list-button";
var list_button_default = ListButton;

// node_modules/framework7-react/esm/components/list-group.js
var import_react49 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/list-context.js
var import_react48 = __toESM(require_react());
var ListContext = import_react48.default.createContext({
  listIsMedia: false,
  listIsSimple: false,
  listIsSortable: false,
  listIsSortableOpposite: false
});

// node_modules/framework7-react/esm/components/list-group.js
function _extends39() {
  _extends39 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends39.apply(this, arguments);
}
var ListGroup = (0, import_react49.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, simpleList = props.simpleList, mediaList = props.mediaList, sortable = props.sortable, sortableOpposite = props.sortableOpposite, sortableTapHold = props.sortableTapHold, sortableMoveElements = props.sortableMoveElements;
  var extraAttrs = getExtraAttrs(props);
  var listContext = (0, import_react49.useContext)(ListContext);
  var elRef = (0, import_react49.useRef)(null);
  (0, import_react49.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "list-group", {
    "media-list": mediaList,
    sortable,
    "sortable-tap-hold": sortableTapHold,
    "sortable-opposite": sortableOpposite
  }, colorClasses(props));
  return import_react49.default.createElement("div", _extends39({
    id,
    style,
    className: classes,
    "data-sortable-move-elements": typeof sortableMoveElements !== "undefined" ? sortableMoveElements.toString() : void 0,
    ref: elRef
  }, extraAttrs), import_react49.default.createElement("ul", null, import_react49.default.createElement(ListContext.Provider, {
    value: {
      listIsMedia: mediaList || listContext.listIsMedia,
      listIsSimple: simpleList || listContext.listIsSimple,
      listIsSortable: sortable || listContext.listIsSortable,
      listIsSortableOpposite: sortableOpposite || listContext.listIsSortableOpposite
    }
  }, children)));
});
ListGroup.displayName = "f7-list-group";
var list_group_default = ListGroup;

// node_modules/framework7-react/esm/components/list-index.js
var import_react50 = __toESM(require_react());
function _extends40() {
  _extends40 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends40.apply(this, arguments);
}
var ListIndex = (0, import_react50.forwardRef)(function(props, ref) {
  var _f7ListIndex = (0, import_react50.useRef)(null);
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$init = props.init, init = _props$init === void 0 ? true : _props$init, listEl = props.listEl, _props$indexes = props.indexes, indexes = _props$indexes === void 0 ? "auto" : _props$indexes, _props$scrollList = props.scrollList, scrollList = _props$scrollList === void 0 ? true : _props$scrollList, _props$label = props.label, label = _props$label === void 0 ? false : _props$label, _props$iosItemHeight = props.iosItemHeight, iosItemHeight = _props$iosItemHeight === void 0 ? 14 : _props$iosItemHeight, _props$mdItemHeight = props.mdItemHeight, mdItemHeight = _props$mdItemHeight === void 0 ? 14 : _props$mdItemHeight, _props$auroraItemHeig = props.auroraItemHeight, auroraItemHeight = _props$auroraItemHeig === void 0 ? 14 : _props$auroraItemHeig;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react50.useRef)(null);
  var update = function update2() {
    if (!_f7ListIndex.current)
      return;
    _f7ListIndex.current.update();
  };
  var scrollListToIndex = function scrollListToIndex2(indexContent) {
    if (!_f7ListIndex.current)
      return;
    _f7ListIndex.current.scrollListToIndex(indexContent);
  };
  (0, import_react50.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7ListIndex: function f7ListIndex() {
        return _f7ListIndex.current;
      },
      update,
      scrollListToIndex
    };
  });
  watchProp(indexes, function(newValue) {
    if (!_f7ListIndex.current)
      return;
    _f7ListIndex.current.params.indexes = newValue;
    update();
  });
  var onMount = function onMount2() {
    if (!init)
      return;
    f7ready(function() {
      _f7ListIndex.current = f7.listIndex.create({
        el: elRef.current,
        listEl,
        indexes,
        iosItemHeight,
        mdItemHeight,
        auroraItemHeight,
        scrollList,
        label,
        on: {
          select: function select(index, itemContent, itemIndex) {
            emit(props, "listIndexSelect", itemContent, itemIndex);
          }
        }
      });
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7ListIndex.current && _f7ListIndex.current.destroy) {
      _f7ListIndex.current.destroy();
    }
    _f7ListIndex.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var classes = classNames(className, "list-index", colorClasses(props));
  return import_react50.default.createElement("div", _extends40({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
ListIndex.displayName = "f7-list-index";
var list_index_default = ListIndex;

// node_modules/framework7-react/esm/components/list-input.js
var import_react51 = __toESM(require_react());
function _extends41() {
  _extends41 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends41.apply(this, arguments);
}
var ListInput = (0, import_react51.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, sortable = props.sortable, media = props.media, _props$dropdown = props.dropdown, dropdown = _props$dropdown === void 0 ? "auto" : _props$dropdown, _props$wrap = props.wrap, wrap = _props$wrap === void 0 ? true : _props$wrap, _props$input = props.input, renderInput = _props$input === void 0 ? true : _props$input, _props$type = props.type, type = _props$type === void 0 ? "text" : _props$type, name2 = props.name, value = props.value, defaultValue = props.defaultValue, inputmode = props.inputmode, readonly = props.readonly, required = props.required, disabled = props.disabled, placeholder = props.placeholder, inputId = props.inputId, size = props.size, accept = props.accept, autocomplete = props.autocomplete, autocorrect = props.autocorrect, autocapitalize = props.autocapitalize, spellcheck = props.spellcheck, autofocus = props.autofocus, autosave = props.autosave, max = props.max, min = props.min, step = props.step, maxlength = props.maxlength, minlength = props.minlength, multiple = props.multiple, inputStyle = props.inputStyle, pattern = props.pattern, validate = props.validate, validateOnBlur = props.validateOnBlur, onValidate = props.onValidate, tabindex = props.tabindex, resizable = props.resizable, clearButton = props.clearButton, noFormStoreData = props.noFormStoreData, noStoreData = props.noStoreData, ignoreStoreData = props.ignoreStoreData, errorMessage = props.errorMessage, errorMessageForce = props.errorMessageForce, info = props.info, outline = props.outline, label = props.label, inlineLabel = props.inlineLabel, floatingLabel = props.floatingLabel, calendarParams = props.calendarParams, colorPickerParams = props.colorPickerParams, textEditorParams = props.textEditorParams;
  var _useState = (0, import_react51.useState)(false), inputInvalid = _useState[0], setInputInvalid = _useState[1];
  var _useState2 = (0, import_react51.useState)(false), inputFocused = _useState2[0], setInputFocused = _useState2[1];
  var listContext = (0, import_react51.useContext)(ListContext);
  var _ref = listContext || {}, _ref$listIsSortable = _ref.listIsSortable, listIsSortable = _ref$listIsSortable === void 0 ? false : _ref$listIsSortable;
  var extraAttrs = getExtraAttrs(props);
  var f7Calendar = (0, import_react51.useRef)(null);
  var f7ColorPicker = (0, import_react51.useRef)(null);
  var elRef = (0, import_react51.useRef)(null);
  var inputElRef = (0, import_react51.useRef)(null);
  var itemContentElRef = (0, import_react51.useRef)(null);
  var updateInputOnDidUpdate = (0, import_react51.useRef)(false);
  var getDomValue = function getDomValue2() {
    if (!inputElRef.current)
      return void 0;
    return inputElRef.current.value;
  };
  var isInputHasValue = function isInputHasValue2() {
    if (type === "datepicker" && Array.isArray(value) && value.length === 0) {
      return false;
    }
    var domValue2 = getDomValue();
    return typeof value === "undefined" ? domValue2 || domValue2 === 0 : value || value === 0;
  };
  var validateInput = function validateInput2() {
    if (!f7 || !inputElRef.current)
      return;
    var validity = inputElRef.current.validity;
    if (!validity)
      return;
    if (!validity.valid) {
      if (onValidate)
        onValidate(false);
      if (inputInvalid !== true) {
        setInputInvalid(true);
      }
    } else {
      if (onValidate)
        onValidate(true);
      if (inputInvalid !== false) {
        setInputInvalid(false);
      }
    }
  };
  var onTextareaResize = function onTextareaResize2(event) {
    emit(props, "textareaResize", event);
  };
  var onInputNotEmpty = function onInputNotEmpty2(event) {
    emit(props, "inputNotEmpty", event);
  };
  var onInputEmpty = function onInputEmpty2(event) {
    emit(props, "inputEmpty", event);
  };
  var onInputClear = function onInputClear2(event) {
    emit(props, "inputClear", event);
  };
  var onInput = function onInput2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    emit.apply(void 0, [props, "input"].concat(args));
    if (!(validateOnBlur || validateOnBlur === "") && (validate || validate === "") && inputElRef.current) {
      validateInput(inputElRef.current);
    }
  };
  var onFocus = function onFocus2() {
    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
      args[_key2] = arguments[_key2];
    }
    emit.apply(void 0, [props, "focus"].concat(args));
    setInputFocused(true);
  };
  var onBlur = function onBlur2() {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    emit.apply(void 0, [props, "blur"].concat(args));
    if ((validate || validate === "" || validateOnBlur || validateOnBlur === "") && inputElRef.current) {
      validateInput(inputElRef.current);
    }
    setInputFocused(false);
  };
  var onChange = function onChange2() {
    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {
      args[_key4] = arguments[_key4];
    }
    emit.apply(void 0, [props, "change"].concat(args));
    if (type === "texteditor") {
      emit(props, "textEditorChange", args[0]);
    }
  };
  (0, import_react51.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var onMount = function onMount2() {
    if (!elRef.current && !itemContentElRef.current)
      return;
    f7ready(function() {
      if (!inputElRef.current)
        return;
      inputElRef.current.addEventListener("input:notempty", onInputNotEmpty, false);
      inputElRef.current.addEventListener("textarea:resize", onTextareaResize, false);
      inputElRef.current.addEventListener("input:empty", onInputEmpty, false);
      inputElRef.current.addEventListener("input:clear", onInputClear, false);
      if (type === "datepicker") {
        f7Calendar.current = f7.calendar.create(_extends41({
          inputEl: inputElRef.current,
          value,
          on: {
            change: function change(calendar, calendarValue) {
              emit(props, "calendarChange", calendarValue);
            }
          }
        }, calendarParams || {}));
      }
      if (type === "colorpicker") {
        f7ColorPicker.current = f7.colorPicker.create(_extends41({
          inputEl: inputElRef.current,
          value,
          on: {
            change: function change(colorPicker, colorPickerValue) {
              emit(props, "colorpicker:change colorPickerChange", colorPickerValue);
            }
          }
        }, colorPickerParams || {}));
      }
      if (!(validateOnBlur || validateOnBlur === "") && (validate || validate === "") && (typeof value !== "undefined" && value !== null && value !== "" || typeof defaultValue !== "undefined" && defaultValue !== null && defaultValue !== "")) {
        setTimeout(function() {
          validateInput();
        }, 0);
      }
      if (type === "textarea" && resizable) {
        f7.input.resizeTextarea(inputElRef.current);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (inputElRef.current) {
      inputElRef.current.removeEventListener("input:notempty", onInputNotEmpty, false);
      inputElRef.current.removeEventListener("textarea:resize", onTextareaResize, false);
      inputElRef.current.removeEventListener("input:empty", onInputEmpty, false);
      inputElRef.current.removeEventListener("input:clear", onInputClear, false);
    }
    if (f7Calendar.current && f7Calendar.current.destroy) {
      f7Calendar.current.destroy();
      f7Calendar.current = null;
    }
    if (f7ColorPicker.current && f7ColorPicker.current.destroy) {
      f7ColorPicker.current.destroy();
      f7ColorPicker.current = null;
    }
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  useIsomorphicLayoutEffect(function() {
    if (!f7)
      return;
    if (updateInputOnDidUpdate.current) {
      if (!inputElRef.current)
        return;
      updateInputOnDidUpdate.current = false;
      if (validate && !validateOnBlur) {
        validateInput();
      }
      if (type === "textarea" && resizable) {
        f7.input.resizeTextarea(inputElRef.current);
      }
    }
  });
  watchProp(colorPickerParams, function(newValue) {
    if (!f7 || !f7ColorPicker.current)
      return;
    extend(f7ColorPicker.current.params, newValue || {});
  });
  watchProp(calendarParams, function(newValue) {
    if (!f7 || !f7Calendar.current)
      return;
    extend(f7Calendar.current.params, newValue || {});
  });
  watchProp(value, function(newValue) {
    if (!f7)
      return;
    updateInputOnDidUpdate.current = true;
    if (f7Calendar.current) {
      f7Calendar.current.setValue(newValue);
    }
    if (f7ColorPicker.current) {
      f7ColorPicker.current.setValue(newValue);
    }
  });
  var slots = getSlots(props);
  var domValue = getDomValue();
  var inputHasValue = isInputHasValue();
  var isSortableComputed = sortable === true || sortable === false ? sortable : listIsSortable;
  var inputEl;
  var createInput = function createInput2(InputTag, children) {
    var needsValue = type !== "file" && type !== "datepicker" && type !== "colorpicker";
    var needsType = InputTag === "input";
    var inputType = type;
    if (inputType === "datepicker" || inputType === "colorpicker") {
      inputType = "text";
    }
    var inputClassName = classNames({
      resizable: inputType === "textarea" && resizable,
      "no-store-data": noFormStoreData || noStoreData || ignoreStoreData,
      "input-invalid": errorMessage && errorMessageForce || inputInvalid,
      "input-with-value": inputHasValue,
      "input-focused": inputFocused
    });
    var inputValue;
    if (needsValue) {
      if (typeof value !== "undefined")
        inputValue = value;
      else
        inputValue = domValue;
    }
    var valueProps = {};
    if (type !== "datepicker" && type !== "colorpicker") {
      if ("value" in props)
        valueProps.value = inputValue;
      if ("defaultValue" in props)
        valueProps.defaultValue = defaultValue;
    }
    return import_react51.default.createElement(InputTag, _extends41({
      ref: inputElRef,
      style: inputStyle,
      name: name2,
      type: needsType ? inputType : void 0,
      placeholder,
      inputMode: inputmode,
      id: inputId,
      size,
      accept,
      autoComplete: autocomplete,
      autoCorrect: autocorrect,
      autoCapitalize: autocapitalize,
      spellCheck: spellcheck,
      autoFocus: autofocus,
      autoSave: autosave,
      disabled,
      max,
      maxLength: maxlength,
      min,
      minLength: minlength,
      step,
      multiple,
      readOnly: readonly,
      required,
      pattern,
      validate: typeof validate === "string" && validate.length ? validate : void 0,
      "data-validate": validate === true || validate === "" || validateOnBlur === true || validateOnBlur === "" ? true : void 0,
      "data-validate-on-blur": validateOnBlur === true || validateOnBlur === "" ? true : void 0,
      tabIndex: tabindex,
      "data-error-message": errorMessageForce ? void 0 : errorMessage,
      className: inputClassName,
      onFocus,
      onBlur,
      onInput,
      onChange
    }, valueProps), children);
  };
  if (renderInput) {
    if (type === "select" || type === "textarea" || type === "file") {
      if (type === "select") {
        inputEl = createInput("select", slots.default);
      } else if (type === "file") {
        inputEl = createInput("input");
      } else {
        inputEl = createInput("textarea");
      }
    } else if (type === "texteditor") {
      inputEl = import_react51.default.createElement(text_editor_default, _extends41({
        value,
        resizable,
        placeholder,
        onTextEditorFocus: onFocus,
        onTextEditorBlur: onBlur,
        onTextEditorInput: onInput,
        onTextEditorChange: onChange
      }, textEditorParams || {}));
    } else {
      inputEl = createInput("input");
    }
  }
  var hasErrorMessage = !!errorMessage || slots["error-message"] && slots["error-message"].length;
  var ItemContent = import_react51.default.createElement("div", {
    ref: itemContentElRef,
    className: classNames("item-content item-input", !wrap && className, !wrap && {
      disabled
    }, !wrap && colorClasses(props), {
      "inline-label": inlineLabel,
      "item-input-outline": outline,
      "item-input-focused": inputFocused,
      "item-input-with-info": !!info || slots.info && slots.info.length,
      "item-input-with-value": inputHasValue,
      "item-input-with-error-message": hasErrorMessage && errorMessageForce || inputInvalid,
      "item-input-invalid": hasErrorMessage && errorMessageForce || inputInvalid
    })
  }, slots["content-start"], (media || slots.media) && import_react51.default.createElement("div", {
    className: "item-media"
  }, media && import_react51.default.createElement("img", {
    src: media
  }), slots.media), import_react51.default.createElement("div", {
    className: "item-inner"
  }, slots["inner-start"], (label || slots.label) && import_react51.default.createElement("div", {
    className: classNames("item-title item-label", {
      "item-floating-label": floatingLabel
    })
  }, label, slots.label), import_react51.default.createElement("div", {
    className: classNames("item-input-wrap", {
      "input-dropdown": dropdown === "auto" ? type === "select" : dropdown
    })
  }, inputEl, slots.input, hasErrorMessage && errorMessageForce && import_react51.default.createElement("div", {
    className: "item-input-error-message"
  }, errorMessage, slots["error-message"]), clearButton && import_react51.default.createElement("span", {
    className: "input-clear-button"
  }), (info || slots.info) && import_react51.default.createElement("div", {
    className: "item-input-info"
  }, info, slots.info)), slots.inner, slots["inner-end"]), slots.content, slots["content-end"]);
  if (!wrap) {
    return ItemContent;
  }
  return import_react51.default.createElement("li", _extends41({
    ref: elRef,
    id,
    style,
    className: classNames(className, {
      disabled
    }, colorClasses(props))
  }, extraAttrs), slots["root-start"], ItemContent, isSortableComputed && import_react51.default.createElement("div", {
    className: "sortable-handler"
  }), slots.root, slots["root-end"]);
});
ListInput.displayName = "f7-list-input";
var list_input_default = ListInput;

// node_modules/framework7-react/esm/components/list-item-cell.js
var import_react52 = __toESM(require_react());
function _extends42() {
  _extends42 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends42.apply(this, arguments);
}
var ListItemCell = (0, import_react52.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react52.useRef)(null);
  (0, import_react52.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "item-cell", colorClasses(props));
  return import_react52.default.createElement("div", _extends42({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
ListItemCell.displayName = "f7-list-item-cell";
var list_item_cell_default = ListItemCell;

// node_modules/framework7-react/esm/components/list-item-content.js
var import_react53 = __toESM(require_react());
var ListItemContent = function ListItemContent2(props) {
  var indeterminate = props.indeterminate, radio = props.radio, checkbox = props.checkbox, value = props.value, name2 = props.name, readonly = props.readonly, disabled = props.disabled, checked = props.checked, defaultChecked = props.defaultChecked, required = props.required, media = props.media, header = props.header, footer = props.footer, title = props.title, subtitle = props.subtitle, text = props.text, after = props.after, badge = props.badge, badgeColor = props.badgeColor, radioIcon = props.radioIcon, swipeout = props.swipeout, sortable = props.sortable, accordionItem = props.accordionItem, onChange = props.onChange, onClick = props.onClick, isMediaComputed = props.isMediaComputed, isSortableComputed = props.isSortableComputed, isSortableOppositeComputed = props.isSortableOppositeComputed, slots = props.slots;
  var inputElRef = (0, import_react53.useRef)(null);
  (0, import_react53.useEffect)(function() {
    if (inputElRef.current) {
      inputElRef.current.indeterminate = !!indeterminate;
    }
  }, [indeterminate]);
  var titleEl;
  var afterWrapEl;
  var afterEl;
  var badgeEl;
  var innerEl;
  var titleRowEl;
  var subtitleEl;
  var textEl;
  var mediaEl;
  var inputEl;
  var inputIconEl;
  var headerEl;
  var footerEl;
  if (radio || checkbox) {
    inputEl = import_react53.default.createElement("input", {
      ref: inputElRef,
      value,
      name: name2,
      checked,
      defaultChecked,
      readOnly: readonly,
      disabled,
      required,
      type: radio ? "radio" : "checkbox",
      onChange
    });
    inputIconEl = import_react53.default.createElement("i", {
      className: "icon icon-" + (radio ? "radio" : "checkbox")
    });
  }
  if (media || slots.media) {
    var mediaImgEl;
    if (media) {
      mediaImgEl = import_react53.default.createElement("img", {
        src: media
      });
    }
    mediaEl = import_react53.default.createElement("div", {
      className: "item-media"
    }, mediaImgEl, slots.media);
  }
  if (header || slots.header) {
    headerEl = import_react53.default.createElement("div", {
      className: "item-header"
    }, header, slots.header);
  }
  if (footer || slots.footer) {
    footerEl = import_react53.default.createElement("div", {
      className: "item-footer"
    }, footer, slots.footer);
  }
  if (title || slots.title || !isMediaComputed && headerEl || !isMediaComputed && footerEl) {
    titleEl = import_react53.default.createElement("div", {
      className: "item-title"
    }, !isMediaComputed && headerEl, title, slots.title, !isMediaComputed && footerEl);
  }
  if (subtitle || slots.subtitle) {
    subtitleEl = import_react53.default.createElement("div", {
      className: "item-subtitle"
    }, subtitle, slots.subtitle);
  }
  if (text || slots.text) {
    textEl = import_react53.default.createElement("div", {
      className: "item-text"
    }, text, slots.text);
  }
  if (after || badge || slots.after) {
    if (after) {
      afterEl = import_react53.default.createElement("span", null, after);
    }
    if (badge) {
      badgeEl = import_react53.default.createElement(badge_default, {
        color: badgeColor
      }, badge);
    }
    afterWrapEl = import_react53.default.createElement("div", {
      className: "item-after"
    }, slots["after-start"], afterEl, badgeEl, slots.after, slots["after-end"]);
  }
  if (isMediaComputed) {
    titleRowEl = import_react53.default.createElement("div", {
      className: "item-title-row"
    }, slots["before-title"], titleEl, slots["after-title"], afterWrapEl);
    innerEl = import_react53.default.createElement("div", {
      className: "item-inner"
    }, slots["inner-start"], headerEl, titleRowEl, subtitleEl, textEl, swipeout || accordionItem ? null : slots.default, slots.inner, footerEl, slots["inner-end"]);
  } else {
    innerEl = import_react53.default.createElement("div", {
      className: "item-inner"
    }, slots["inner-start"], slots["before-title"], titleEl, slots["after-title"], afterWrapEl, swipeout || accordionItem ? null : slots.default, slots.inner, slots["inner-end"]);
  }
  var ItemContentTag = checkbox || radio ? "label" : "div";
  var classes = classNames("item-content", {
    "item-checkbox": checkbox,
    "item-radio": radio,
    "item-radio-icon-start": radio && radioIcon === "start",
    "item-radio-icon-end": radio && radioIcon === "end"
  }, colorClasses(props));
  return import_react53.default.createElement(ItemContentTag, {
    className: classes,
    onClick
  }, isSortableComputed && sortable !== false && isSortableOppositeComputed && import_react53.default.createElement("div", {
    className: "sortable-handler"
  }), slots["content-start"], inputEl, inputIconEl, mediaEl, innerEl, slots.content, slots["content-end"]);
};
ListItemContent.displayName = "f7-list-item-content";
var list_item_content_default = ListItemContent;

// node_modules/framework7-react/esm/components/list-item-row.js
var import_react54 = __toESM(require_react());
function _extends43() {
  _extends43 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends43.apply(this, arguments);
}
var ListItemRow = (0, import_react54.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react54.useRef)(null);
  (0, import_react54.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "item-row", colorClasses(props));
  return import_react54.default.createElement("div", _extends43({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
ListItemRow.displayName = "f7-list-item-row";
var list_item_row_default = ListItemRow;

// node_modules/framework7-react/esm/components/list-item.js
var import_react55 = __toESM(require_react());
function _extends44() {
  _extends44 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends44.apply(this, arguments);
}
var ListItem = (0, import_react55.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, title = props.title, link = props.link, target = props.target, tabLink = props.tabLink, tabLinkActive = props.tabLinkActive, selected = props.selected, mediaItem = props.mediaItem, mediaList = props.mediaList, divider = props.divider, groupTitle = props.groupTitle, swipeout = props.swipeout, swipeoutOpened = props.swipeoutOpened, sortable = props.sortable, sortableOpposite = props.sortableOpposite, accordionItem = props.accordionItem, accordionItemOpened = props.accordionItemOpened, smartSelect = props.smartSelect, smartSelectParams = props.smartSelectParams, noChevron = props.noChevron, chevronCenter = props.chevronCenter, checkbox = props.checkbox, radio = props.radio, disabled = props.disabled, virtualListIndex = props.virtualListIndex, href = props.href;
  var listContext = (0, import_react55.useContext)(ListContext);
  var _ref = listContext || {}, _ref$listIsMedia = _ref.listIsMedia, listIsMedia = _ref$listIsMedia === void 0 ? false : _ref$listIsMedia, _ref$listIsSortable = _ref.listIsSortable, listIsSortable = _ref$listIsSortable === void 0 ? false : _ref$listIsSortable, _ref$listIsSortableOp = _ref.listIsSortableOpposite, listIsSortableOpposite = _ref$listIsSortableOp === void 0 ? false : _ref$listIsSortableOp, _ref$listIsSimple = _ref.listIsSimple, listIsSimple = _ref$listIsSimple === void 0 ? false : _ref$listIsSimple;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react55.useRef)(null);
  var linkElRef = (0, import_react55.useRef)(null);
  var _f7SmartSelect = (0, import_react55.useRef)(null);
  var onClick = function onClick2(event) {
    if (event.target.tagName.toLowerCase() !== "input") {
      emit(props, "click", event);
    }
  };
  var onSwipeoutOverswipeEnter = function onSwipeoutOverswipeEnter2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutOverswipeEnter");
  };
  var onSwipeoutOverswipeExit = function onSwipeoutOverswipeExit2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutOverswipeExit");
  };
  var onSwipeoutDeleted = function onSwipeoutDeleted2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutDeleted");
  };
  var onSwipeoutDelete = function onSwipeoutDelete2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutDelete");
  };
  var onSwipeoutClose = function onSwipeoutClose2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutClose");
  };
  var onSwipeoutClosed = function onSwipeoutClosed2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutClosed");
  };
  var onSwipeoutOpen = function onSwipeoutOpen2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutOpen");
  };
  var onSwipeoutOpened = function onSwipeoutOpened2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeoutOpened");
  };
  var onSwipeout = function onSwipeout2(el, progress) {
    if (elRef.current !== el)
      return;
    emit(props, "swipeout", progress);
  };
  var onAccBeforeClose = function onAccBeforeClose2(el, prevent) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionBeforeClose", prevent);
  };
  var onAccClose = function onAccClose2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionClose");
  };
  var onAccClosed = function onAccClosed2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionClosed");
  };
  var onAccBeforeOpen = function onAccBeforeOpen2(el, prevent) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionBeforeOpen", prevent);
  };
  var onAccOpen = function onAccOpen2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionOpen");
  };
  var onAccOpened = function onAccOpened2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "accordionOpened");
  };
  var onChange = function onChange2(event) {
    emit(props, "change", event);
  };
  (0, import_react55.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7SmartSelect: function f7SmartSelect() {
        return _f7SmartSelect.current;
      }
    };
  });
  useTooltip(elRef, props);
  useRouteProps(linkElRef, props);
  watchProp(swipeoutOpened, function(newValue) {
    if (!swipeout || !elRef.current || !f7)
      return;
    if (newValue) {
      f7.swipeout.open(elRef.current);
    } else {
      f7.swipeout.close(elRef.current);
    }
  });
  var attachEvents = function attachEvents2() {
    f7ready(function() {
      if (swipeout) {
        f7.on("swipeoutOpen", onSwipeoutOpen);
        f7.on("swipeoutOpened", onSwipeoutOpened);
        f7.on("swipeoutClose", onSwipeoutClose);
        f7.on("swipeoutClosed", onSwipeoutClosed);
        f7.on("swipeoutDelete", onSwipeoutDelete);
        f7.on("swipeoutDeleted", onSwipeoutDeleted);
        f7.on("swipeoutOverswipeEnter", onSwipeoutOverswipeEnter);
        f7.on("swipeoutOverswipeExit", onSwipeoutOverswipeExit);
        f7.on("swipeout", onSwipeout);
      }
      if (accordionItem) {
        f7.on("accordionBeforeOpen", onAccBeforeOpen);
        f7.on("accordionOpen", onAccOpen);
        f7.on("accordionOpened", onAccOpened);
        f7.on("accordionBeforeClose", onAccBeforeClose);
        f7.on("accordionClose", onAccClose);
        f7.on("accordionClosed", onAccClosed);
      }
    });
  };
  var detachEvents = function detachEvents2() {
    if (!f7)
      return;
    f7.off("swipeoutOpen", onSwipeoutOpen);
    f7.off("swipeoutOpened", onSwipeoutOpened);
    f7.off("swipeoutClose", onSwipeoutClose);
    f7.off("swipeoutClosed", onSwipeoutClosed);
    f7.off("swipeoutDelete", onSwipeoutDelete);
    f7.off("swipeoutDeleted", onSwipeoutDeleted);
    f7.off("swipeoutOverswipeEnter", onSwipeoutOverswipeEnter);
    f7.off("swipeoutOverswipeExit", onSwipeoutOverswipeExit);
    f7.off("swipeout", onSwipeout);
    f7.off("accordionBeforeOpen", onAccBeforeOpen);
    f7.off("accordionOpen", onAccOpen);
    f7.off("accordionOpened", onAccOpened);
    f7.off("accordionBeforeClose", onAccBeforeClose);
    f7.off("accordionClose", onAccClose);
    f7.off("accordionClosed", onAccClosed);
  };
  useSmartSelect(smartSelect, smartSelectParams, _f7SmartSelect, function() {
    return elRef.current.querySelector("a.smart-select");
  });
  useIsomorphicLayoutEffect(function() {
    f7ready(function() {
      if (swipeout && swipeoutOpened) {
        f7.swipeout.open(elRef.current);
      }
    });
  }, []);
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var slots = getSlots(props);
  var linkEl;
  var itemContentEl;
  var isMediaComputed = mediaItem || mediaList || listIsMedia;
  var isSortableComputed = sortable === true || sortable === false ? sortable : listIsSortable;
  var isSortableOppositeComputed = isSortableComputed && (sortableOpposite || listIsSortableOpposite);
  if (!listIsSimple) {
    itemContentEl = import_react55.default.createElement(list_item_content_default, _extends44({}, props, {
      slots,
      onChange,
      onClick: link || href || accordionItem || smartSelect ? void 0 : onClick,
      isMediaComputed,
      isSortableComputed,
      isSortableOppositeComputed
    }));
    if (link || href || accordionItem || smartSelect) {
      var linkAttrs = _extends44({
        href: link === true ? "" : link || href,
        target,
        "data-tab": isStringProp(tabLink) && tabLink || void 0
      }, routerAttrs(props), actionsAttrs(props));
      var linkClasses = classNames({
        "item-link": true,
        "smart-select": smartSelect,
        "tab-link": tabLink || tabLink === "",
        "tab-link-active": tabLinkActive,
        "item-selected": selected
      }, routerClasses(props), actionsClasses(props));
      linkEl = import_react55.default.createElement("a", _extends44({
        ref: linkElRef,
        className: linkClasses
      }, linkAttrs, {
        onClick
      }), itemContentEl);
    }
  }
  var liClasses = classNames(className, {
    "item-divider": divider,
    "list-group-title": groupTitle,
    "media-item": isMediaComputed,
    swipeout,
    "accordion-item": accordionItem,
    "accordion-item-opened": accordionItemOpened,
    disabled: disabled && !(radio || checkbox),
    "no-chevron": noChevron,
    "chevron-center": chevronCenter,
    "disallow-sorting": sortable === false
  }, colorClasses(props));
  if (divider || groupTitle) {
    return import_react55.default.createElement("li", {
      ref: elRef,
      id,
      style,
      className: liClasses,
      "data-virtual-list-index": virtualListIndex,
      onClick
    }, import_react55.default.createElement("span", null, title, children));
  }
  if (listIsSimple) {
    return import_react55.default.createElement("li", {
      ref: elRef,
      id,
      style,
      className: liClasses,
      "data-virtual-list-index": virtualListIndex,
      onClick
    }, title, children);
  }
  var linkItemEl = link || href || smartSelect || accordionItem ? linkEl : itemContentEl;
  return import_react55.default.createElement("li", _extends44({
    ref: elRef,
    id,
    style,
    className: liClasses,
    "data-virtual-list-index": virtualListIndex
  }, extraAttrs), slots["root-start"], swipeout ? import_react55.default.createElement("div", {
    className: "swipeout-content"
  }, linkItemEl) : linkItemEl, isSortableComputed && sortable !== false && !isSortableOppositeComputed && import_react55.default.createElement("div", {
    className: "sortable-handler"
  }), (swipeout || accordionItem) && slots.default, slots.root, slots["root-end"]);
});
ListItem.displayName = "f7-list-item";
var list_item_default = ListItem;

// node_modules/framework7-react/esm/components/list.js
var import_react56 = __toESM(require_react());
function _extends45() {
  _extends45 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends45.apply(this, arguments);
}
var List = (0, import_react56.forwardRef)(function(props, ref) {
  var _f7VirtualList = (0, import_react56.useRef)(null);
  var className = props.className, id = props.id, style = props.style, inset = props.inset, xsmallInset = props.xsmallInset, smallInset = props.smallInset, mediumInset = props.mediumInset, largeInset = props.largeInset, xlargeInset = props.xlargeInset, mediaList = props.mediaList, sortable = props.sortable, sortableTapHold = props.sortableTapHold, sortableEnabled = props.sortableEnabled, sortableMoveElements = props.sortableMoveElements, sortableOpposite = props.sortableOpposite, accordionList = props.accordionList, accordionOpposite = props.accordionOpposite, contactsList = props.contactsList, simpleList = props.simpleList, linksList = props.linksList, menuList = props.menuList, noHairlines = props.noHairlines, noHairlinesBetween = props.noHairlinesBetween, noHairlinesMd = props.noHairlinesMd, noHairlinesBetweenMd = props.noHairlinesBetweenMd, noHairlinesIos = props.noHairlinesIos, noHairlinesBetweenIos = props.noHairlinesBetweenIos, noHairlinesAurora = props.noHairlinesAurora, noHairlinesBetweenAurora = props.noHairlinesBetweenAurora, noChevron = props.noChevron, chevronCenter = props.chevronCenter, tab = props.tab, tabActive = props.tabActive, form = props.form, formStoreData = props.formStoreData, inlineLabels = props.inlineLabels, virtualList = props.virtualList, virtualListParams = props.virtualListParams;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react56.useRef)(null);
  var onSubmit = function onSubmit2(event) {
    emit(props, "submit", event);
  };
  var onSortableEnable = function onSortableEnable2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "sortableEnable");
  };
  var onSortableDisable = function onSortableDisable2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "sortableDisable");
  };
  var onSortableSort = function onSortableSort2(el, sortData, listEl) {
    if (elRef.current !== listEl)
      return;
    emit(props, "sortableSort", sortData);
  };
  var onSortableMove = function onSortableMove2(el, listEl) {
    if (elRef.current !== listEl)
      return;
    emit(props, "sortableMove", el, listEl);
  };
  (0, import_react56.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7VirtualList: function f7VirtualList() {
        return _f7VirtualList.current;
      }
    };
  });
  useTab(elRef, props);
  var attachEvents = function attachEvents2() {
    f7ready(function() {
      f7.on("sortableEnable", onSortableEnable);
      f7.on("sortableDisable", onSortableDisable);
      f7.on("sortableSort", onSortableSort);
      f7.on("sortableMove", onSortableMove);
    });
  };
  var detachEvents = function detachEvents2() {
    if (!f7)
      return;
    f7.off("sortableEnable", onSortableEnable);
    f7.off("sortableDisable", onSortableDisable);
    f7.off("sortableSort", onSortableSort);
    f7.off("sortableMove", onSortableMove);
  };
  var onMount = function onMount2() {
    f7ready(function() {
      if (!virtualList)
        return;
      var vlParams = virtualListParams || {};
      if (!vlParams.renderItem && !vlParams.renderExternal)
        return;
      _f7VirtualList.current = f7.virtualList.create(extend({
        el: elRef.current,
        on: {
          itemBeforeInsert: function itemBeforeInsert(itemEl, item) {
            var vl = this;
            emit(props, "virtualItemBeforeInsert", vl, itemEl, item);
          },
          beforeClear: function beforeClear(fragment) {
            var vl = this;
            emit(props, "virtualBeforeClear", vl, fragment);
          },
          itemsBeforeInsert: function itemsBeforeInsert(fragment) {
            var vl = this;
            emit(props, "virtualItemsBeforeInsert", vl, fragment);
          },
          itemsAfterInsert: function itemsAfterInsert(fragment) {
            var vl = this;
            emit(props, "virtualItemsAfterInsert", vl, fragment);
          }
        }
      }, vlParams));
    });
  };
  var onDestroy = function onDestroy2() {
    if (!f7)
      return;
    if (!(virtualList && _f7VirtualList.current))
      return;
    if (_f7VirtualList.current.destroy)
      _f7VirtualList.current.destroy();
    _f7VirtualList.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var slots = getSlots(props);
  var slotsList = slots.list, slotsDefault = slots.default;
  var rootChildrenBeforeList = [];
  var rootChildrenAfterList = [];
  var ulChildren = slotsList || [];
  var flattenSlots = flattenArray(slotsDefault);
  var wasUlChild = false;
  flattenSlots.forEach(function(child) {
    if (typeof child === "undefined")
      return;
    var tag = child.type && (child.type.displayName || child.type.name);
    if (!tag && typeof child.type === "string") {
      tag = child.type;
    }
    if (!tag || tag && !(tag === "li" || tag.indexOf("f7-list-item") >= 0 || tag.indexOf("f7-list-button") >= 0 || tag.indexOf("f7-list-input") >= 0)) {
      if (wasUlChild)
        rootChildrenAfterList.push(child);
      else
        rootChildrenBeforeList.push(child);
    } else if (tag) {
      wasUlChild = true;
      ulChildren.push(child);
    }
  });
  var ListTag = form ? "form" : "div";
  var classes = classNames(className, "list", {
    inset,
    "xsmall-inset": xsmallInset,
    "small-inset": smallInset,
    "medium-inset": mediumInset,
    "large-inset": largeInset,
    "xlarge-inset": xlargeInset,
    "media-list": mediaList,
    "simple-list": simpleList,
    "links-list": linksList,
    "menu-list": menuList,
    sortable,
    "sortable-tap-hold": sortableTapHold,
    "sortable-enabled": sortableEnabled,
    "sortable-opposite": sortableOpposite,
    "accordion-list": accordionList,
    "accordion-opposite": accordionOpposite,
    "contacts-list": contactsList,
    "virtual-list": virtualList,
    tab,
    "tab-active": tabActive,
    "no-hairlines": noHairlines,
    "no-hairlines-md": noHairlinesMd,
    "no-hairlines-ios": noHairlinesIos,
    "no-hairlines-aurora": noHairlinesAurora,
    "no-hairlines-between": noHairlinesBetween,
    "no-hairlines-between-md": noHairlinesBetweenMd,
    "no-hairlines-between-ios": noHairlinesBetweenIos,
    "no-hairlines-between-aurora": noHairlinesBetweenAurora,
    "form-store-data": formStoreData,
    "inline-labels": inlineLabels,
    "no-chevron": noChevron,
    "chevron-center": chevronCenter
  }, colorClasses(props));
  return import_react56.default.createElement(ListTag, _extends45({
    id,
    ref: elRef,
    style,
    className: classes
  }, extraAttrs, {
    "data-sortable-move-elements": typeof sortableMoveElements !== "undefined" ? sortableMoveElements.toString() : void 0,
    onSubmit
  }), import_react56.default.createElement(ListContext.Provider, {
    value: {
      listIsMedia: mediaList,
      listIsSimple: simpleList,
      listIsSortable: sortable,
      listIsSortableOpposite: sortableOpposite
    }
  }, slots["before-list"], rootChildrenBeforeList, ulChildren.length > 0 && import_react56.default.createElement("ul", null, ulChildren), slots["after-list"], rootChildrenAfterList));
});
List.displayName = "f7-list";
var list_default = List;

// node_modules/framework7-react/esm/components/login-screen-title.js
var import_react57 = __toESM(require_react());
function _extends46() {
  _extends46 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends46.apply(this, arguments);
}
var LoginScreenTitle = (0, import_react57.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react57.useRef)(null);
  (0, import_react57.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "login-screen-title", colorClasses(props));
  return import_react57.default.createElement("div", _extends46({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
LoginScreenTitle.displayName = "f7-login-screen-title";
var login_screen_title_default = LoginScreenTitle;

// node_modules/framework7-react/esm/components/login-screen.js
var import_react58 = __toESM(require_react());
function _extends47() {
  _extends47 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends47.apply(this, arguments);
}
var LoginScreen = (0, import_react58.forwardRef)(function(props, ref) {
  var _f7LoginScreen = (0, import_react58.useRef)(null);
  var className = props.className, id = props.id, style = props.style, children = props.children, opened = props.opened, animate = props.animate, containerEl = props.containerEl;
  var extraAttrs = getExtraAttrs(props);
  var isOpened = (0, import_react58.useRef)(opened);
  var isClosing = (0, import_react58.useRef)(false);
  var elRef = (0, import_react58.useRef)(null);
  var onOpen = function onOpen2(instance) {
    isOpened.current = true;
    isClosing.current = false;
    emit(props, "loginScreenOpen", instance);
  };
  var onOpened = function onOpened2(instance) {
    emit(props, "loginScreenOpened", instance);
  };
  var onClose = function onClose2(instance) {
    isOpened.current = false;
    isClosing.current = true;
    emit(props, "loginScreenClose", instance);
  };
  var onClosed = function onClosed2(instance) {
    isClosing.current = false;
    emit(props, "loginScreenClosed", instance);
  };
  (0, import_react58.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7LoginScreen: function f7LoginScreen() {
        return _f7LoginScreen.current;
      }
    };
  });
  watchProp(opened, function(value) {
    if (!_f7LoginScreen.current)
      return;
    if (value) {
      _f7LoginScreen.current.open();
    } else {
      _f7LoginScreen.current.close();
    }
  });
  var modalEvents = function modalEvents2(method) {
    if (!_f7LoginScreen.current)
      return;
    _f7LoginScreen.current[method]("open", onOpen);
    _f7LoginScreen.current[method]("opened", onOpened);
    _f7LoginScreen.current[method]("close", onClose);
    _f7LoginScreen.current[method]("closed", onClosed);
  };
  var onMount = function onMount2() {
    if (!elRef.current)
      return;
    f7ready(function() {
      var loginScreenParams = {
        el: elRef.current
      };
      if ("animate" in props)
        loginScreenParams.animate = animate;
      if ("containerEl" in props)
        loginScreenParams.containerEl = containerEl;
      _f7LoginScreen.current = f7.loginScreen.create(loginScreenParams);
      modalEvents("on");
      if (opened) {
        _f7LoginScreen.current.open(false);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7LoginScreen.current) {
      _f7LoginScreen.current.destroy();
    }
    _f7LoginScreen.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    modalEvents("on");
    return function() {
      modalEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var classes = classNames(className, "login-screen", modalStateClasses({
    isOpened,
    isClosing
  }), colorClasses(props));
  return import_react58.default.createElement("div", _extends47({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
LoginScreen.displayName = "f7-login-screen";
var login_screen_default = LoginScreen;

// node_modules/framework7-react/esm/components/menu-dropdown-item.js
var import_react59 = __toESM(require_react());
function _extends48() {
  _extends48 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends48.apply(this, arguments);
}
var MenuDropdownItem = (0, import_react59.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, link = props.link, href = props.href, target = props.target, text = props.text, divider = props.divider, menuClose = props.menuClose;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react59.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  (0, import_react59.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useRouteProps(elRef, props);
  var isLink = link || href || href === "";
  var Tag = isLink ? "a" : "div";
  var classes = classNames({
    "menu-dropdown-link": isLink && !divider,
    "menu-dropdown-item": !isLink && !divider,
    "menu-dropdown-divider": divider
  }, className, colorClasses(props), routerClasses(props), actionsClasses(props), {
    "menu-close": typeof menuClose === "undefined"
  });
  var hrefComputed = href;
  if (typeof hrefComputed === "undefined" && link)
    hrefComputed = "#";
  var attrs = _extends48({
    href: hrefComputed,
    target
  }, routerAttrs(props), actionsAttrs(props));
  return import_react59.default.createElement(Tag, _extends48({
    className: classes,
    id,
    style,
    ref: elRef
  }, attrs, extraAttrs, {
    onClick
  }), text, children);
});
MenuDropdownItem.displayName = "f7-menu-dropdown-item";
var menu_dropdown_item_default = MenuDropdownItem;

// node_modules/framework7-react/esm/components/menu-dropdown.js
var import_react60 = __toESM(require_react());
function _extends49() {
  _extends49 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends49.apply(this, arguments);
}
var MenuDropdown = (0, import_react60.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, contentHeight = props.contentHeight, position = props.position, left = props.left, center = props.center, right = props.right;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react60.useRef)(null);
  (0, import_react60.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var positionComputed = position || "left";
  if (left)
    positionComputed = "left";
  if (center)
    positionComputed = "center";
  if (right)
    positionComputed = "right";
  var classes = classNames("menu-dropdown", "menu-dropdown-" + positionComputed, colorClasses(props), className);
  return import_react60.default.createElement("div", _extends49({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react60.default.createElement("div", {
    className: "menu-dropdown-content",
    style: {
      height: contentHeight
    }
  }, children));
});
MenuDropdown.displayName = "f7-menu-dropdown";
var menu_dropdown_default = MenuDropdown;

// node_modules/framework7-react/esm/components/menu-item.js
var import_react61 = __toESM(require_react());
function _extends50() {
  _extends50 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends50.apply(this, arguments);
}
var MenuItem = (0, import_react61.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, link = props.link, href = props.href, target = props.target, text = props.text, dropdown = props.dropdown, iconOnly = props.iconOnly;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react61.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  var onOpened = function onOpened2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "menuOpened", el);
  };
  var onClosed = function onClosed2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "menuClosed", el);
  };
  (0, import_react61.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTooltip(elRef, props);
  useRouteProps(elRef, props);
  var attachEvents = function attachEvents2() {
    f7ready(function() {
      f7.on("menuOpened", onOpened);
      f7.on("menuClosed", onClosed);
    });
  };
  var detachEvents = function detachEvents2() {
    f7.off("menuOpened", onOpened);
    f7.off("menuClosed", onOpened);
  };
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var iconEl = useIcon(props);
  var slots = getSlots(props);
  var iconOnlyComputed;
  if (iconOnly || !text && slots.text && slots.text.length === 0 || !text && !slots.text) {
    iconOnlyComputed = true;
  } else {
    iconOnlyComputed = false;
  }
  var isLink = link || href || href === "";
  var Tag = isLink ? "a" : "div";
  var isDropdown = dropdown || dropdown === "";
  var classes = classNames({
    "menu-item": true,
    "menu-item-dropdown": isDropdown,
    "icon-only": iconOnlyComputed
  }, className, colorClasses(props), routerClasses(props), actionsClasses(props));
  var hrefComputed = href;
  if (typeof hrefComputed === "undefined" && link)
    hrefComputed = "#";
  var attrs = _extends50({
    href: hrefComputed,
    target
  }, routerAttrs(props), actionsAttrs(props));
  return import_react61.default.createElement(Tag, _extends50({
    ref: elRef,
    className: classes,
    id,
    style
  }, attrs, extraAttrs, {
    onClick
  }), (text || slots.text && slots.text.length || iconEl) && import_react61.default.createElement("div", {
    className: "menu-item-content"
  }, text, iconEl, slots.text), slots.default);
});
MenuItem.displayName = "f7-menu-item";
var menu_item_default = MenuItem;

// node_modules/framework7-react/esm/components/menu.js
var import_react62 = __toESM(require_react());
function _extends51() {
  _extends51 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends51.apply(this, arguments);
}
var Menu = (0, import_react62.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react62.useRef)(null);
  (0, import_react62.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames("menu", colorClasses(props), className);
  return import_react62.default.createElement("div", _extends51({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react62.default.createElement("div", {
    className: "menu-inner"
  }, children));
});
Menu.displayName = "f7-menu";
var menu_default = Menu;

// node_modules/framework7-react/esm/components/message.js
var import_react63 = __toESM(require_react());
function _extends52() {
  _extends52 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends52.apply(this, arguments);
}
var Message = (0, import_react63.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, text = props.text, name2 = props.name, avatar = props.avatar, _props$type = props.type, type = _props$type === void 0 ? "sent" : _props$type, image = props.image, header = props.header, footer = props.footer, textHeader = props.textHeader, textFooter = props.textFooter, first = props.first, last = props.last, tail = props.tail, sameName = props.sameName, sameHeader = props.sameHeader, sameFooter = props.sameFooter, sameAvatar = props.sameAvatar, typing = props.typing;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react63.useRef)(null);
  var onClick = function onClick2(event) {
    emit(props, "click", event);
  };
  var onNameClick = function onNameClick2(event) {
    emit(props, "clickName", event);
  };
  var onTextClick = function onTextClick2(event) {
    emit(props, "clickText", event);
  };
  var onAvatarClick = function onAvatarClick2(event) {
    emit(props, "clickAvatar", event);
  };
  var onHeaderClick = function onHeaderClick2(event) {
    emit(props, "clickHeader", event);
  };
  var onFooterClick = function onFooterClick2(event) {
    emit(props, "clickFooter", event);
  };
  var onBubbleClick = function onBubbleClick2(event) {
    emit(props, "clickBubble", event);
  };
  (0, import_react63.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var slots = getSlots(props);
  var classes = classNames(className, "message", {
    "message-sent": type === "sent",
    "message-received": type === "received",
    "message-typing": typing,
    "message-first": first,
    "message-last": last,
    "message-tail": tail,
    "message-same-name": sameName,
    "message-same-header": sameHeader,
    "message-same-footer": sameFooter,
    "message-same-avatar": sameAvatar
  }, colorClasses(props));
  return import_react63.default.createElement("div", _extends52({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), slots.start, (avatar || slots.avatar) && import_react63.default.createElement("div", {
    className: "message-avatar",
    style: {
      backgroundImage: avatar && "url(" + avatar + ")"
    },
    onClick: onAvatarClick
  }, slots.avatar), import_react63.default.createElement("div", {
    className: "message-content"
  }, slots["content-start"], (slots.name || name2) && import_react63.default.createElement("div", {
    className: "message-name",
    onClick: onNameClick
  }, name2, slots.name), (slots.header || header) && import_react63.default.createElement("div", {
    className: "message-header",
    onClick: onHeaderClick
  }, header, slots.header), import_react63.default.createElement("div", {
    className: "message-bubble",
    onClick: onBubbleClick
  }, slots["bubble-start"], (slots.image || image) && import_react63.default.createElement("div", {
    className: "message-image"
  }, slots.image || import_react63.default.createElement("img", {
    src: image
  })), (slots["text-header"] || textHeader) && import_react63.default.createElement("div", {
    className: "message-text-header"
  }, textHeader, slots["text-header"]), (slots.text || text || typing) && import_react63.default.createElement("div", {
    className: "message-text",
    onClick: onTextClick
  }, text, slots.text, typing && import_react63.default.createElement("div", {
    className: "message-typing-indicator"
  }, import_react63.default.createElement("div", null), import_react63.default.createElement("div", null), import_react63.default.createElement("div", null))), (slots["text-footer"] || textFooter) && import_react63.default.createElement("div", {
    className: "message-text-footer"
  }, textFooter, slots["text-footer"]), slots["bubble-end"], slots.default), (slots.footer || footer) && import_react63.default.createElement("div", {
    className: "message-footer",
    onClick: onFooterClick
  }, footer, slots.footer), slots["content-end"]), slots.end);
});
Message.displayName = "f7-message";
var message_default = Message;

// node_modules/framework7-react/esm/components/messagebar-attachment.js
var import_react64 = __toESM(require_react());
function _extends53() {
  _extends53 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends53.apply(this, arguments);
}
var MessagebarAttachment = (0, import_react64.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, image = props.image, _props$deletable = props.deletable, deletable = _props$deletable === void 0 ? true : _props$deletable;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react64.useRef)(null);
  var onClick = function onClick2(event) {
    emit(props, "attachmentClick", event);
  };
  var onDeleteClick = function onDeleteClick2(event) {
    emit(props, "attachmentDelete", event);
  };
  (0, import_react64.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "messagebar-attachment", colorClasses(props));
  return import_react64.default.createElement("div", _extends53({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), image && import_react64.default.createElement("img", {
    src: image
  }), deletable && import_react64.default.createElement("span", {
    className: "messagebar-attachment-delete",
    onClick: onDeleteClick
  }), children);
});
MessagebarAttachment.displayName = "f7-messagebar-attachment";
var messagebar_attachment_default = MessagebarAttachment;

// node_modules/framework7-react/esm/components/messagebar-attachments.js
var import_react65 = __toESM(require_react());
function _extends54() {
  _extends54 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends54.apply(this, arguments);
}
var MessagebarAttachments = (0, import_react65.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react65.useRef)(null);
  (0, import_react65.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "messagebar-attachments", colorClasses(props));
  return import_react65.default.createElement("div", _extends54({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
MessagebarAttachments.displayName = "f7-messagebar-attachments";
var messagebar_attachments_default = MessagebarAttachments;

// node_modules/framework7-react/esm/components/messagebar-sheet-image.js
var import_react66 = __toESM(require_react());
function _extends55() {
  _extends55 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends55.apply(this, arguments);
}
var MessagebarSheetImage = (0, import_react66.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, image = props.image, checked = props.checked;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react66.useRef)(null);
  var onChange = function onChange2(event) {
    if (event.target.checked)
      emit(props, "checked", event);
    else
      emit(props, "unchecked", event);
    emit(props, "change", event);
  };
  (0, import_react66.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "messagebar-sheet-image", "checkbox", colorClasses(props));
  var styles = _extends55({
    backgroundImage: image && "url(" + image + ")"
  }, style || {});
  return import_react66.default.createElement("label", _extends55({
    id,
    className: classes,
    style: styles,
    ref: elRef
  }, extraAttrs), import_react66.default.createElement("input", {
    type: "checkbox",
    checked,
    onChange
  }), import_react66.default.createElement("i", {
    className: "icon icon-checkbox"
  }), children);
});
MessagebarSheetImage.displayName = "f7-messagebar-sheet-image";
var messagebar_sheet_image_default = MessagebarSheetImage;

// node_modules/framework7-react/esm/components/messagebar-sheet-item.js
var import_react67 = __toESM(require_react());
function _extends56() {
  _extends56 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends56.apply(this, arguments);
}
var MessagebarSheetItem = (0, import_react67.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react67.useRef)(null);
  (0, import_react67.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "messagebar-sheet-item", colorClasses(props));
  return import_react67.default.createElement("div", _extends56({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
MessagebarSheetItem.displayName = "f7-messagebar-sheet-item";
var messagebar_sheet_item_default = MessagebarSheetItem;

// node_modules/framework7-react/esm/components/messagebar-sheet.js
var import_react68 = __toESM(require_react());
function _extends57() {
  _extends57 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends57.apply(this, arguments);
}
var MessagebarSheet = (0, import_react68.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react68.useRef)(null);
  (0, import_react68.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "messagebar-sheet", colorClasses(props));
  return import_react68.default.createElement("div", _extends57({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
MessagebarSheet.displayName = "f7-messagebar-sheet";
var messagebar_sheet_default = MessagebarSheet;

// node_modules/framework7-react/esm/components/messagebar.js
var import_react69 = __toESM(require_react());
function _extends58() {
  _extends58 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends58.apply(this, arguments);
}
var Messagebar = (0, import_react69.forwardRef)(function(props, ref) {
  var _f7Messagebar = (0, import_react69.useRef)(null);
  var updateSheetVisible = (0, import_react69.useRef)(false);
  var updateAttachmentsVisible = (0, import_react69.useRef)(false);
  var className = props.className, id = props.id, style = props.style, sheetVisible = props.sheetVisible, attachmentsVisible = props.attachmentsVisible, top = props.top, _props$resizable = props.resizable, resizable = _props$resizable === void 0 ? true : _props$resizable, _props$bottomOffset = props.bottomOffset, bottomOffset = _props$bottomOffset === void 0 ? 0 : _props$bottomOffset, _props$topOffset = props.topOffset, topOffset = _props$topOffset === void 0 ? 0 : _props$topOffset, maxHeight = props.maxHeight, _props$resizePage = props.resizePage, resizePage = _props$resizePage === void 0 ? true : _props$resizePage, sendLink = props.sendLink, value = props.value, disabled = props.disabled, readonly = props.readonly, textareaId = props.textareaId, name2 = props.name, _props$placeholder = props.placeholder, placeholder = _props$placeholder === void 0 ? "Message" : _props$placeholder, _props$init = props.init, init = _props$init === void 0 ? true : _props$init;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react69.useRef)(null);
  var areaElRef = (0, import_react69.useRef)(null);
  var onChange = function onChange2(event) {
    emit(props, "change", event);
  };
  var onInput = function onInput2(event) {
    emit(props, "input", event);
  };
  var onFocus = function onFocus2(event) {
    emit(props, "focus", event);
  };
  var onBlur = function onBlur2(event) {
    emit(props, "blur", event);
  };
  var onClick = function onClick2(event) {
    var inputValue = areaElRef.current.el.value;
    var clear = _f7Messagebar.current ? function() {
      _f7Messagebar.current.clear();
    } : function() {
    };
    emit(props, "submit", inputValue, clear);
    emit(props, "send", inputValue, clear);
    emit(props, "click", event);
  };
  var onAttachmentDelete = function onAttachmentDelete2(instance, attachmentEl, attachmentElIndex) {
    emit(props, "messagebarAttachmentDelete", instance, attachmentEl, attachmentElIndex);
  };
  var onAttachmentClick = function onAttachmentClick2(instance, attachmentEl, attachmentElIndex) {
    emit(props, "messagebarAttachmentClick", instance, attachmentEl, attachmentElIndex);
  };
  var onResizePage = function onResizePage2(instance) {
    emit(props, "messagebarResizePage", instance);
  };
  (0, import_react69.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Messagebar: function f7Messagebar() {
        return _f7Messagebar.current;
      }
    };
  });
  watchProp(sheetVisible, function() {
    if (!resizable || !_f7Messagebar.current)
      return;
    updateSheetVisible.current = true;
  });
  watchProp(attachmentsVisible, function() {
    if (!resizable || !_f7Messagebar.current)
      return;
    updateAttachmentsVisible.current = true;
  });
  useIsomorphicLayoutEffect(function() {
    if (!_f7Messagebar.current)
      return;
    if (updateSheetVisible.current) {
      updateSheetVisible.current = false;
      _f7Messagebar.current.sheetVisible = sheetVisible;
      _f7Messagebar.current.resizePage();
    }
    if (updateAttachmentsVisible.current) {
      updateAttachmentsVisible.current = false;
      _f7Messagebar.current.attachmentsVisible = attachmentsVisible;
      _f7Messagebar.current.resizePage();
    }
  });
  var onMount = function onMount2() {
    if (!init)
      return;
    if (!elRef.current)
      return;
    var params = noUndefinedProps({
      el: elRef.current,
      top,
      resizePage,
      bottomOffset,
      topOffset,
      maxHeight,
      on: {
        attachmentDelete: onAttachmentDelete,
        attachmentClick: onAttachmentClick,
        resizePage: onResizePage
      }
    });
    f7ready(function() {
      _f7Messagebar.current = f7.messagebar.create(params);
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Messagebar.current && _f7Messagebar.current.destroy)
      _f7Messagebar.current.destroy();
    _f7Messagebar.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var slots = getSlots(props);
  var slotsDefault = slots.default, slotsBeforeInner = slots["before-inner"], slotsAfterInner = slots["after-inner"], slotsSendLink = slots["send-link"], slotsInnerStart = slots["inner-start"], slotsInnerEnd = slots["inner-end"], slotsBeforeArea = slots["before-area"], slotsAfterArea = slots["after-area"];
  var innerEndEls = [];
  var messagebarAttachmentsEl;
  var messagebarSheetEl;
  if (slotsDefault) {
    slotsDefault.forEach(function(child) {
      if (typeof child === "undefined")
        return;
      var tag = child.type && (child.type.displayName || child.type.name);
      if (tag && (tag.indexOf("messagebar-attachments") >= 0 || tag === "F7MessagebarAttachments" || tag === "f7-messagebar-attachments")) {
        messagebarAttachmentsEl = child;
      } else if (tag && (tag.indexOf("messagebar-sheet") >= 0 || tag === "F7MessagebarSheet" || tag === "f7-messagebar-sheet")) {
        messagebarSheetEl = child;
      } else {
        innerEndEls.push(child);
      }
    });
  }
  var valueProps = {};
  if ("value" in props)
    valueProps.value = value;
  var classes = classNames(className, "toolbar", "messagebar", {
    "messagebar-attachments-visible": attachmentsVisible,
    "messagebar-sheet-visible": sheetVisible
  }, colorClasses(props));
  return import_react69.default.createElement("div", _extends58({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), slotsBeforeInner, import_react69.default.createElement("div", {
    className: "toolbar-inner"
  }, slotsInnerStart, import_react69.default.createElement("div", {
    className: "messagebar-area"
  }, slotsBeforeArea, messagebarAttachmentsEl, import_react69.default.createElement(input_default, _extends58({
    id: textareaId,
    ref: areaElRef,
    type: "textarea",
    wrap: false,
    placeholder,
    disabled,
    name: name2,
    readonly,
    resizable,
    onInput,
    onChange,
    onFocus,
    onBlur
  }, valueProps)), slotsAfterArea), (sendLink && sendLink.length > 0 || slotsSendLink) && import_react69.default.createElement(link_default, {
    onClick
  }, slotsSendLink || sendLink), slotsInnerEnd, innerEndEls), slotsAfterInner, messagebarSheetEl);
});
Messagebar.displayName = "f7-messagebar";
var messagebar_default = Messagebar;

// node_modules/framework7-react/esm/components/messages-title.js
var import_react70 = __toESM(require_react());
function _extends59() {
  _extends59 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends59.apply(this, arguments);
}
var MessagesTitle = (0, import_react70.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react70.useRef)(null);
  (0, import_react70.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "messages-title", colorClasses(props));
  return import_react70.default.createElement("div", _extends59({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
MessagesTitle.displayName = "f7-messages-title";
var messages_title_default = MessagesTitle;

// node_modules/framework7-react/esm/components/messages.js
var import_react71 = __toESM(require_react());
function _extends60() {
  _extends60 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends60.apply(this, arguments);
}
var Messages = (0, import_react71.forwardRef)(function(props, ref) {
  var _f7Messages = (0, import_react71.useRef)(null);
  var mounted = (0, import_react71.useRef)(false);
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$autoLayout = props.autoLayout, autoLayout = _props$autoLayout === void 0 ? false : _props$autoLayout, _props$messages = props.messages, messages = _props$messages === void 0 ? [] : _props$messages, _props$newMessagesFir = props.newMessagesFirst, newMessagesFirst = _props$newMessagesFir === void 0 ? false : _props$newMessagesFir, _props$scrollMessages = props.scrollMessages, scrollMessages = _props$scrollMessages === void 0 ? true : _props$scrollMessages, _props$scrollMessages2 = props.scrollMessagesOnEdge, scrollMessagesOnEdge = _props$scrollMessages2 === void 0 ? true : _props$scrollMessages2, firstMessageRule = props.firstMessageRule, lastMessageRule = props.lastMessageRule, tailMessageRule = props.tailMessageRule, sameNameMessageRule = props.sameNameMessageRule, sameHeaderMessageRule = props.sameHeaderMessageRule, sameFooterMessageRule = props.sameFooterMessageRule, sameAvatarMessageRule = props.sameAvatarMessageRule, customClassMessageRule = props.customClassMessageRule, renderMessage = props.renderMessage, _props$typing = props.typing, typing = _props$typing === void 0 ? false : _props$typing, _props$init = props.init, init = _props$init === void 0 ? true : _props$init;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react71.useRef)(null);
  var childrenBeforeUpdated = (0, import_react71.useRef)(null);
  var reactChildrenBefore = (0, import_react71.useRef)(children ? import_react71.default.Children.count(children) : 0);
  (0, import_react71.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Messages: function f7Messages() {
        return _f7Messages.current;
      }
    };
  });
  var onMount = function onMount2() {
    if (!init)
      return;
    f7ready(function() {
      _f7Messages.current = f7.messages.create(noUndefinedProps({
        el: elRef.current,
        autoLayout,
        messages,
        newMessagesFirst,
        scrollMessages,
        scrollMessagesOnEdge,
        firstMessageRule,
        lastMessageRule,
        tailMessageRule,
        sameNameMessageRule,
        sameHeaderMessageRule,
        sameFooterMessageRule,
        sameAvatarMessageRule,
        customClassMessageRule,
        renderMessage
      }));
      if (typing) {
        _f7Messages.current.showTyping();
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Messages.current && _f7Messages.current.destroy)
      _f7Messages.current.destroy();
    _f7Messages.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var currentChildrenLength = children ? import_react71.default.Children.count(children) : 0;
  if (_f7Messages.current && scrollMessages) {
    var beforeChildrenLength = reactChildrenBefore.current || 0;
    if (currentChildrenLength !== beforeChildrenLength) {
      _f7Messages.current.setScrollData();
    }
  }
  reactChildrenBefore.current = currentChildrenLength;
  useIsomorphicLayoutEffect(function() {
    var wasMounted = mounted.current;
    mounted.current = true;
    if (!init || !elRef.current)
      return;
    var childElements = elRef.current.children;
    if (!childElements)
      return;
    var childrenAfterUpdated = childElements.length;
    if (!wasMounted) {
      for (var i = 0; i < childElements.length; i += 1) {
        childElements[i].classList.add("message-appeared");
      }
      return;
    }
    for (var _i = 0; _i < childElements.length; _i += 1) {
      if (!childElements[_i].classList.contains("message-appeared")) {
        childElements[_i].classList.add("message-appear-from-bottom");
      }
    }
    if (_f7Messages.current) {
      if (_f7Messages.current.layout && autoLayout) {
        _f7Messages.current.layout();
      }
      if (childrenBeforeUpdated.current !== childrenAfterUpdated && _f7Messages.current.scroll && _f7Messages.current.scrollData && scrollMessages) {
        _f7Messages.current.scrollWithEdgeCheck(true);
      }
    }
    childrenBeforeUpdated.current = childrenAfterUpdated;
  });
  watchProp(typing, function(newValue) {
    if (!_f7Messages.current)
      return;
    if (newValue)
      _f7Messages.current.showTyping();
    else
      _f7Messages.current.hideTyping();
  });
  var classes = classNames(className, "messages", colorClasses(props));
  return import_react71.default.createElement("div", _extends60({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Messages.displayName = "f7-messages";
var messages_default = Messages;

// node_modules/framework7-react/esm/components/nav-left.js
var import_react72 = __toESM(require_react());
function _extends61() {
  _extends61 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends61.apply(this, arguments);
}
var NavLeft = (0, import_react72.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, backLink = props.backLink, backLinkUrl = props.backLinkUrl, backLinkForce = props.backLinkForce, backLinkShowText = props.backLinkShowText, sliding = props.sliding;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react72.useRef)(null);
  var onBackClick = function onBackClick2(event) {
    emit(props, "backClick clickBack", event);
  };
  (0, import_react72.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var theme2 = useTheme();
  var linkEl;
  var needBackLinkText = backLinkShowText;
  if (typeof needBackLinkText === "undefined")
    needBackLinkText = !theme2.md;
  if (backLink) {
    var text = backLink !== true && needBackLinkText ? backLink : void 0;
    linkEl = import_react72.default.createElement(link_default, {
      href: backLinkUrl || "#",
      back: true,
      icon: "icon-back",
      force: backLinkForce || void 0,
      className: !text ? "icon-only" : void 0,
      text,
      onClick: onBackClick
    });
  }
  var classes = classNames(className, "left", {
    sliding
  }, colorClasses(props));
  return import_react72.default.createElement("div", _extends61({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), linkEl, children);
});
NavLeft.displayName = "f7-nav-left";
var nav_left_default = NavLeft;

// node_modules/framework7-react/esm/components/nav-right.js
var import_react73 = __toESM(require_react());
function _extends62() {
  _extends62 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends62.apply(this, arguments);
}
var NavRight = (0, import_react73.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, sliding = props.sliding;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react73.useRef)(null);
  (0, import_react73.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "right", {
    sliding
  }, colorClasses(props));
  return import_react73.default.createElement("div", _extends62({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
NavRight.displayName = "f7-nav-right";
var nav_right_default = NavRight;

// node_modules/framework7-react/esm/components/nav-title-large.js
var import_react74 = __toESM(require_react());
function _extends63() {
  _extends63 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends63.apply(this, arguments);
}
var NavTitleLarge = (0, import_react74.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react74.useRef)(null);
  (0, import_react74.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "title-large", colorClasses(props));
  return import_react74.default.createElement("div", _extends63({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react74.default.createElement("div", {
    className: "title-large-text"
  }, children));
});
NavTitleLarge.displayName = "f7-nav-title-large";
var nav_title_large_default = NavTitleLarge;

// node_modules/framework7-react/esm/components/nav-title.js
var import_react75 = __toESM(require_react());
function _extends64() {
  _extends64 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends64.apply(this, arguments);
}
var NavTitle = (0, import_react75.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, title = props.title, subtitle = props.subtitle, sliding = props.sliding;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react75.useRef)(null);
  (0, import_react75.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var subtitleEl;
  if (subtitle) {
    subtitleEl = import_react75.default.createElement("span", {
      className: "subtitle"
    }, subtitle);
  }
  var classes = classNames(className, "title", {
    sliding
  }, colorClasses(props));
  return import_react75.default.createElement("div", _extends64({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children, title, subtitleEl);
});
NavTitle.displayName = "f7-nav-title";
var nav_title_default = NavTitle;

// node_modules/framework7-react/esm/components/navbar.js
var import_react76 = __toESM(require_react());
function _extends65() {
  _extends65 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends65.apply(this, arguments);
}
var Navbar = (0, import_react76.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, _props$sliding = props.sliding, sliding = _props$sliding === void 0 ? true : _props$sliding, large = props.large, largeTransparent = props.largeTransparent, transparent = props.transparent, hidden = props.hidden, noShadow = props.noShadow, noHairline = props.noHairline, backLink = props.backLink, backLinkForce = props.backLinkForce, backLinkUrl = props.backLinkUrl, backLinkShowText = props.backLinkShowText, title = props.title, subtitle = props.subtitle, titleLarge = props.titleLarge, innerClass = props.innerClass, innerClassName = props.innerClassName;
  var routerPositionClass = (0, import_react76.useRef)("");
  var largeCollapsed = (0, import_react76.useRef)(false);
  var routerNavbarRole = (0, import_react76.useRef)(null);
  var routerNavbarRoleDetailRoot = (0, import_react76.useRef)(false);
  var routerNavbarMasterStack = (0, import_react76.useRef)(false);
  var transparentVisible = (0, import_react76.useRef)(false);
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react76.useRef)(null);
  var theme2 = useTheme();
  var onHide = function onHide2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    emit(props, "navbarHide");
  };
  var onShow = function onShow2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    emit(props, "navbarShow");
  };
  var onExpand = function onExpand2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    largeCollapsed.current = false;
    emit(props, "navbarExpand");
  };
  var onCollapse = function onCollapse2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    largeCollapsed.current = true;
    emit(props, "navbarCollapse");
  };
  var onNavbarTransparentShow = function onNavbarTransparentShow2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    transparentVisible.current = true;
    emit(props, "navbarTransparentShow");
  };
  var onNavbarTransparentHide = function onNavbarTransparentHide2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    transparentVisible.current = false;
    emit(props, "navbarTransparentHide");
  };
  var onNavbarPosition = function onNavbarPosition2(navbarEl, position) {
    if (elRef.current !== navbarEl)
      return;
    routerPositionClass.current = position ? "navbar-" + position : "";
  };
  var onNavbarRole = function onNavbarRole2(navbarEl, rolesData) {
    if (elRef.current !== navbarEl)
      return;
    routerNavbarRole.current = rolesData.role;
    routerNavbarRoleDetailRoot.current = rolesData.detailRoot;
  };
  var onNavbarMasterStack = function onNavbarMasterStack2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    routerNavbarMasterStack.current = true;
  };
  var onNavbarMasterUnstack = function onNavbarMasterUnstack2(navbarEl) {
    if (elRef.current !== navbarEl)
      return;
    routerNavbarMasterStack.current = false;
  };
  var hide = function hide2(animate) {
    if (!f7)
      return;
    f7.navbar.hide(elRef.current, animate);
  };
  var show = function show2(animate) {
    if (!f7)
      return;
    f7.navbar.show(elRef.current, animate);
  };
  var size = function size2() {
    if (!f7)
      return;
    f7.navbar.size(elRef.current);
  };
  var onBackClick = function onBackClick2(event) {
    emit(props, "backClick clickBack", event);
  };
  (0, import_react76.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      hide,
      show,
      size
    };
  });
  var attachEvents = function attachEvents2() {
    if (!elRef.current)
      return;
    f7ready(function() {
      f7.navbar.size(elRef.current);
      f7.on("navbarShow", onShow);
      f7.on("navbarHide", onHide);
      f7.on("navbarCollapse", onCollapse);
      f7.on("navbarExpand", onExpand);
      f7.on("navbarPosition", onNavbarPosition);
      f7.on("navbarRole", onNavbarRole);
      f7.on("navbarMasterStack", onNavbarMasterStack);
      f7.on("navbarMasterUnstack", onNavbarMasterUnstack);
      f7.on("navbarTransparentShow", onNavbarTransparentShow);
      f7.on("navbarTransparentHide", onNavbarTransparentHide);
    });
  };
  var detachEvents = function detachEvents2() {
    if (!f7)
      return;
    f7.off("navbarShow", onShow);
    f7.off("navbarHide", onHide);
    f7.off("navbarCollapse", onCollapse);
    f7.off("navbarExpand", onExpand);
    f7.off("navbarPosition", onNavbarPosition);
    f7.off("navbarRole", onNavbarRole);
    f7.off("navbarMasterStack", onNavbarMasterStack);
    f7.off("navbarMasterUnstack", onNavbarMasterUnstack);
    f7.off("navbarTransparentShow", onNavbarTransparentShow);
    f7.off("navbarTransparentHide", onNavbarTransparentHide);
  };
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var slots = getSlots(props);
  var leftEl;
  var titleEl;
  var rightEl;
  var titleLargeEl;
  var addLeftTitleClass = theme2 && theme2.ios && f7 && !f7.params.navbar.iosCenterTitle;
  var addCenterTitleClass = theme2 && theme2.md && f7 && f7.params.navbar.mdCenterTitle || theme2 && theme2.aurora && f7 && f7.params.navbar.auroraCenterTitle;
  var isLarge = large || largeTransparent;
  var isTransparent = transparent || isLarge && largeTransparent;
  var isTransparentVisible = isTransparent && transparentVisible.current;
  var classes = classNames(className, "navbar", routerPositionClass.current, {
    "navbar-hidden": hidden,
    "navbar-large": isLarge,
    "navbar-large-collapsed": isLarge && largeCollapsed.current,
    "navbar-transparent": isTransparent,
    "navbar-transparent-visible": isTransparentVisible,
    "navbar-master": routerNavbarRole.current === "master",
    "navbar-master-detail": routerNavbarRole.current === "detail",
    "navbar-master-detail-root": routerNavbarRoleDetailRoot.current === true,
    "navbar-master-stacked": routerNavbarMasterStack.current === true,
    "no-shadow": noShadow,
    "no-hairline": noHairline
  }, colorClasses(props));
  if (backLink || slots["nav-left"] || slots.left) {
    leftEl = import_react76.default.createElement(nav_left_default, {
      backLink,
      backLinkUrl,
      backLinkForce,
      backLinkShowText,
      onBackClick
    }, slots["nav-left"], slots.left);
  }
  if (title || subtitle || slots.title) {
    titleEl = import_react76.default.createElement(nav_title_default, {
      title,
      subtitle
    }, slots.title);
  }
  if (slots["nav-right"] || slots.right) {
    rightEl = import_react76.default.createElement(nav_right_default, null, slots["nav-right"], slots.right);
  }
  var largeTitle = titleLarge;
  if (!largeTitle && large && title)
    largeTitle = title;
  if (largeTitle || slots["title-large"]) {
    titleLargeEl = import_react76.default.createElement("div", {
      className: "title-large"
    }, import_react76.default.createElement("div", {
      className: "title-large-text"
    }, largeTitle || "", slots["title-large"]));
  }
  var innerEl = import_react76.default.createElement("div", {
    className: classNames("navbar-inner", innerClass, innerClassName, {
      sliding,
      "navbar-inner-left-title": addLeftTitleClass,
      "navbar-inner-centered-title": addCenterTitleClass
    })
  }, leftEl, titleEl, rightEl, titleLargeEl, slots.default);
  return import_react76.default.createElement("div", _extends65({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react76.default.createElement("div", {
    className: "navbar-bg"
  }), slots["before-inner"], innerEl, slots["after-inner"]);
});
Navbar.displayName = "f7-navbar";
var navbar_default = Navbar;

// node_modules/framework7-react/esm/components/page-content.js
var import_react77 = __toESM(require_react());
function _extends66() {
  _extends66 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends66.apply(this, arguments);
}
var PageContent = (0, import_react77.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, tab = props.tab, tabActive = props.tabActive, ptr = props.ptr, ptrDistance = props.ptrDistance, _props$ptrPreloader = props.ptrPreloader, ptrPreloader = _props$ptrPreloader === void 0 ? true : _props$ptrPreloader, ptrBottom = props.ptrBottom, ptrMousewheel = props.ptrMousewheel, infinite = props.infinite, infiniteTop = props.infiniteTop, infiniteDistance = props.infiniteDistance, _props$infinitePreloa = props.infinitePreloader, infinitePreloader = _props$infinitePreloa === void 0 ? true : _props$infinitePreloa, hideBarsOnScroll = props.hideBarsOnScroll, hideNavbarOnScroll = props.hideNavbarOnScroll, hideToolbarOnScroll = props.hideToolbarOnScroll, messagesContent = props.messagesContent, loginScreen = props.loginScreen;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react77.useRef)(null);
  var onPtrPullStart = function onPtrPullStart2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "ptrPullStart");
  };
  var onPtrPullMove = function onPtrPullMove2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "ptrPullMove");
  };
  var onPtrPullEnd = function onPtrPullEnd2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "ptrPullEnd");
  };
  var onPtrRefresh = function onPtrRefresh2(el, done) {
    if (elRef.current !== el)
      return;
    emit(props, "ptrRefresh", done);
  };
  var onPtrDone = function onPtrDone2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "ptrDone");
  };
  var onInfinite = function onInfinite2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "infinite");
  };
  (0, import_react77.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useTab(elRef, props);
  var attachEvents = function attachEvents2() {
    f7ready(function() {
      if (ptr) {
        f7.on("ptrPullStart", onPtrPullStart);
        f7.on("ptrPullMove", onPtrPullMove);
        f7.on("ptrPullEnd", onPtrPullEnd);
        f7.on("ptrRefresh", onPtrRefresh);
        f7.on("ptrDone", onPtrDone);
      }
      if (infinite) {
        f7.on("infinite", onInfinite);
      }
    });
  };
  var detachEvents = function detachEvents2() {
    if (!f7)
      return;
    f7.off("ptrPullStart", onPtrPullStart);
    f7.off("ptrPullMove", onPtrPullMove);
    f7.off("ptrPullEnd", onPtrPullEnd);
    f7.off("ptrRefresh", onPtrRefresh);
    f7.off("ptrDone", onPtrDone);
    f7.off("infinite", onInfinite);
  };
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var ptrEl;
  var infiniteEl;
  if (ptr && ptrPreloader) {
    ptrEl = import_react77.default.createElement("div", {
      className: "ptr-preloader"
    }, import_react77.default.createElement(preloader_default, null), import_react77.default.createElement("div", {
      className: "ptr-arrow"
    }));
  }
  if (infinite && infinitePreloader) {
    infiniteEl = import_react77.default.createElement(preloader_default, {
      className: "infinite-scroll-preloader"
    });
  }
  var classes = classNames(className, "page-content", {
    tab,
    "tab-active": tabActive,
    "ptr-content": ptr,
    "ptr-bottom": ptrBottom,
    "infinite-scroll-content": infinite,
    "infinite-scroll-top": infiniteTop,
    "hide-bars-on-scroll": hideBarsOnScroll,
    "hide-navbar-on-scroll": hideNavbarOnScroll,
    "hide-toolbar-on-scroll": hideToolbarOnScroll,
    "messages-content": messagesContent,
    "login-screen-content": loginScreen
  }, colorClasses(props));
  return import_react77.default.createElement("div", _extends66({
    id,
    style,
    className: classes,
    "data-ptr-distance": ptrDistance || void 0,
    "data-ptr-mousewheel": ptrMousewheel || void 0,
    "data-infinite-distance": infiniteDistance || void 0,
    ref: elRef
  }, extraAttrs), ptrBottom ? null : ptrEl, infiniteTop ? infiniteEl : null, children, infiniteTop ? null : infiniteEl, ptrBottom ? ptrEl : null);
});
PageContent.displayName = "f7-page-content";
var page_content_default = PageContent;

// node_modules/framework7-react/esm/components/page.js
var import_react78 = __toESM(require_react());
function _extends67() {
  _extends67 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends67.apply(this, arguments);
}
var Page = (0, import_react78.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, name2 = props.name, stacked = props.stacked, withSubnavbar = props.withSubnavbar, subnavbar = props.subnavbar, withNavbarLarge = props.withNavbarLarge, navbarLarge = props.navbarLarge, noNavbar = props.noNavbar, noToolbar = props.noToolbar, tabs = props.tabs, _props$pageContent = props.pageContent, pageContent = _props$pageContent === void 0 ? true : _props$pageContent, noSwipeback = props.noSwipeback, ptr = props.ptr, ptrDistance = props.ptrDistance, _props$ptrPreloader = props.ptrPreloader, ptrPreloader = _props$ptrPreloader === void 0 ? true : _props$ptrPreloader, ptrBottom = props.ptrBottom, ptrMousewheel = props.ptrMousewheel, infinite = props.infinite, infiniteTop = props.infiniteTop, infiniteDistance = props.infiniteDistance, _props$infinitePreloa = props.infinitePreloader, infinitePreloader = _props$infinitePreloa === void 0 ? true : _props$infinitePreloa, hideBarsOnScroll = props.hideBarsOnScroll, hideNavbarOnScroll = props.hideNavbarOnScroll, hideToolbarOnScroll = props.hideToolbarOnScroll, messagesContent = props.messagesContent, loginScreen = props.loginScreen, onPtrPullStart = props.onPtrPullStart, onPtrPullMove = props.onPtrPullMove, onPtrPullEnd = props.onPtrPullEnd, onPtrRefresh = props.onPtrRefresh, onPtrDone = props.onPtrDone, onInfinite = props.onInfinite;
  var hasSubnavbar = (0, import_react78.useRef)(false);
  var hasNavbarLarge = (0, import_react78.useRef)(false);
  var hasNavbarLargeCollapsed = (0, import_react78.useRef)(false);
  var hasCardExpandableOpened = (0, import_react78.useRef)(false);
  var routerPositionClass = (0, import_react78.useRef)("");
  var routerForceUnstack = (0, import_react78.useRef)(false);
  var routerPageRole = (0, import_react78.useRef)(null);
  var routerPageRoleDetailRoot = (0, import_react78.useRef)(false);
  var routerPageMasterStack = (0, import_react78.useRef)(false);
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react78.useRef)(null);
  var onPageMounted = function onPageMounted2(page) {
    if (elRef.current !== page.el)
      return;
    emit(props, "pageMounted", page);
  };
  var onPageInit = function onPageInit2(page) {
    if (elRef.current !== page.el)
      return;
    if (typeof withSubnavbar === "undefined" && typeof subnavbar === "undefined") {
      if (page.$navbarEl && page.$navbarEl.length && page.$navbarEl.find(".subnavbar").length || page.$el.children(".navbar").find(".subnavbar").length) {
        hasSubnavbar.current = true;
      }
    }
    if (typeof withNavbarLarge === "undefined" && typeof navbarLarge === "undefined") {
      if (page.$navbarEl && page.$navbarEl.hasClass("navbar-large")) {
        hasNavbarLarge.current = true;
      }
    }
    emit(props, "pageInit", page);
  };
  var onPageReinit = function onPageReinit2(page) {
    if (elRef.current !== page.el)
      return;
    emit(props, "pageReinit", page);
  };
  var onPageBeforeIn = function onPageBeforeIn2(page) {
    if (elRef.current !== page.el)
      return;
    if (!page.swipeBack) {
      if (page.from === "next") {
        routerPositionClass.current = "page-next";
      }
      if (page.from === "previous") {
        routerPositionClass.current = "page-previous";
      }
    }
    emit(props, "pageBeforeIn", page);
  };
  var onPageBeforeOut = function onPageBeforeOut2(page) {
    if (elRef.current !== page.el)
      return;
    emit(props, "pageBeforeOut", page);
  };
  var onPageAfterOut = function onPageAfterOut2(page) {
    if (elRef.current !== page.el)
      return;
    if (page.to === "next") {
      routerPositionClass.current = "page-next";
    }
    if (page.to === "previous") {
      routerPositionClass.current = "page-previous";
    }
    emit(props, "pageAfterOut", page);
  };
  var onPageAfterIn = function onPageAfterIn2(page) {
    if (elRef.current !== page.el)
      return;
    routerPositionClass.current = "page-current";
    emit(props, "pageAfterIn", page);
  };
  var onPageBeforeRemove = function onPageBeforeRemove2(page) {
    if (elRef.current !== page.el)
      return;
    emit(props, "pageBeforeRemove", page);
  };
  var onPageBeforeUnmount = function onPageBeforeUnmount2(page) {
    if (elRef.current !== page.el)
      return;
    emit(props, "pageBeforeUnmount", page);
  };
  var onPageStack = function onPageStack2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    routerForceUnstack.current = false;
  };
  var onPageUnstack = function onPageUnstack2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    routerForceUnstack.current = true;
  };
  var onPagePosition = function onPagePosition2(pageEl, position) {
    if (elRef.current !== pageEl)
      return;
    routerPositionClass.current = "page-" + position;
  };
  var onPageRole = function onPageRole2(pageEl, rolesData) {
    if (elRef.current !== pageEl)
      return;
    routerPageRole.current = rolesData.role;
    routerPageRoleDetailRoot.current = rolesData.detailRoot;
  };
  var onPageMasterStack = function onPageMasterStack2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    routerPageMasterStack.current = true;
  };
  var onPageMasterUnstack = function onPageMasterUnstack2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    routerPageMasterStack.current = false;
  };
  var onPageNavbarLargeCollapsed = function onPageNavbarLargeCollapsed2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    hasNavbarLargeCollapsed.current = true;
  };
  var onPageNavbarLargeExpanded = function onPageNavbarLargeExpanded2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    hasNavbarLargeCollapsed.current = false;
  };
  var onCardOpened = function onCardOpened2(cardEl, pageEl) {
    if (elRef.current !== pageEl)
      return;
    hasCardExpandableOpened.current = true;
  };
  var onCardClose = function onCardClose2(cardEl, pageEl) {
    if (elRef.current !== pageEl)
      return;
    hasCardExpandableOpened.current = false;
  };
  var onPageTabShow = function onPageTabShow2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    emit(props, "pageTabShow");
  };
  var onPageTabHide = function onPageTabHide2(pageEl) {
    if (elRef.current !== pageEl)
      return;
    emit(props, "pageTabHide");
  };
  (0, import_react78.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var attachEvents = function attachEvents2() {
    f7ready(function() {
      f7.on("pageMounted", onPageMounted);
      f7.on("pageInit", onPageInit);
      f7.on("pageReinit", onPageReinit);
      f7.on("pageBeforeIn", onPageBeforeIn);
      f7.on("pageBeforeOut", onPageBeforeOut);
      f7.on("pageAfterOut", onPageAfterOut);
      f7.on("pageAfterIn", onPageAfterIn);
      f7.on("pageBeforeRemove", onPageBeforeRemove);
      f7.on("pageBeforeUnmount", onPageBeforeUnmount);
      f7.on("pageStack", onPageStack);
      f7.on("pageUnstack", onPageUnstack);
      f7.on("pagePosition", onPagePosition);
      f7.on("pageRole", onPageRole);
      f7.on("pageMasterStack", onPageMasterStack);
      f7.on("pageMasterUnstack", onPageMasterUnstack);
      f7.on("pageNavbarLargeCollapsed", onPageNavbarLargeCollapsed);
      f7.on("pageNavbarLargeExpanded", onPageNavbarLargeExpanded);
      f7.on("cardOpened", onCardOpened);
      f7.on("cardClose", onCardClose);
      f7.on("pageTabShow", onPageTabShow);
      f7.on("pageTabHide", onPageTabHide);
    });
  };
  var detachEvents = function detachEvents2() {
    if (!f7)
      return;
    f7.off("pageMounted", onPageMounted);
    f7.off("pageInit", onPageInit);
    f7.off("pageReinit", onPageReinit);
    f7.off("pageBeforeIn", onPageBeforeIn);
    f7.off("pageBeforeOut", onPageBeforeOut);
    f7.off("pageAfterOut", onPageAfterOut);
    f7.off("pageAfterIn", onPageAfterIn);
    f7.off("pageBeforeRemove", onPageBeforeRemove);
    f7.off("pageBeforeUnmount", onPageBeforeUnmount);
    f7.off("pageStack", onPageStack);
    f7.off("pageUnstack", onPageUnstack);
    f7.off("pagePosition", onPagePosition);
    f7.off("pageRole", onPageRole);
    f7.off("pageMasterStack", onPageMasterStack);
    f7.off("pageMasterUnstack", onPageMasterUnstack);
    f7.off("pageNavbarLargeCollapsed", onPageNavbarLargeCollapsed);
    f7.off("pageNavbarLargeExpanded", onPageNavbarLargeExpanded);
    f7.off("cardOpened", onCardOpened);
    f7.off("cardClose", onCardClose);
    f7.off("pageTabShow", onPageTabShow);
    f7.off("pageTabHide", onPageTabHide);
  };
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var slots = getSlots(props);
  var fixedList = [];
  var staticList = [];
  var slotsStatic = slots.static, slotsFixed = slots.fixed, slotsDefault = slots.default;
  var fixedTags = "navbar toolbar tabbar subnavbar searchbar messagebar fab list-index panel".split(" ").map(function(tagName) {
    return "f7-" + tagName;
  });
  var hasSubnavbarComputed;
  var hasNavbarLargeComputed;
  var hasMessages = messagesContent;
  if (slotsDefault) {
    slotsDefault.forEach(function(child) {
      if (typeof child === "undefined")
        return;
      var isFixedTag = false;
      var tag = child.type && (child.type.displayName || child.type.name);
      if (!tag) {
        if (pageContent)
          staticList.push(child);
        return;
      }
      if (tag === "f7-subnavbar")
        hasSubnavbarComputed = true;
      if (tag === "f7-navbar") {
        if (child.props && child.props.large)
          hasNavbarLargeComputed = true;
      }
      if (typeof hasMessages === "undefined" && tag === "f7-messages")
        hasMessages = true;
      if (fixedTags.indexOf(tag) >= 0) {
        isFixedTag = true;
      }
      if (pageContent) {
        if (isFixedTag)
          fixedList.push(child);
        else
          staticList.push(child);
      }
    });
  }
  var forceSubnavbar = typeof subnavbar === "undefined" && typeof withSubnavbar === "undefined" ? hasSubnavbarComputed || hasSubnavbar.current : false;
  var forceNavbarLarge = typeof navbarLarge === "undefined" && typeof withNavbarLarge === "undefined" ? hasNavbarLargeComputed || hasNavbarLarge.current : false;
  var classes = classNames(className, "page", routerPositionClass.current, {
    stacked: stacked && !routerForceUnstack.current,
    tabs,
    "page-with-subnavbar": subnavbar || withSubnavbar || forceSubnavbar,
    "page-with-navbar-large": navbarLarge || withNavbarLarge || forceNavbarLarge,
    "no-navbar": noNavbar,
    "no-toolbar": noToolbar,
    "no-swipeback": noSwipeback,
    "page-master": routerPageRole.current === "master",
    "page-master-detail": routerPageRole.current === "detail",
    "page-master-detail-root": routerPageRoleDetailRoot.current === true,
    "page-master-stacked": routerPageMasterStack.current === true,
    "page-with-navbar-large-collapsed": hasNavbarLargeCollapsed.current === true,
    "page-with-card-opened": hasCardExpandableOpened.current === true,
    "login-screen-page": loginScreen
  }, colorClasses(props));
  if (!pageContent) {
    return import_react78.default.createElement("div", _extends67({
      id,
      style,
      className: classes,
      "data-name": name2,
      ref: elRef
    }, extraAttrs), slotsFixed, slotsStatic, slotsDefault);
  }
  var pageContentEl = import_react78.default.createElement(page_content_default, {
    ptr,
    ptrDistance,
    ptrPreloader,
    ptrBottom,
    ptrMousewheel,
    infinite,
    infiniteTop,
    infiniteDistance,
    infinitePreloader,
    hideBarsOnScroll,
    hideNavbarOnScroll,
    hideToolbarOnScroll,
    messagesContent: messagesContent || hasMessages,
    loginScreen,
    onPtrPullStart,
    onPtrPullMove,
    onPtrPullEnd,
    onPtrRefresh,
    onPtrDone,
    onInfinite
  }, slotsStatic, staticList);
  return import_react78.default.createElement("div", _extends67({
    id,
    style,
    className: classes,
    "data-name": name2,
    ref: elRef
  }, extraAttrs), fixedList, slotsFixed, pageContentEl);
});
Page.displayName = "f7-page";
var page_default = Page;

// node_modules/framework7-react/esm/components/panel.js
var import_react79 = __toESM(require_react());
function _extends68() {
  _extends68 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends68.apply(this, arguments);
}
var Panel = (0, import_react79.forwardRef)(function(props, ref) {
  var _classNames;
  var _f7Panel = (0, import_react79.useRef)(null);
  var className = props.className, id = props.id, style = props.style, children = props.children, side = props.side, effect = props.effect, cover = props.cover, reveal = props.reveal, push = props.push, left = props.left, opened = props.opened, resizable = props.resizable, _props$backdrop = props.backdrop, backdrop = _props$backdrop === void 0 ? true : _props$backdrop, backdropEl = props.backdropEl, containerEl = props.containerEl, visibleBreakpoint = props.visibleBreakpoint, collapsedBreakpoint = props.collapsedBreakpoint, swipe = props.swipe, swipeNoFollow = props.swipeNoFollow, swipeOnlyClose = props.swipeOnlyClose, _props$swipeActiveAre = props.swipeActiveArea, swipeActiveArea = _props$swipeActiveAre === void 0 ? 0 : _props$swipeActiveAre, _props$swipeThreshold = props.swipeThreshold, swipeThreshold = _props$swipeThreshold === void 0 ? 0 : _props$swipeThreshold;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react79.useRef)(null);
  var isOpened = (0, import_react79.useRef)(false);
  var isClosing = (0, import_react79.useRef)(false);
  var isCollapsed = (0, import_react79.useRef)(false);
  var isBreakpoint = (0, import_react79.useRef)(false);
  var onOpen = function onOpen2(event) {
    isOpened.current = true;
    isClosing.current = false;
    emit(props, "panelOpen", event);
  };
  var onOpened = function onOpened2(event) {
    emit(props, "panelOpened", event);
  };
  var onClose = function onClose2(event) {
    isOpened.current = false;
    isClosing.current = true;
    emit(props, "panelClose", event);
  };
  var onClosed = function onClosed2(event) {
    isClosing.current = false;
    emit(props, "panelClosed", event);
  };
  var onBackdropClick = function onBackdropClick2(event) {
    emit(props, "click panelBackdropClick", event);
  };
  var onSwipe = function onSwipe2(event) {
    emit(props, "panelSwipe", event);
  };
  var onSwipeOpen = function onSwipeOpen2(event) {
    emit(props, "panelSwipeOpen", event);
  };
  var onBreakpoint = function onBreakpoint2(event) {
    isBreakpoint.current = true;
    isCollapsed.current = false;
    emit(props, "panelBreakpoint", event);
  };
  var onCollapsedBreakpoint = function onCollapsedBreakpoint2(event) {
    isBreakpoint.current = false;
    isCollapsed.current = true;
    emit(props, "panelCollapsedBreakpoint", event);
  };
  var onResize = function onResize2() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    emit.apply(void 0, [props, "panelResize"].concat(args));
  };
  (0, import_react79.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Panel: function f7Panel() {
        return _f7Panel.current;
      }
    };
  });
  watchProp(resizable, function(newValue) {
    if (!_f7Panel.current)
      return;
    if (newValue)
      _f7Panel.current.enableResizable();
    else
      _f7Panel.current.disableResizable();
  });
  watchProp(opened, function(newValue) {
    if (!_f7Panel.current)
      return;
    if (newValue) {
      _f7Panel.current.open();
    } else {
      _f7Panel.current.close();
    }
  });
  var modalEvents = function modalEvents2(method) {
    if (!_f7Panel.current)
      return;
    _f7Panel.current[method]("open", onOpen);
    _f7Panel.current[method]("opened", onOpened);
    _f7Panel.current[method]("close", onClose);
    _f7Panel.current[method]("closed", onClosed);
    _f7Panel.current[method]("backdropClick", onBackdropClick);
    _f7Panel.current[method]("swipe", onSwipe);
    _f7Panel.current[method]("swipeOpen", onSwipeOpen);
    _f7Panel.current[method]("collapsedBreakpoint", onCollapsedBreakpoint);
    _f7Panel.current[method]("breakpoint", onBreakpoint);
    _f7Panel.current[method]("resize", onResize);
  };
  var onMount = function onMount2() {
    f7ready(function() {
      var $ = f7.$;
      if (!$)
        return;
      if ($(".panel-backdrop").length === 0) {
        $('<div class="panel-backdrop"></div>').insertBefore(elRef.current);
      }
      var params = noUndefinedProps({
        el: elRef.current,
        resizable,
        backdrop,
        backdropEl,
        containerEl,
        visibleBreakpoint,
        collapsedBreakpoint,
        swipe,
        swipeNoFollow,
        swipeOnlyClose,
        swipeActiveArea,
        swipeThreshold
      });
      _f7Panel.current = f7.panel.create(params);
      modalEvents("on");
      if (opened) {
        _f7Panel.current.open(false);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Panel.current && _f7Panel.current.destroy) {
      _f7Panel.current.destroy();
    }
    _f7Panel.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    modalEvents("on");
    return function() {
      modalEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var sideComputed = side || (left ? "left" : "right");
  var effectComputed = effect || (reveal ? "reveal" : push ? "push" : "cover");
  var classes = classNames(className, "panel", (_classNames = {
    "panel-in": isOpened.current && !isClosing.current && !isBreakpoint.current,
    "panel-in-breakpoint": isBreakpoint.current,
    "panel-in-collapsed": isCollapsed.current,
    "panel-resizable": resizable
  }, _classNames["panel-" + sideComputed] = sideComputed, _classNames["panel-" + effectComputed] = effectComputed, _classNames), colorClasses(props));
  return import_react79.default.createElement("div", _extends68({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children, resizable && import_react79.default.createElement("div", {
    className: "panel-resize-handler"
  }));
});
Panel.displayName = "f7-panel";
var panel_default = Panel;

// node_modules/framework7-react/esm/components/photo-browser.js
var import_react80 = __toESM(require_react());
var PhotoBrowser = (0, import_react80.forwardRef)(function(props, ref) {
  var _f7PhotoBrowser = (0, import_react80.useRef)(null);
  var _props$init = props.init, init = _props$init === void 0 ? true : _props$init, params = props.params, photos = props.photos, _props$exposition = props.exposition, exposition = _props$exposition === void 0 ? true : _props$exposition, _props$expositionHide = props.expositionHideCaptions, expositionHideCaptions = _props$expositionHide === void 0 ? false : _props$expositionHide, type = props.type, _props$navbar = props.navbar, navbar = _props$navbar === void 0 ? true : _props$navbar, _props$toolbar = props.toolbar, toolbar = _props$toolbar === void 0 ? true : _props$toolbar, theme2 = props.theme, captionsTheme = props.captionsTheme, iconsColor = props.iconsColor, _props$swipeToClose = props.swipeToClose, swipeToClose = _props$swipeToClose === void 0 ? true : _props$swipeToClose, pageBackLinkText = props.pageBackLinkText, popupCloseLinkText = props.popupCloseLinkText, navbarOfText = props.navbarOfText, navbarShowCount = props.navbarShowCount, swiper = props.swiper, url = props.url, _props$routableModals = props.routableModals, routableModals = _props$routableModals === void 0 ? false : _props$routableModals, _props$virtualSlides = props.virtualSlides, virtualSlides = _props$virtualSlides === void 0 ? true : _props$virtualSlides, view = props.view, renderNavbar = props.renderNavbar, renderToolbar = props.renderToolbar, renderCaption = props.renderCaption, renderObject = props.renderObject, renderLazyPhoto = props.renderLazyPhoto, renderPhoto = props.renderPhoto, renderPage = props.renderPage, renderPopup = props.renderPopup, renderStandalone = props.renderStandalone;
  var open = function open2(index) {
    return _f7PhotoBrowser.current.open(index);
  };
  var close = function close2() {
    return _f7PhotoBrowser.current.close();
  };
  var expositionToggle = function expositionToggle2() {
    return _f7PhotoBrowser.current.expositionToggle();
  };
  var expositionEnable = function expositionEnable2() {
    return _f7PhotoBrowser.current.expositionEnable();
  };
  var expositionDisable = function expositionDisable2() {
    return _f7PhotoBrowser.current.expositionDisable();
  };
  (0, import_react80.useImperativeHandle)(ref, function() {
    return {
      f7PhotoBrowser: function f7PhotoBrowser() {
        return _f7PhotoBrowser.current;
      },
      open,
      close,
      expositionToggle,
      expositionEnable,
      expositionDisable
    };
  });
  watchProp(photos, function(newValue) {
    var pb = _f7PhotoBrowser.current;
    if (!pb)
      return;
    pb.params.photos = newValue;
    if (pb.opened && pb.swiper) {
      pb.swiper.update();
    }
  });
  var onMount = function onMount2() {
    if (!init)
      return;
    f7ready(function() {
      var paramsComputed;
      if (typeof params !== "undefined") {
        paramsComputed = params;
      } else {
        paramsComputed = {
          photos,
          exposition,
          expositionHideCaptions,
          type,
          navbar,
          toolbar,
          theme: theme2,
          captionsTheme,
          iconsColor,
          swipeToClose,
          pageBackLinkText,
          popupCloseLinkText,
          navbarOfText,
          navbarShowCount,
          swiper,
          url,
          routableModals,
          virtualSlides,
          view,
          renderNavbar,
          renderToolbar,
          renderCaption,
          renderObject,
          renderLazyPhoto,
          renderPhoto,
          renderPage,
          renderPopup,
          renderStandalone
        };
      }
      Object.keys(paramsComputed).forEach(function(param) {
        if (typeof paramsComputed[param] === "undefined" || paramsComputed[param] === "")
          delete paramsComputed[param];
      });
      paramsComputed = extend({}, paramsComputed, {
        on: {
          open: function open2() {
            emit(props, "photoBrowserOpen");
          },
          close: function close2() {
            emit(props, "photoBrowserClose");
          },
          opened: function opened() {
            emit(props, "photoBrowserOpened");
          },
          closed: function closed() {
            emit(props, "photoBrowserClosed");
          },
          swipeToClose: function swipeToClose2() {
            emit(props, "photoBrowserSwipeToClose");
          }
        }
      });
      _f7PhotoBrowser.current = f7.photoBrowser.create(paramsComputed);
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7PhotoBrowser.current && _f7PhotoBrowser.current.destroy)
      _f7PhotoBrowser.current.destroy();
    _f7PhotoBrowser.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  return null;
});
PhotoBrowser.displayName = "f7-photo-browser";
var photo_browser_default = PhotoBrowser;

// node_modules/framework7-react/esm/components/pie-chart.js
var import_react81 = __toESM(require_react());
function _extends69() {
  _extends69 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends69.apply(this, arguments);
}
var PieChart = (0, import_react81.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, _props$size = props.size, size = _props$size === void 0 ? 320 : _props$size, _props$tooltip = props.tooltip, tooltip = _props$tooltip === void 0 ? false : _props$tooltip, _props$datasets = props.datasets, datasets = _props$datasets === void 0 ? [] : _props$datasets, formatTooltip = props.formatTooltip, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var _useState = (0, import_react81.useState)(null), currentIndex = _useState[0], setCurrentIndex = _useState[1];
  var previousIndex = (0, import_react81.useRef)(null);
  var elRef = (0, import_react81.useRef)(null);
  var f7Tooltip = (0, import_react81.useRef)(null);
  (0, import_react81.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var getSummValue = function getSummValue2() {
    var summ = 0;
    datasets.map(function(d) {
      return d.value || 0;
    }).forEach(function(value) {
      summ += value;
    });
    return summ;
  };
  var getPaths = function getPaths2() {
    var paths2 = [];
    var cumulativePercentage = 0;
    function getCoordinatesForPercentage(percentage) {
      var x = Math.cos(2 * Math.PI * percentage) * (size / 3);
      var y = Math.sin(2 * Math.PI * percentage) * (size / 3);
      return [x, y];
    }
    datasets.forEach(function(_ref) {
      var value = _ref.value, label = _ref.label, color = _ref.color;
      var percentage = value / getSummValue();
      var _getCoordinatesForPer = getCoordinatesForPercentage(cumulativePercentage), startX = _getCoordinatesForPer[0], startY = _getCoordinatesForPer[1];
      cumulativePercentage += percentage;
      var _getCoordinatesForPer2 = getCoordinatesForPercentage(cumulativePercentage), endX = _getCoordinatesForPer2[0], endY = _getCoordinatesForPer2[1];
      var largeArcFlag = percentage > 0.5 ? 1 : 0;
      var points = [
        "M " + startX + " " + startY,
        "A " + size / 3 + " " + size / 3 + " 0 " + largeArcFlag + " 1 " + endX + " " + endY,
        "L 0 0"
      ].join(" ");
      paths2.push({
        points,
        label,
        color
      });
    });
    return paths2;
  };
  var formatTooltipText = function formatTooltipText2() {
    if (currentIndex === null)
      return "";
    var _datasets$currentInde = datasets[currentIndex], value = _datasets$currentInde.value, label = _datasets$currentInde.label, color = _datasets$currentInde.color;
    var percentage = value / getSummValue() * 100;
    var round = function round2(v) {
      if (parseInt(v, 10) === v)
        return v;
      return Math.round(v * 100) / 100;
    };
    if (formatTooltip) {
      return formatTooltip({
        index: currentIndex,
        value,
        label,
        color,
        percentage
      });
    }
    var tooltipText = (label ? label + ": " : "") + round(value) + " (" + round(percentage) + "%)";
    return '\n      <div class="pie-chart-tooltip-label">\n        <span class="pie-chart-tooltip-color" style="background-color: ' + color + ';"></span> ' + tooltipText + "\n      </div>\n    ";
  };
  var setTooltip = function setTooltip2() {
    if (currentIndex === null && !f7Tooltip.current)
      return;
    if (!tooltip || !elRef.current || !f7)
      return;
    if (currentIndex !== null && !f7Tooltip.current) {
      f7Tooltip.current = f7.tooltip.create({
        trigger: "manual",
        containerEl: elRef.current,
        targetEl: elRef.current.querySelector('path[data-index="' + currentIndex + '"]'),
        text: formatTooltipText(),
        cssClass: "pie-chart-tooltip"
      });
      f7Tooltip.current.show();
      return;
    }
    if (!f7Tooltip.current)
      return;
    if (currentIndex !== null) {
      f7Tooltip.current.setText(formatTooltipText());
      f7Tooltip.current.setTargetEl(elRef.current.querySelector('path[data-index="' + currentIndex + '"]'));
      f7Tooltip.current.show();
    } else {
      f7Tooltip.current.hide();
    }
  };
  (0, import_react81.useEffect)(function() {
    if (previousIndex.current === currentIndex)
      return;
    previousIndex.current = currentIndex;
    emit(props, "select", currentIndex, datasets[currentIndex]);
    setTooltip();
  }, [currentIndex]);
  (0, import_react81.useEffect)(function() {
    return function() {
      if (f7Tooltip.current && f7Tooltip.current.destroy) {
        f7Tooltip.current.destroy();
      }
      f7Tooltip.current = null;
    };
  }, []);
  var classes = classNames("pie-chart", className);
  var paths = getPaths();
  return import_react81.default.createElement("div", _extends69({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react81.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "-" + size / 3 + " -" + size / 3 + " " + size * 2 / 3 + " " + size * 2 / 3,
    style: {
      transform: "rotate(-90deg)"
    }
  }, paths.map(function(path, index) {
    return import_react81.default.createElement("path", {
      key: path.label || index,
      d: path.points,
      fill: path.color,
      "data-index": index,
      className: classNames({
        "pie-chart-hidden": currentIndex !== null && currentIndex !== index
      }),
      onClick: function onClick() {
        return setCurrentIndex(index);
      },
      onMouseEnter: function onMouseEnter() {
        return setCurrentIndex(index);
      },
      onMouseLeave: function onMouseLeave() {
        return setCurrentIndex(null);
      }
    });
  })), children);
});
PieChart.displayName = "f7-pie-chart";
var pie_chart_default = PieChart;

// node_modules/framework7-react/esm/components/popover.js
var import_react82 = __toESM(require_react());
function _extends70() {
  _extends70 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends70.apply(this, arguments);
}
var Popover = (0, import_react82.forwardRef)(function(props, ref) {
  var _f7Popover = (0, import_react82.useRef)(null);
  var className = props.className, id = props.id, style = props.style, children = props.children, opened = props.opened, animate = props.animate, targetEl = props.targetEl, backdrop = props.backdrop, backdropEl = props.backdropEl, closeByBackdropClick = props.closeByBackdropClick, closeByOutsideClick = props.closeByOutsideClick, closeOnEscape = props.closeOnEscape, containerEl = props.containerEl;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react82.useRef)(null);
  var isOpened = (0, import_react82.useRef)(opened);
  var isClosing = (0, import_react82.useRef)(false);
  var onOpen = function onOpen2(instance) {
    isOpened.current = true;
    isClosing.current = false;
    emit(props, "popoverOpen", instance);
  };
  var onOpened = function onOpened2(instance) {
    emit(props, "popoverOpened", instance);
  };
  var onClose = function onClose2(instance) {
    isOpened.current = false;
    isClosing.current = true;
    emit(props, "popoverClose", instance);
  };
  var onClosed = function onClosed2(instance) {
    isClosing.current = false;
    emit(props, "popoverClosed", instance);
  };
  (0, import_react82.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Popover: function f7Popover() {
        return _f7Popover.current;
      }
    };
  });
  watchProp(opened, function(value) {
    if (!_f7Popover.current)
      return;
    if (value) {
      _f7Popover.current.open();
    } else {
      _f7Popover.current.close();
    }
  });
  var modalEvents = function modalEvents2(method) {
    if (!_f7Popover.current)
      return;
    _f7Popover.current[method]("open", onOpen);
    _f7Popover.current[method]("opened", onOpened);
    _f7Popover.current[method]("close", onClose);
    _f7Popover.current[method]("closed", onClosed);
  };
  var onMount = function onMount2() {
    if (!elRef.current)
      return;
    var popoverParams = {
      el: elRef.current
    };
    if (targetEl)
      popoverParams.targetEl = targetEl;
    if ("closeByBackdropClick" in props)
      popoverParams.closeByBackdropClick = closeByBackdropClick;
    if ("closeByOutsideClick" in props)
      popoverParams.closeByOutsideClick = closeByOutsideClick;
    if ("closeOnEscape" in props)
      popoverParams.closeOnEscape = closeOnEscape;
    if ("backdrop" in props)
      popoverParams.backdrop = backdrop;
    if ("backdropEl" in props)
      popoverParams.backdropEl = backdropEl;
    if ("animate" in props)
      popoverParams.animate = animate;
    if ("containerEl" in props)
      popoverParams.containerEl = containerEl;
    f7ready(function() {
      _f7Popover.current = f7.popover.create(popoverParams);
      modalEvents("on");
      if (opened && targetEl) {
        _f7Popover.current.open(targetEl, false);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Popover.current) {
      _f7Popover.current.destroy();
    }
    _f7Popover.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    modalEvents("on");
    return function() {
      modalEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var classes = classNames(className, "popover", modalStateClasses({
    isOpened,
    isClosing
  }), colorClasses(props));
  return import_react82.default.createElement("div", _extends70({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react82.default.createElement("div", {
    className: "popover-angle"
  }), import_react82.default.createElement("div", {
    className: "popover-inner"
  }, children));
});
Popover.displayName = "f7-popover";
var popover_default = Popover;

// node_modules/framework7-react/esm/components/popup.js
var import_react83 = __toESM(require_react());
function _extends71() {
  _extends71 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends71.apply(this, arguments);
}
var Popup = (0, import_react83.forwardRef)(function(props, ref) {
  var _f7Popup = (0, import_react83.useRef)(null);
  var className = props.className, id = props.id, style = props.style, children = props.children, tabletFullscreen = props.tabletFullscreen, push = props.push, opened = props.opened, closeByBackdropClick = props.closeByBackdropClick, backdrop = props.backdrop, backdropEl = props.backdropEl, animate = props.animate, closeOnEscape = props.closeOnEscape, _props$swipeToClose = props.swipeToClose, swipeToClose = _props$swipeToClose === void 0 ? false : _props$swipeToClose, swipeHandler = props.swipeHandler, containerEl = props.containerEl;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react83.useRef)(null);
  var isOpened = (0, import_react83.useRef)(opened);
  var isClosing = (0, import_react83.useRef)(false);
  var onSwipeStart = function onSwipeStart2(instance) {
    emit(props, "popupSwipeStart", instance);
  };
  var onSwipeMove = function onSwipeMove2(instance) {
    emit(props, "popupSwipeMove", instance);
  };
  var onSwipeEnd = function onSwipeEnd2(instance) {
    emit(props, "popupSwipeEnd", instance);
  };
  var onSwipeClose = function onSwipeClose2(instance) {
    emit(props, "popupSwipeClose", instance);
  };
  var onOpen = function onOpen2(instance) {
    isOpened.current = true;
    isClosing.current = false;
    emit(props, "popupOpen", instance);
  };
  var onOpened = function onOpened2(instance) {
    emit(props, "popupOpened", instance);
  };
  var onClose = function onClose2(instance) {
    isOpened.current = false;
    isClosing.current = true;
    emit(props, "popupClose", instance);
  };
  var onClosed = function onClosed2(instance) {
    isClosing.current = false;
    emit(props, "popupClosed", instance);
  };
  (0, import_react83.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Popup: function f7Popup() {
        return _f7Popup.current;
      }
    };
  });
  watchProp(opened, function(value) {
    if (!_f7Popup.current)
      return;
    if (value) {
      _f7Popup.current.open();
    } else {
      _f7Popup.current.close();
    }
  });
  var modalEvents = function modalEvents2(method) {
    if (!_f7Popup.current)
      return;
    _f7Popup.current[method]("swipeStart", onSwipeStart);
    _f7Popup.current[method]("swipeMove", onSwipeMove);
    _f7Popup.current[method]("swipeEnd", onSwipeEnd);
    _f7Popup.current[method]("swipeClose", onSwipeClose);
    _f7Popup.current[method]("open", onOpen);
    _f7Popup.current[method]("opened", onOpened);
    _f7Popup.current[method]("close", onClose);
    _f7Popup.current[method]("closed", onClosed);
  };
  var onMount = function onMount2() {
    if (!elRef.current)
      return;
    var popupParams = {
      el: elRef.current
    };
    if ("closeByBackdropClick" in props)
      popupParams.closeByBackdropClick = closeByBackdropClick;
    if ("closeOnEscape" in props)
      popupParams.closeOnEscape = closeOnEscape;
    if ("animate" in props)
      popupParams.animate = animate;
    if ("backdrop" in props)
      popupParams.backdrop = backdrop;
    if ("backdropEl" in props)
      popupParams.backdropEl = backdropEl;
    if ("swipeToClose" in props)
      popupParams.swipeToClose = swipeToClose;
    if ("swipeHandler" in props)
      popupParams.swipeHandler = swipeHandler;
    if ("containerEl" in props)
      popupParams.containerEl = containerEl;
    f7ready(function() {
      _f7Popup.current = f7.popup.create(popupParams);
      modalEvents("on");
      if (opened) {
        _f7Popup.current.open(false);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Popup.current) {
      _f7Popup.current.destroy();
    }
    _f7Popup.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    modalEvents("on");
    return function() {
      modalEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var classes = classNames(className, "popup", {
    "popup-tablet-fullscreen": tabletFullscreen,
    "popup-push": push
  }, modalStateClasses({
    isOpened,
    isClosing
  }), colorClasses(props));
  return import_react83.default.createElement("div", _extends71({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Popup.displayName = "f7-popup";
var popup_default = Popup;

// node_modules/framework7-react/esm/components/progressbar.js
var import_react84 = __toESM(require_react());
function _extends72() {
  _extends72 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends72.apply(this, arguments);
}
var Progressbar = (0, import_react84.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, progress = props.progress, infinite = props.infinite;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react84.useRef)(null);
  var set = function set2(newProgress, speed) {
    if (!f7)
      return;
    f7.progressbar.set(elRef.current, newProgress, speed);
  };
  (0, import_react84.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      set
    };
  });
  var transformStyle = {
    transform: progress ? "translate3d(" + (-100 + progress) + "%, 0, 0)" : "",
    WebkitTransform: progress ? "translate3d(" + (-100 + progress) + "%, 0, 0)" : ""
  };
  var classes = classNames(className, "progressbar", {
    "progressbar-infinite": infinite
  }, colorClasses(props));
  return import_react84.default.createElement("span", _extends72({
    ref: elRef,
    id,
    style,
    className: classes,
    "data-progress": progress
  }, extraAttrs), import_react84.default.createElement("span", {
    style: transformStyle
  }));
});
Progressbar.displayName = "f7-progressbar";
var progressbar_default = Progressbar;

// node_modules/framework7-react/esm/components/radio.js
var import_react85 = __toESM(require_react());
function _extends73() {
  _extends73 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends73.apply(this, arguments);
}
var Radio = (0, import_react85.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, value = props.value, disabled = props.disabled, readonly = props.readonly, checked = props.checked, defaultChecked = props.defaultChecked;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react85.useRef)(null);
  var onChange = function onChange2(event) {
    emit(props, "change", event);
  };
  (0, import_react85.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var inputEl = import_react85.default.createElement("input", {
    type: "radio",
    name,
    value,
    disabled,
    readOnly: readonly,
    checked,
    defaultChecked,
    onChange
  });
  var iconEl = import_react85.default.createElement("i", {
    className: "icon-radio"
  });
  var classes = classNames(className, "radio", {
    disabled
  }, colorClasses(props));
  return import_react85.default.createElement("label", _extends73({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), inputEl, iconEl, children);
});
Radio.displayName = "f7-radio";
var radio_default = Radio;

// node_modules/framework7-react/esm/components/row.js
var import_react86 = __toESM(require_react());
function _extends74() {
  _extends74 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends74.apply(this, arguments);
}
var Row = (0, import_react86.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$tag = props.tag, tag = _props$tag === void 0 ? "div" : _props$tag, noGap = props.noGap, resizable = props.resizable, resizableFixed = props.resizableFixed, resizableAbsolute = props.resizableAbsolute, _props$resizableHandl = props.resizableHandler, resizableHandler = _props$resizableHandl === void 0 ? true : _props$resizableHandl;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react86.useRef)(null);
  var onClick = function onClick2(event) {
    emit(props, "click", event);
  };
  var onResize = function onResize2(el) {
    if (el === elRef.current) {
      emit(props, "gridResize");
    }
  };
  (0, import_react86.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  (0, import_react86.useEffect)(function() {
    f7ready(function() {
      f7.on("gridResize", onResize);
    });
    return function() {
      f7.off("gridResize", onResize);
    };
  });
  var RowTag = tag;
  var classes = classNames(className, "row", {
    "no-gap": noGap,
    resizable,
    "resizable-fixed": resizableFixed,
    "resizable-absolute": resizableAbsolute
  }, colorClasses(props));
  return import_react86.default.createElement(RowTag, _extends74({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs, {
    onClick
  }), children, resizable && resizableHandler && import_react86.default.createElement("span", {
    className: "resize-handler"
  }));
});
Row.displayName = "f7-row";
var row_default = Row;

// node_modules/framework7-react/esm/components/searchbar.js
var import_react87 = __toESM(require_react());
function _extends75() {
  _extends75 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends75.apply(this, arguments);
}
var Searchbar = (0, import_react87.forwardRef)(function(props, ref) {
  var _f7Searchbar = (0, import_react87.useRef)(null);
  var className = props.className, id = props.id, style = props.style, noShadow = props.noShadow, noHairline = props.noHairline, _props$form = props.form, form = _props$form === void 0 ? true : _props$form, _props$placeholder = props.placeholder, placeholder = _props$placeholder === void 0 ? "Search" : _props$placeholder, spellcheck = props.spellcheck, _props$disableButton = props.disableButton, disableButton = _props$disableButton === void 0 ? true : _props$disableButton, _props$disableButtonT = props.disableButtonText, disableButtonText = _props$disableButtonT === void 0 ? "Cancel" : _props$disableButtonT, _props$clearButton = props.clearButton, clearButton = _props$clearButton === void 0 ? true : _props$clearButton, value = props.value, _props$inputEvents = props.inputEvents, inputEvents = _props$inputEvents === void 0 ? "change input compositionend" : _props$inputEvents, expandable = props.expandable, inline = props.inline, searchContainer = props.searchContainer, _props$searchIn = props.searchIn, searchIn = _props$searchIn === void 0 ? ".item-title" : _props$searchIn, _props$searchItem = props.searchItem, searchItem = _props$searchItem === void 0 ? "li" : _props$searchItem, _props$searchGroup = props.searchGroup, searchGroup = _props$searchGroup === void 0 ? ".list-group" : _props$searchGroup, _props$searchGroupTit = props.searchGroupTitle, searchGroupTitle = _props$searchGroupTit === void 0 ? ".item-divider, .list-group-title" : _props$searchGroupTit, _props$foundEl = props.foundEl, foundEl = _props$foundEl === void 0 ? ".searchbar-found" : _props$foundEl, _props$notFoundEl = props.notFoundEl, notFoundEl = _props$notFoundEl === void 0 ? ".searchbar-not-found" : _props$notFoundEl, backdrop = props.backdrop, backdropEl = props.backdropEl, _props$hideOnEnableEl = props.hideOnEnableEl, hideOnEnableEl = _props$hideOnEnableEl === void 0 ? ".searchbar-hide-on-enable" : _props$hideOnEnableEl, _props$hideOnSearchEl = props.hideOnSearchEl, hideOnSearchEl = _props$hideOnSearchEl === void 0 ? ".searchbar-hide-on-search" : _props$hideOnSearchEl, _props$ignore = props.ignore, ignore = _props$ignore === void 0 ? ".searchbar-ignore" : _props$ignore, _props$customSearch = props.customSearch, customSearch = _props$customSearch === void 0 ? false : _props$customSearch, _props$removeDiacriti = props.removeDiacritics, removeDiacritics = _props$removeDiacriti === void 0 ? false : _props$removeDiacriti, _props$hideDividers = props.hideDividers, hideDividers = _props$hideDividers === void 0 ? true : _props$hideDividers, _props$hideGroups = props.hideGroups, hideGroups = _props$hideGroups === void 0 ? true : _props$hideGroups, _props$init = props.init, init = _props$init === void 0 ? true : _props$init;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react87.useRef)(null);
  var search = function search2(query) {
    if (!_f7Searchbar.current)
      return void 0;
    return _f7Searchbar.current.search(query);
  };
  var enable = function enable2() {
    if (!_f7Searchbar.current)
      return void 0;
    return _f7Searchbar.current.enable();
  };
  var disable = function disable2() {
    if (!_f7Searchbar.current)
      return void 0;
    return _f7Searchbar.current.disable();
  };
  var toggle = function toggle2() {
    if (!_f7Searchbar.current)
      return void 0;
    return _f7Searchbar.current.toggle();
  };
  var clear = function clear2() {
    if (!_f7Searchbar.current)
      return void 0;
    return _f7Searchbar.current.clear();
  };
  var onChange = function onChange2(event) {
    emit(props, "change", event);
  };
  var onInput = function onInput2(event) {
    emit(props, "input", event);
  };
  var onFocus = function onFocus2(event) {
    emit(props, "focus", event);
  };
  var onBlur = function onBlur2(event) {
    emit(props, "blur", event);
  };
  var onSubmit = function onSubmit2(event) {
    emit(props, "submit", event);
  };
  var onClearButtonClick = function onClearButtonClick2(event) {
    emit(props, "click:clear clickClear", event);
  };
  var onDisableButtonClick = function onDisableButtonClick2(event) {
    emit(props, "click:disable clickDisable", event);
  };
  (0, import_react87.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Searchbar: function f7Searchbar() {
        return _f7Searchbar.current;
      },
      search,
      enable,
      disable,
      toggle,
      clear
    };
  });
  var onMount = function onMount2() {
    if (!init)
      return;
    f7ready(function() {
      var params = noUndefinedProps({
        el: elRef.current,
        inputEvents,
        searchContainer,
        searchIn,
        searchItem,
        searchGroup,
        searchGroupTitle,
        hideOnEnableEl,
        hideOnSearchEl,
        foundEl,
        notFoundEl,
        backdrop,
        backdropEl,
        disableButton,
        ignore,
        customSearch,
        removeDiacritics,
        hideDividers,
        hideGroups,
        expandable,
        inline,
        on: {
          search: function search2(searchbar, query, previousQuery) {
            emit(props, "searchbarSearch", searchbar, query, previousQuery);
          },
          clear: function clear2(searchbar, previousQuery) {
            emit(props, "searchbarClear", searchbar, previousQuery);
          },
          enable: function enable2(searchbar) {
            emit(props, "searchbarEnable", searchbar);
          },
          disable: function disable2(searchbar) {
            emit(props, "searchbarDisable", searchbar);
          }
        }
      });
      Object.keys(params).forEach(function(key) {
        if (params[key] === "") {
          delete params[key];
        }
      });
      _f7Searchbar.current = f7.searchbar.create(params);
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Searchbar.current && _f7Searchbar.current.destroy)
      _f7Searchbar.current.destroy();
    _f7Searchbar.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var clearEl;
  var disableEl;
  if (clearButton) {
    clearEl = import_react87.default.createElement("span", {
      className: "input-clear-button",
      onClick: onClearButtonClick
    });
  }
  if (disableButton) {
    disableEl = import_react87.default.createElement("span", {
      className: "searchbar-disable-button",
      onClick: onDisableButtonClick
    }, disableButtonText);
  }
  var SearchbarTag = form ? "form" : "div";
  var classes = classNames(className, "searchbar", {
    "searchbar-inline": inline,
    "no-shadow": noShadow,
    "no-hairline": noHairline,
    "searchbar-expandable": expandable
  }, colorClasses(props));
  var slots = getSlots(props);
  return import_react87.default.createElement(SearchbarTag, _extends75({
    ref: elRef,
    id,
    style,
    className: classes
  }, extraAttrs, {
    onSubmit
  }), slots["before-inner"], import_react87.default.createElement("div", {
    className: "searchbar-inner"
  }, slots["inner-start"], import_react87.default.createElement("div", {
    className: "searchbar-input-wrap"
  }, slots["input-wrap-start"], import_react87.default.createElement("input", {
    value,
    placeholder,
    spellCheck: spellcheck,
    type: "search",
    onInput,
    onChange,
    onFocus,
    onBlur
  }), import_react87.default.createElement("i", {
    className: "searchbar-icon"
  }), clearEl, slots["input-wrap-end"]), disableEl, slots["inner-end"], slots.default), slots["after-inner"]);
});
Searchbar.displayName = "f7-searchbar";
var searchbar_default = Searchbar;

// node_modules/framework7-react/esm/components/segmented.js
var import_react88 = __toESM(require_react());
function _extends76() {
  _extends76 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends76.apply(this, arguments);
}
var Segmented = (0, import_react88.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, raised = props.raised, raisedIos = props.raisedIos, raisedMd = props.raisedMd, raisedAurora = props.raisedAurora, round = props.round, roundIos = props.roundIos, roundMd = props.roundMd, roundAurora = props.roundAurora, strong = props.strong, strongIos = props.strongIos, strongMd = props.strongMd, strongAurora = props.strongAurora, _props$tag = props.tag, tag = _props$tag === void 0 ? "div" : _props$tag;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react88.useRef)(null);
  (0, import_react88.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, {
    segmented: true,
    "segmented-raised": raised,
    "segmented-raised-ios": raisedIos,
    "segmented-raised-aurora": raisedAurora,
    "segmented-raised-md": raisedMd,
    "segmented-round": round,
    "segmented-round-ios": roundIos,
    "segmented-round-aurora": roundAurora,
    "segmented-round-md": roundMd,
    "segmented-strong": strong,
    "segmented-strong-ios": strongIos,
    "segmented-strong-md": strongMd,
    "segmented-strong-aurora": strongAurora
  }, colorClasses(props));
  var SegmentedTag = tag;
  return import_react88.default.createElement(SegmentedTag, _extends76({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children, (strong || strongIos || strongMd || strongAurora) && import_react88.default.createElement("span", {
    className: "segmented-highlight"
  }));
});
Segmented.displayName = "f7-segmented";
var segmented_default = Segmented;

// node_modules/framework7-react/esm/components/sheet.js
var import_react89 = __toESM(require_react());
function _extends77() {
  _extends77 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends77.apply(this, arguments);
}
var Sheet = (0, import_react89.forwardRef)(function(props, ref) {
  var _f7Sheet = (0, import_react89.useRef)(null);
  var className = props.className, id = props.id, style = props.style, top = props.top, bottom = props.bottom, position = props.position, push = props.push, opened = props.opened, animate = props.animate, backdrop = props.backdrop, backdropEl = props.backdropEl, closeByBackdropClick = props.closeByBackdropClick, closeByOutsideClick = props.closeByOutsideClick, closeOnEscape = props.closeOnEscape, swipeToClose = props.swipeToClose, swipeToStep = props.swipeToStep, swipeHandler = props.swipeHandler, containerEl = props.containerEl;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react89.useRef)(null);
  var isOpened = (0, import_react89.useRef)(opened);
  var isClosing = (0, import_react89.useRef)(false);
  var onStepProgress = function onStepProgress2(instance, progress) {
    emit(props, "sheetStepProgress", instance, progress);
  };
  var onStepOpen = function onStepOpen2(instance) {
    emit(props, "sheetStepOpen", instance);
  };
  var onStepClose = function onStepClose2(instance) {
    emit(props, "sheetStepClose", instance);
  };
  var onOpen = function onOpen2(instance) {
    isOpened.current = true;
    isClosing.current = false;
    emit(props, "sheetOpen", instance);
  };
  var onOpened = function onOpened2(instance) {
    emit(props, "sheetOpened", instance);
  };
  var onClose = function onClose2(instance) {
    isOpened.current = false;
    isClosing.current = true;
    emit(props, "sheetClose", instance);
  };
  var onClosed = function onClosed2(instance) {
    isClosing.current = false;
    emit(props, "sheetClosed", instance);
  };
  (0, import_react89.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Sheet: function f7Sheet() {
        return _f7Sheet.current;
      }
    };
  });
  var modalEvents = function modalEvents2(method) {
    if (!_f7Sheet.current)
      return;
    _f7Sheet.current[method]("open", onOpen);
    _f7Sheet.current[method]("opened", onOpened);
    _f7Sheet.current[method]("close", onClose);
    _f7Sheet.current[method]("closed", onClosed);
    _f7Sheet.current[method]("stepOpen", onStepOpen);
    _f7Sheet.current[method]("stepClose", onStepClose);
    _f7Sheet.current[method]("stepProgress", onStepProgress);
  };
  var onMount = function onMount2() {
    if (!elRef.current)
      return;
    var sheetParams = {
      el: elRef.current
    };
    if ("animate" in props && typeof animate !== "undefined")
      sheetParams.animate = animate;
    if ("backdrop" in props && typeof backdrop !== "undefined")
      sheetParams.backdrop = backdrop;
    if ("backdropEl" in props)
      sheetParams.backdropEl = backdropEl;
    if ("closeByBackdropClick" in props)
      sheetParams.closeByBackdropClick = closeByBackdropClick;
    if ("closeByOutsideClick" in props)
      sheetParams.closeByOutsideClick = closeByOutsideClick;
    if ("closeOnEscape" in props)
      sheetParams.closeOnEscape = closeOnEscape;
    if ("swipeToClose" in props)
      sheetParams.swipeToClose = swipeToClose;
    if ("swipeToStep" in props)
      sheetParams.swipeToStep = swipeToStep;
    if ("swipeHandler" in props)
      sheetParams.swipeHandler = swipeHandler;
    if ("containerEl" in props)
      sheetParams.containerEl = containerEl;
    f7ready(function() {
      _f7Sheet.current = f7.sheet.create(sheetParams);
      modalEvents("on");
      if (opened) {
        _f7Sheet.current.open(false);
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Sheet.current) {
      _f7Sheet.current.destroy();
    }
    _f7Sheet.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    modalEvents("on");
    return function() {
      modalEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  watchProp(opened, function(value) {
    if (!_f7Sheet.current)
      return;
    if (value) {
      _f7Sheet.current.open();
    } else {
      _f7Sheet.current.close();
    }
  });
  var slots = getSlots(props);
  var fixedList = [];
  var staticList = [];
  var fixedTags = "navbar toolbar tabbar subnavbar searchbar messagebar fab list-index panel".split(" ").map(function(tagName) {
    return "f7-" + tagName;
  });
  var slotsDefault = slots.default;
  if (slotsDefault && slotsDefault.length) {
    slotsDefault.forEach(function(child) {
      if (typeof child === "undefined")
        return;
      var isFixedTag = false;
      var tag = child.type && (child.type.displayName || child.type.name);
      if (!tag) {
        staticList.push(child);
        return;
      }
      if (fixedTags.indexOf(tag) >= 0) {
        isFixedTag = true;
      }
      if (isFixedTag)
        fixedList.push(child);
      else
        staticList.push(child);
    });
  }
  var innerEl = import_react89.default.createElement("div", {
    className: "sheet-modal-inner"
  }, staticList, slots.static);
  var positionComputed = "bottom";
  if (position)
    positionComputed = position;
  else if (top)
    positionComputed = "top";
  else if (bottom)
    positionComputed = "bottom";
  var classes = classNames(className, "sheet-modal", "sheet-modal-" + positionComputed, {
    "sheet-modal-push": push
  }, modalStateClasses({
    isOpened,
    isClosing
  }), colorClasses(props));
  return import_react89.default.createElement("div", _extends77({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), fixedList, slots.fixed, innerEl);
});
Sheet.displayName = "f7-sheet";
var sheet_default = Sheet;

// node_modules/skeleton-elements/react/esm/SkeletonBlock.js
var import_react90 = __toESM(require_react());
var _excluded = ["tag", "width", "height", "borderRadius", "effect", "className", "style", "children"];
function _extends78() {
  _extends78 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends78.apply(this, arguments);
}
function _objectWithoutPropertiesLoose2(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SkeletonBlock = function SkeletonBlock2(_temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$tag = _ref.tag, Tag = _ref$tag === void 0 ? "div" : _ref$tag, width = _ref.width, height = _ref.height, borderRadius = _ref.borderRadius, effect = _ref.effect, className = _ref.className, style = _ref.style, children = _ref.children, other = _objectWithoutPropertiesLoose2(_ref, _excluded);
  var skeletonStyle = style || {};
  if (width)
    skeletonStyle.width = width;
  if (height)
    skeletonStyle.height = height;
  if (borderRadius)
    skeletonStyle.borderRadius = borderRadius;
  var skeletonClassName = ["skeleton-block", effect && "skeleton-effect-" + effect, className].filter(function(c) {
    return !!c;
  }).join(" ");
  return import_react90.default.createElement(Tag, _extends78({
    style: skeletonStyle,
    className: skeletonClassName
  }, other), children);
};
var SkeletonBlock_default = SkeletonBlock;

// node_modules/skeleton-elements/react/esm/SkeletonText.js
var import_react91 = __toESM(require_react());
var _excluded2 = ["tag", "effect", "className", "children"];
function _extends79() {
  _extends79 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends79.apply(this, arguments);
}
function _objectWithoutPropertiesLoose3(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SkeletonText = function SkeletonText2(_temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$tag = _ref.tag, Tag = _ref$tag === void 0 ? "span" : _ref$tag, effect = _ref.effect, className = _ref.className, children = _ref.children, other = _objectWithoutPropertiesLoose3(_ref, _excluded2);
  var skeletonClassName = ["skeleton-text", effect && "skeleton-effect-" + effect, className].filter(function(c) {
    return !!c;
  }).join(" ");
  return import_react91.default.createElement(Tag, _extends79({
    className: skeletonClassName
  }, other), children);
};
var SkeletonText_default = SkeletonText;

// node_modules/skeleton-elements/react/esm/SkeletonImage.js
var import_react92 = __toESM(require_react());

// node_modules/skeleton-elements/react/esm/multiply-svg-points.js
function multiplySvgPoints(pointsString, iconSize, width, height) {
  var iconMaxSize = Math.min(width, height) * 0.5;
  var scale = iconMaxSize / iconSize;
  return pointsString.replace(/([0-9,\.]{1,})/g, function(coords) {
    coords = coords.split(",").map(function(p) {
      return parseFloat(p);
    });
    var x = coords[0] * scale + width / 2 - iconSize * scale / 2;
    var y = coords[1] * scale + height / 2 - iconSize * scale / 2;
    if (iconMaxSize >= 100) {
      return Math.round(x) + "," + Math.round(y);
    }
    return x + "," + y;
  });
}
var multiply_svg_points_default = multiplySvgPoints;

// node_modules/skeleton-elements/react/esm/SkeletonImage.js
var _excluded3 = ["tag", "width", "height", "borderRadius", "color", "iconColor", "showIcon", "effect", "className", "children"];
function _extends80() {
  _extends80 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends80.apply(this, arguments);
}
function _objectWithoutPropertiesLoose4(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SkeletonImage = function SkeletonImage2(_temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$tag = _ref.tag, Tag = _ref$tag === void 0 ? "span" : _ref$tag, _ref$width = _ref.width, width = _ref$width === void 0 ? 1200 : _ref$width, _ref$height = _ref.height, height = _ref$height === void 0 ? 600 : _ref$height, borderRadius = _ref.borderRadius, color = _ref.color, iconColor = _ref.iconColor, _ref$showIcon = _ref.showIcon, showIcon = _ref$showIcon === void 0 ? true : _ref$showIcon, effect = _ref.effect, className = _ref.className, children = _ref.children, other = _objectWithoutPropertiesLoose4(_ref, _excluded3);
  var skeletonClassName = ["skeleton-image", effect && "skeleton-effect-" + effect, className].filter(function(c) {
    return !!c;
  }).join(" ");
  function multiplyPoints(pointsString) {
    return multiply_svg_points_default(pointsString, 56, width, height);
  }
  return import_react92.default.createElement(Tag, _extends80({
    className: skeletonClassName
  }, other), import_react92.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width,
    height,
    viewBox: "0 0 " + width + " " + height,
    style: {
      borderRadius
    },
    preserveAspectRatio: "none"
  }, import_react92.default.createElement("polygon", {
    style: {
      fill: color
    },
    fillRule: "evenodd",
    points: "0 0 " + width + " 0 " + width + " " + height + " 0 " + height
  }), showIcon && import_react92.default.createElement("path", {
    style: {
      fill: iconColor
    },
    d: multiplyPoints("M7.7148,49.5742 L48.2852,49.5742 C53.1836,49.5742 55.6446,47.1367 55.6446,42.3086 L55.6446,13.6914 C55.6446,8.8633 53.1836,6.4258 48.2852,6.4258 L7.7148,6.4258 C2.8398,6.4258 0.3554,8.8398 0.3554,13.6914 L0.3554,42.3086 C0.3554,47.1602 2.8398,49.5742 7.7148,49.5742 Z M39.2851,27.9414 C38.2304,27.0039 37.0351,26.5118 35.7695,26.5118 C34.457,26.5118 33.3085,26.9571 32.2304,27.918 L21.6366,37.3867 L17.3007,33.4492 C16.3163,32.582 15.2617,32.1133 14.1366,32.1133 C13.1054,32.1133 12.0976,32.5586 11.1366,33.4258 L4.1288,39.7305 L4.1288,13.8789 C4.1288,11.4414 5.4413,10.1992 7.7851,10.1992 L48.2147,10.1992 C50.535,10.1992 51.8708,11.4414 51.8708,13.8789 L51.8708,39.7539 L39.2851,27.9414 Z M17.8163,28.1992 C20.8398,28.1992 23.3241,25.7149 23.3241,22.668 C23.3241,19.6445 20.8398,17.1367 17.8163,17.1367 C14.7695,17.1367 12.2851,19.6445 12.2851,22.668 C12.2851,25.7149 14.7695,28.1992 17.8163,28.1992 Z")
  })), children);
};
var SkeletonImage_default = SkeletonImage;

// node_modules/skeleton-elements/react/esm/SkeletonAvatar.js
var import_react93 = __toESM(require_react());
var _excluded4 = ["tag", "size", "color", "showIcon", "iconColor", "borderRadius", "effect", "className", "children"];
function _extends81() {
  _extends81 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends81.apply(this, arguments);
}
function _objectWithoutPropertiesLoose5(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SkeletonAvatar = function SkeletonAvatar2(_temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$tag = _ref.tag, Tag = _ref$tag === void 0 ? "span" : _ref$tag, _ref$size = _ref.size, size = _ref$size === void 0 ? 48 : _ref$size, color = _ref.color, _ref$showIcon = _ref.showIcon, showIcon = _ref$showIcon === void 0 ? true : _ref$showIcon, iconColor = _ref.iconColor, _ref$borderRadius = _ref.borderRadius, borderRadius = _ref$borderRadius === void 0 ? "50%" : _ref$borderRadius, effect = _ref.effect, className = _ref.className, children = _ref.children, other = _objectWithoutPropertiesLoose5(_ref, _excluded4);
  var skeletonClassName = ["skeleton-avatar", effect && "skeleton-effect-" + effect, className].filter(function(c) {
    return !!c;
  }).join(" ");
  function multiplyPoints(pointsString) {
    return multiply_svg_points_default(pointsString, 56, size, size);
  }
  return import_react93.default.createElement(Tag, _extends81({
    className: skeletonClassName
  }, other), import_react93.default.createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    width: size,
    height: size,
    viewBox: "0 0 " + size + " " + size,
    preserveAspectRatio: "none"
  }, import_react93.default.createElement("rect", {
    width: size,
    height: size,
    fillRule: "evenodd",
    style: {
      fill: color
    },
    rx: borderRadius
  }), showIcon && import_react93.default.createElement("path", {
    style: {
      fill: iconColor
    },
    d: multiplyPoints("M28.22461,27.1590817 C34.9209931,27.1590817 40.6829044,21.1791004 40.6829044,13.3926332 C40.6829044,5.69958662 34.8898972,0 28.22461,0 C21.5594557,0 15.7663156,5.82423601 15.7663156,13.4549579 C15.7663156,21.1791004 21.5594557,27.1590817 28.22461,27.1590817 Z M8.66515427,56 L47.7841986,56 C52.6739629,56 54.4181241,54.5984253 54.4181241,51.8576005 C54.4181241,43.8219674 44.358068,32.7341519 28.22461,32.7341519 C12.0600561,32.7341519 2,43.8219674 2,51.8576005 C2,54.5984253 3.74402832,56 8.66515427,56 Z")
  })), children);
};
var SkeletonAvatar_default = SkeletonAvatar;

// node_modules/framework7-react/esm/components/skeleton-avatar.js
var skeleton_avatar_default = SkeletonAvatar_default;

// node_modules/framework7-react/esm/components/skeleton-block.js
var skeleton_block_default = SkeletonBlock_default;

// node_modules/framework7-react/esm/components/skeleton-image.js
var skeleton_image_default = SkeletonImage_default;

// node_modules/framework7-react/esm/components/skeleton-text.js
var skeleton_text_default = SkeletonText_default;

// node_modules/framework7-react/esm/components/stepper.js
var import_react98 = __toESM(require_react());
function _extends82() {
  _extends82 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends82.apply(this, arguments);
}
var Stepper = (0, import_react98.forwardRef)(function(props, ref) {
  var _f7Stepper = (0, import_react98.useRef)(null);
  var className = props.className, id = props.id, style = props.style, _props$init = props.init, init = _props$init === void 0 ? true : _props$init, _props$value = props.value, value = _props$value === void 0 ? 0 : _props$value, _props$min = props.min, min = _props$min === void 0 ? 0 : _props$min, _props$max = props.max, max = _props$max === void 0 ? 100 : _props$max, _props$step = props.step, step = _props$step === void 0 ? 1 : _props$step, formatValue = props.formatValue, name2 = props.name, inputId = props.inputId, _props$input = props.input, input = _props$input === void 0 ? true : _props$input, _props$inputType = props.inputType, inputType = _props$inputType === void 0 ? "text" : _props$inputType, _props$inputReadonly = props.inputReadonly, inputReadonly = _props$inputReadonly === void 0 ? false : _props$inputReadonly, _props$autorepeat = props.autorepeat, autorepeat = _props$autorepeat === void 0 ? false : _props$autorepeat, _props$autorepeatDyna = props.autorepeatDynamic, autorepeatDynamic = _props$autorepeatDyna === void 0 ? false : _props$autorepeatDyna, _props$wraps = props.wraps, wraps = _props$wraps === void 0 ? false : _props$wraps, _props$manualInputMod = props.manualInputMode, manualInputMode = _props$manualInputMod === void 0 ? false : _props$manualInputMod, _props$decimalPoint = props.decimalPoint, decimalPoint = _props$decimalPoint === void 0 ? 4 : _props$decimalPoint, _props$buttonsEndInpu = props.buttonsEndInputMode, buttonsEndInputMode = _props$buttonsEndInpu === void 0 ? true : _props$buttonsEndInpu, disabled = props.disabled, buttonsOnly = props.buttonsOnly, round = props.round, roundMd = props.roundMd, roundIos = props.roundIos, roundAurora = props.roundAurora, fill = props.fill, fillMd = props.fillMd, fillIos = props.fillIos, fillAurora = props.fillAurora, large = props.large, largeMd = props.largeMd, largeIos = props.largeIos, largeAurora = props.largeAurora, small = props.small, smallMd = props.smallMd, smallIos = props.smallIos, smallAurora = props.smallAurora, raised = props.raised, raisedMd = props.raisedMd, raisedIos = props.raisedIos, raisedAurora = props.raisedAurora;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react98.useRef)(null);
  var increment = function increment2() {
    if (!_f7Stepper.current)
      return;
    _f7Stepper.current.increment();
  };
  var decrement = function decrement2() {
    if (!_f7Stepper.current)
      return;
    _f7Stepper.current.decrement();
  };
  var setValue = function setValue2(newValue) {
    if (_f7Stepper.current && _f7Stepper.current.setValue)
      _f7Stepper.current.setValue(newValue);
  };
  var getValue = function getValue2() {
    if (_f7Stepper.current && _f7Stepper.current.getValue) {
      return _f7Stepper.current.getValue();
    }
    return void 0;
  };
  var onInput = function onInput2(event) {
    emit(props, "input", event, _f7Stepper.current);
  };
  var onChange = function onChange2(event) {
    emit(props, "change", event, _f7Stepper.current);
  };
  var onMinusClick = function onMinusClick2(event) {
    emit(props, "stepperMinusClick", event, _f7Stepper.current);
  };
  var onPlusClick = function onPlusClick2(event) {
    emit(props, "stepperPlusClick", event, _f7Stepper.current);
  };
  (0, import_react98.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7Stepper: function f7Stepper() {
        return _f7Stepper.current;
      },
      increment,
      decrement,
      setValue,
      getValue
    };
  });
  watchProp(value, function(newValue) {
    if (!_f7Stepper.current)
      return;
    _f7Stepper.current.setValue(newValue);
  });
  var onStepperChange = function onStepperChange2(stepper, newValue) {
    emit(props, "stepperChange", newValue);
  };
  var stepperEvents = function stepperEvents2(method) {
    if (!_f7Stepper.current)
      return;
    _f7Stepper.current[method]("change", onStepperChange);
  };
  var onMount = function onMount2() {
    f7ready(function() {
      if (!init || !elRef.current)
        return;
      _f7Stepper.current = f7.stepper.create(noUndefinedProps({
        el: elRef.current,
        min,
        max,
        value,
        step,
        formatValue,
        autorepeat,
        autorepeatDynamic,
        wraps,
        manualInputMode,
        decimalPoint,
        buttonsEndInputMode
      }));
      stepperEvents("on");
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7Stepper.current && _f7Stepper.current.destroy) {
      _f7Stepper.current.destroy();
    }
    _f7Stepper.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    stepperEvents("on");
    return function() {
      stepperEvents("off");
    };
  });
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  var inputWrapEl;
  var valueEl;
  if (input && !buttonsOnly) {
    var inputEl = import_react98.default.createElement("input", {
      name: name2,
      id: inputId,
      type: inputType,
      min: inputType === "number" ? min : void 0,
      max: inputType === "number" ? max : void 0,
      step: inputType === "number" ? step : void 0,
      onInput,
      onChange,
      value,
      readOnly: inputReadonly
    });
    inputWrapEl = import_react98.default.createElement("div", {
      className: "stepper-input-wrap"
    }, inputEl);
  }
  if (!input && !buttonsOnly) {
    valueEl = import_react98.default.createElement("div", {
      className: "stepper-value"
    }, value);
  }
  var classes = classNames(className, "stepper", {
    disabled,
    "stepper-round": round,
    "stepper-round-ios": roundIos,
    "stepper-round-md": roundMd,
    "stepper-round-aurora": roundAurora,
    "stepper-fill": fill,
    "stepper-fill-ios": fillIos,
    "stepper-fill-md": fillMd,
    "stepper-fill-aurora": fillAurora,
    "stepper-large": large,
    "stepper-large-ios": largeIos,
    "stepper-large-md": largeMd,
    "stepper-large-aurora": largeAurora,
    "stepper-small": small,
    "stepper-small-ios": smallIos,
    "stepper-small-md": smallMd,
    "stepper-small-aurora": smallAurora,
    "stepper-raised": raised,
    "stepper-raised-ios": raisedIos,
    "stepper-raised-md": raisedMd,
    "stepper-raised-aurora": raisedAurora
  }, colorClasses(props));
  return import_react98.default.createElement("div", _extends82({
    ref: elRef,
    id,
    style,
    className: classes
  }, extraAttrs), import_react98.default.createElement("div", {
    className: "stepper-button-minus",
    onClick: onMinusClick
  }), inputWrapEl, valueEl, import_react98.default.createElement("div", {
    className: "stepper-button-plus",
    onClick: onPlusClick
  }));
});
Stepper.displayName = "f7-stepper";
var stepper_default = Stepper;

// node_modules/framework7-react/esm/components/subnavbar.js
var import_react99 = __toESM(require_react());
function _extends83() {
  _extends83 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends83.apply(this, arguments);
}
var Subnavbar = (0, import_react99.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$inner = props.inner, inner = _props$inner === void 0 ? true : _props$inner, title = props.title, sliding = props.sliding;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react99.useRef)(null);
  (0, import_react99.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "subnavbar", {
    sliding
  }, colorClasses(props));
  return import_react99.default.createElement("div", _extends83({
    className: classes,
    id,
    style,
    ref: elRef
  }, extraAttrs), inner ? import_react99.default.createElement("div", {
    className: "subnavbar-inner"
  }, title && import_react99.default.createElement("div", {
    className: "subnavbar-title"
  }, title), children) : children);
});
Subnavbar.displayName = "f7-subnavbar";
var subnavbar_default = Subnavbar;

// node_modules/framework7-react/esm/components/swipeout-actions.js
var import_react100 = __toESM(require_react());
function _extends84() {
  _extends84 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends84.apply(this, arguments);
}
var SwipeoutActions = (0, import_react100.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, left = props.left, right = props.right, side = props.side;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react100.useRef)(null);
  (0, import_react100.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var sideComputed = side;
  if (!sideComputed) {
    if (left)
      sideComputed = "left";
    if (right)
      sideComputed = "right";
  }
  var classes = classNames(className, "swipeout-actions-" + sideComputed, colorClasses(props));
  return import_react100.default.createElement("div", _extends84({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
SwipeoutActions.displayName = "f7-swipeout-actions";
var swipeout_actions_default = SwipeoutActions;

// node_modules/framework7-react/esm/components/swipeout-button.js
var import_react101 = __toESM(require_react());
function _extends85() {
  _extends85 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends85.apply(this, arguments);
}
var SwipeoutButton = (0, import_react101.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, text = props.text, confirmTitle = props.confirmTitle, confirmText = props.confirmText, overswipe = props.overswipe, close = props.close, deleteProp = props.delete, href = props.href;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react101.useRef)(null);
  var onClick = function onClick2(e) {
    emit(props, "click", e);
  };
  (0, import_react101.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, {
    "swipeout-overswipe": overswipe,
    "swipeout-delete": deleteProp,
    "swipeout-close": close
  }, colorClasses(props));
  return import_react101.default.createElement("a", _extends85({
    ref: elRef,
    href: href || "#",
    id,
    style,
    "data-confirm": confirmText || void 0,
    "data-confirm-title": confirmTitle || void 0,
    className: classes
  }, extraAttrs, {
    onClick
  }), children, text);
});
SwipeoutButton.displayName = "f7-swipeout-button";
var swipeout_button_default = SwipeoutButton;

// node_modules/swiper/esm/react/swiper.js
var import_react106 = __toESM(require_react());

// node_modules/swiper/esm/react/utils.js
function isObject2(o) {
  return typeof o === "object" && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === "Object";
}
function extend2(target, src) {
  var noExtend = ["__proto__", "constructor", "prototype"];
  Object.keys(src).filter(function(key) {
    return noExtend.indexOf(key) < 0;
  }).forEach(function(key) {
    if (typeof target[key] === "undefined")
      target[key] = src[key];
    else if (isObject2(src[key]) && isObject2(target[key]) && Object.keys(src[key]).length > 0) {
      if (src[key].__swiper__)
        target[key] = src[key];
      else
        extend2(target[key], src[key]);
    } else {
      target[key] = src[key];
    }
  });
}
function needsNavigation(params) {
  if (params === void 0) {
    params = {};
  }
  return params.navigation && typeof params.navigation.nextEl === "undefined" && typeof params.navigation.prevEl === "undefined";
}
function needsPagination(params) {
  if (params === void 0) {
    params = {};
  }
  return params.pagination && typeof params.pagination.el === "undefined";
}
function needsScrollbar(params) {
  if (params === void 0) {
    params = {};
  }
  return params.scrollbar && typeof params.scrollbar.el === "undefined";
}
function uniqueClasses(classNames2) {
  if (classNames2 === void 0) {
    classNames2 = "";
  }
  var classes = classNames2.split(" ").map(function(c) {
    return c.trim();
  }).filter(function(c) {
    return !!c;
  });
  var unique = [];
  classes.forEach(function(c) {
    if (unique.indexOf(c) < 0)
      unique.push(c);
  });
  return unique.join(" ");
}

// node_modules/swiper/esm/react/params-list.js
var paramsList = [
  "init",
  "_direction",
  "touchEventsTarget",
  "initialSlide",
  "_speed",
  "cssMode",
  "updateOnWindowResize",
  "resizeObserver",
  "nested",
  "focusableElements",
  "_enabled",
  "_width",
  "_height",
  "preventInteractionOnTransition",
  "userAgent",
  "url",
  "_edgeSwipeDetection",
  "_edgeSwipeThreshold",
  "_freeMode",
  "_freeModeMomentum",
  "_freeModeMomentumRatio",
  "_freeModeMomentumBounce",
  "_freeModeMomentumBounceRatio",
  "_freeModeMomentumVelocityRatio",
  "_freeModeSticky",
  "_freeModeMinimumVelocity",
  "_autoHeight",
  "setWrapperSize",
  "virtualTranslate",
  "_effect",
  "breakpoints",
  "_spaceBetween",
  "_slidesPerView",
  "_slidesPerColumn",
  "_slidesPerColumnFill",
  "_slidesPerGroup",
  "_slidesPerGroupSkip",
  "_centeredSlides",
  "_centeredSlidesBounds",
  "_slidesOffsetBefore",
  "_slidesOffsetAfter",
  "normalizeSlideIndex",
  "_centerInsufficientSlides",
  "_watchOverflow",
  "roundLengths",
  "touchRatio",
  "touchAngle",
  "simulateTouch",
  "_shortSwipes",
  "_longSwipes",
  "longSwipesRatio",
  "longSwipesMs",
  "_followFinger",
  "allowTouchMove",
  "_threshold",
  "touchMoveStopPropagation",
  "touchStartPreventDefault",
  "touchStartForcePreventDefault",
  "touchReleaseOnEdges",
  "uniqueNavElements",
  "_resistance",
  "_resistanceRatio",
  "_watchSlidesProgress",
  "_watchSlidesVisibility",
  "_grabCursor",
  "preventClicks",
  "preventClicksPropagation",
  "_slideToClickedSlide",
  "_preloadImages",
  "updateOnImagesReady",
  "_loop",
  "_loopAdditionalSlides",
  "_loopedSlides",
  "_loopFillGroupWithBlank",
  "loopPreventsSlide",
  "_allowSlidePrev",
  "_allowSlideNext",
  "_swipeHandler",
  "_noSwiping",
  "noSwipingClass",
  "noSwipingSelector",
  "passiveListeners",
  "containerModifierClass",
  "slideClass",
  "slideBlankClass",
  "slideActiveClass",
  "slideDuplicateActiveClass",
  "slideVisibleClass",
  "slideDuplicateClass",
  "slideNextClass",
  "slideDuplicateNextClass",
  "slidePrevClass",
  "slideDuplicatePrevClass",
  "wrapperClass",
  "runCallbacksOnInit",
  "observer",
  "observeParents",
  "observeSlideChildren",
  "a11y",
  "autoplay",
  "_controller",
  "coverflowEffect",
  "cubeEffect",
  "fadeEffect",
  "flipEffect",
  "hashNavigation",
  "history",
  "keyboard",
  "lazy",
  "mousewheel",
  "_navigation",
  "_pagination",
  "parallax",
  "_scrollbar",
  "_thumbs",
  "virtual",
  "zoom"
];

// node_modules/swiper/esm/react/get-params.js
function getParams(obj) {
  if (obj === void 0) {
    obj = {};
  }
  var params = {
    on: {}
  };
  var events = {};
  var passedParams = {};
  extend2(params, core_class_default.defaults);
  extend2(params, core_class_default.extendedDefaults);
  params._emitClasses = true;
  params.init = false;
  var rest = {};
  var allowedParams = paramsList.map(function(key) {
    return key.replace(/_/, "");
  });
  Object.keys(obj).forEach(function(key) {
    if (allowedParams.indexOf(key) >= 0) {
      if (isObject2(obj[key])) {
        params[key] = {};
        passedParams[key] = {};
        extend2(params[key], obj[key]);
        extend2(passedParams[key], obj[key]);
      } else {
        params[key] = obj[key];
        passedParams[key] = obj[key];
      }
    } else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === "function") {
      events["" + key[2].toLowerCase() + key.substr(3)] = obj[key];
    } else {
      rest[key] = obj[key];
    }
  });
  ["navigation", "pagination", "scrollbar"].forEach(function(key) {
    if (params[key] === true)
      params[key] = {};
    if (params[key] === false)
      delete params[key];
  });
  return {
    params,
    passedParams,
    rest,
    events
  };
}

// node_modules/swiper/esm/react/init-swiper.js
function initSwiper(swiperParams) {
  return new core_class_default(swiperParams);
}
function mountSwiper(_ref, swiperParams) {
  var el = _ref.el, nextEl = _ref.nextEl, prevEl = _ref.prevEl, paginationEl = _ref.paginationEl, scrollbarEl = _ref.scrollbarEl, swiper = _ref.swiper;
  if (needsNavigation(swiperParams) && nextEl && prevEl) {
    swiper.params.navigation.nextEl = nextEl;
    swiper.originalParams.navigation.nextEl = nextEl;
    swiper.params.navigation.prevEl = prevEl;
    swiper.originalParams.navigation.prevEl = prevEl;
  }
  if (needsPagination(swiperParams) && paginationEl) {
    swiper.params.pagination.el = paginationEl;
    swiper.originalParams.pagination.el = paginationEl;
  }
  if (needsScrollbar(swiperParams) && scrollbarEl) {
    swiper.params.scrollbar.el = scrollbarEl;
    swiper.originalParams.scrollbar.el = scrollbarEl;
  }
  swiper.init(el);
}

// node_modules/swiper/esm/react/loop.js
var import_react102 = __toESM(require_react());
function calcLoopedSlides(slides, swiperParams) {
  var slidesPerViewParams = swiperParams.slidesPerView;
  if (swiperParams.breakpoints) {
    var breakpoint = core_class_default.prototype.getBreakpoint(swiperParams.breakpoints);
    var breakpointOnlyParams = breakpoint in swiperParams.breakpoints ? swiperParams.breakpoints[breakpoint] : void 0;
    if (breakpointOnlyParams && breakpointOnlyParams.slidesPerView) {
      slidesPerViewParams = breakpointOnlyParams.slidesPerView;
    }
  }
  var loopedSlides = Math.ceil(parseFloat(swiperParams.loopedSlides || slidesPerViewParams, 10));
  loopedSlides += swiperParams.loopAdditionalSlides;
  if (loopedSlides > slides.length) {
    loopedSlides = slides.length;
  }
  return loopedSlides;
}
function renderLoop(swiper, slides, swiperParams) {
  var modifiedSlides = slides.map(function(child, index) {
    return import_react102.default.cloneElement(child, {
      swiper,
      "data-swiper-slide-index": index
    });
  });
  function duplicateSlide(child, index, position) {
    return import_react102.default.cloneElement(child, {
      key: child.key + "-duplicate-" + index + "-" + position,
      className: (child.props.className || "") + " " + swiperParams.slideDuplicateClass
    });
  }
  if (swiperParams.loopFillGroupWithBlank) {
    var blankSlidesNum = swiperParams.slidesPerGroup - modifiedSlides.length % swiperParams.slidesPerGroup;
    if (blankSlidesNum !== swiperParams.slidesPerGroup) {
      for (var i = 0; i < blankSlidesNum; i += 1) {
        var blankSlide = import_react102.default.createElement("div", {
          className: swiperParams.slideClass + " " + swiperParams.slideBlankClass
        });
        modifiedSlides.push(blankSlide);
      }
    }
  }
  if (swiperParams.slidesPerView === "auto" && !swiperParams.loopedSlides) {
    swiperParams.loopedSlides = modifiedSlides.length;
  }
  var loopedSlides = calcLoopedSlides(modifiedSlides, swiperParams);
  var prependSlides = [];
  var appendSlides = [];
  modifiedSlides.forEach(function(child, index) {
    if (index < loopedSlides) {
      appendSlides.push(duplicateSlide(child, index, "prepend"));
    }
    if (index < modifiedSlides.length && index >= modifiedSlides.length - loopedSlides) {
      prependSlides.push(duplicateSlide(child, index, "append"));
    }
  });
  if (swiper) {
    swiper.loopedSlides = loopedSlides;
  }
  return [].concat(prependSlides, modifiedSlides, appendSlides);
}

// node_modules/swiper/esm/react/get-changed-params.js
function getChangedParams(swiperParams, oldParams, children, oldChildren) {
  var keys = [];
  if (!oldParams)
    return keys;
  var addKey = function addKey2(key) {
    if (keys.indexOf(key) < 0)
      keys.push(key);
  };
  var oldChildrenKeys = oldChildren.map(function(child) {
    return child.key;
  });
  var childrenKeys = children.map(function(child) {
    return child.key;
  });
  if (oldChildrenKeys.join("") !== childrenKeys.join(""))
    addKey("children");
  if (oldChildren.length !== children.length)
    addKey("children");
  var watchParams = paramsList.filter(function(key) {
    return key[0] === "_";
  }).map(function(key) {
    return key.replace(/_/, "");
  });
  watchParams.forEach(function(key) {
    if (key in swiperParams && key in oldParams) {
      if (isObject2(swiperParams[key]) && isObject2(oldParams[key])) {
        var newKeys = Object.keys(swiperParams[key]);
        var oldKeys = Object.keys(oldParams[key]);
        if (newKeys.length !== oldKeys.length) {
          addKey(key);
        } else {
          newKeys.forEach(function(newKey) {
            if (swiperParams[key][newKey] !== oldParams[key][newKey]) {
              addKey(key);
            }
          });
          oldKeys.forEach(function(oldKey) {
            if (swiperParams[key][oldKey] !== oldParams[key][oldKey])
              addKey(key);
          });
        }
      } else if (swiperParams[key] !== oldParams[key]) {
        addKey(key);
      }
    }
  });
  return keys;
}

// node_modules/swiper/esm/react/get-children.js
var import_react103 = __toESM(require_react());
function processChildren(c) {
  var slides = [];
  import_react103.default.Children.toArray(c).forEach(function(child) {
    if (child.type && child.type.displayName === "SwiperSlide") {
      slides.push(child);
    } else if (child.props && child.props.children) {
      processChildren(child.props.children).forEach(function(slide) {
        return slides.push(slide);
      });
    }
  });
  return slides;
}
function getChildren(c) {
  var slides = [];
  var slots = {
    "container-start": [],
    "container-end": [],
    "wrapper-start": [],
    "wrapper-end": []
  };
  import_react103.default.Children.toArray(c).forEach(function(child) {
    if (child.type && child.type.displayName === "SwiperSlide") {
      slides.push(child);
    } else if (child.props && child.props.slot && slots[child.props.slot]) {
      slots[child.props.slot].push(child);
    } else if (child.props && child.props.children) {
      var foundSlides = processChildren(child.props.children);
      if (foundSlides.length > 0) {
        foundSlides.forEach(function(slide) {
          return slides.push(slide);
        });
      } else {
        slots["container-end"].push(child);
      }
    } else {
      slots["container-end"].push(child);
    }
  });
  return {
    slides,
    slots
  };
}

// node_modules/swiper/esm/react/update-swiper.js
function updateSwiper(_ref) {
  var swiper = _ref.swiper, slides = _ref.slides, passedParams = _ref.passedParams, changedParams = _ref.changedParams, nextEl = _ref.nextEl, prevEl = _ref.prevEl, scrollbarEl = _ref.scrollbarEl, paginationEl = _ref.paginationEl;
  var updateParams = changedParams.filter(function(key) {
    return key !== "children" && key !== "direction";
  });
  var currentParams = swiper.params, pagination = swiper.pagination, navigation = swiper.navigation, scrollbar = swiper.scrollbar, virtual = swiper.virtual, thumbs = swiper.thumbs;
  var needThumbsInit;
  var needControllerInit;
  var needPaginationInit;
  var needScrollbarInit;
  var needNavigationInit;
  if (changedParams.includes("thumbs") && passedParams.thumbs && passedParams.thumbs.swiper && currentParams.thumbs && !currentParams.thumbs.swiper) {
    needThumbsInit = true;
  }
  if (changedParams.includes("controller") && passedParams.controller && passedParams.controller.control && currentParams.controller && !currentParams.controller.control) {
    needControllerInit = true;
  }
  if (changedParams.includes("pagination") && passedParams.pagination && (passedParams.pagination.el || paginationEl) && (currentParams.pagination || currentParams.pagination === false) && pagination && !pagination.el) {
    needPaginationInit = true;
  }
  if (changedParams.includes("scrollbar") && passedParams.scrollbar && (passedParams.scrollbar.el || scrollbarEl) && (currentParams.scrollbar || currentParams.scrollbar === false) && scrollbar && !scrollbar.el) {
    needScrollbarInit = true;
  }
  if (changedParams.includes("navigation") && passedParams.navigation && (passedParams.navigation.prevEl || prevEl) && (passedParams.navigation.nextEl || nextEl) && (currentParams.navigation || currentParams.navigation === false) && navigation && !navigation.prevEl && !navigation.nextEl) {
    needNavigationInit = true;
  }
  var destroyModule = function destroyModule2(mod) {
    if (!swiper[mod])
      return;
    swiper[mod].destroy();
    if (mod === "navigation") {
      currentParams[mod].prevEl = void 0;
      currentParams[mod].nextEl = void 0;
      swiper[mod].prevEl = void 0;
      swiper[mod].nextEl = void 0;
    } else {
      currentParams[mod].el = void 0;
      swiper[mod].el = void 0;
    }
  };
  updateParams.forEach(function(key) {
    if (isObject2(currentParams[key]) && isObject2(passedParams[key])) {
      extend2(currentParams[key], passedParams[key]);
    } else {
      var newValue = passedParams[key];
      if ((newValue === true || newValue === false) && (key === "navigation" || key === "pagination" || key === "scrollbar")) {
        if (newValue === false) {
          destroyModule(key);
        }
      } else {
        currentParams[key] = passedParams[key];
      }
    }
  });
  if (changedParams.includes("children") && virtual && currentParams.virtual.enabled) {
    virtual.slides = slides;
    virtual.update(true);
  } else if (changedParams.includes("children") && swiper.lazy && swiper.params.lazy.enabled) {
    swiper.lazy.load();
  }
  if (needThumbsInit) {
    var initialized = thumbs.init();
    if (initialized)
      thumbs.update(true);
  }
  if (needControllerInit) {
    swiper.controller.control = currentParams.controller.control;
  }
  if (needPaginationInit) {
    if (paginationEl)
      currentParams.pagination.el = paginationEl;
    pagination.init();
    pagination.render();
    pagination.update();
  }
  if (needScrollbarInit) {
    if (scrollbarEl)
      currentParams.scrollbar.el = scrollbarEl;
    scrollbar.init();
    scrollbar.updateSize();
    scrollbar.setTranslate();
  }
  if (needNavigationInit) {
    if (nextEl)
      currentParams.navigation.nextEl = nextEl;
    if (prevEl)
      currentParams.navigation.prevEl = prevEl;
    navigation.init();
    navigation.update();
  }
  if (changedParams.includes("allowSlideNext")) {
    swiper.allowSlideNext = passedParams.allowSlideNext;
  }
  if (changedParams.includes("allowSlidePrev")) {
    swiper.allowSlidePrev = passedParams.allowSlidePrev;
  }
  if (changedParams.includes("direction")) {
    swiper.changeDirection(passedParams.direction, false);
  }
  swiper.update();
}

// node_modules/swiper/esm/react/virtual.js
var import_react104 = __toESM(require_react());
function updateOnVirtualData(swiper) {
  if (!swiper || swiper.destroyed || !swiper.params.virtual || swiper.params.virtual && !swiper.params.virtual.enabled)
    return;
  swiper.updateSlides();
  swiper.updateProgress();
  swiper.updateSlidesClasses();
  if (swiper.lazy && swiper.params.lazy.enabled) {
    swiper.lazy.load();
  }
  if (swiper.parallax && swiper.params.parallax && swiper.params.parallax.enabled) {
    swiper.parallax.setTranslate();
  }
}
function renderVirtual(swiper, slides, virtualData) {
  var _ref;
  if (!virtualData)
    return null;
  var style = swiper.isHorizontal() ? (_ref = {}, _ref[swiper.rtlTranslate ? "right" : "left"] = virtualData.offset + "px", _ref) : {
    top: virtualData.offset + "px"
  };
  return slides.filter(function(child, index) {
    return index >= virtualData.from && index <= virtualData.to;
  }).map(function(child) {
    return import_react104.default.cloneElement(child, {
      swiper,
      style
    });
  });
}

// node_modules/swiper/esm/react/use-isomorphic-layout-effect.js
var import_react105 = __toESM(require_react());
function useIsomorphicLayoutEffect2(callback, deps) {
  if (typeof window === "undefined")
    return (0, import_react105.useEffect)(callback, deps);
  return (0, import_react105.useLayoutEffect)(callback, deps);
}

// node_modules/swiper/esm/react/swiper.js
var _excluded5 = ["className", "tag", "wrapperTag", "children", "onSwiper"];
function _extends86() {
  _extends86 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends86.apply(this, arguments);
}
function _objectWithoutPropertiesLoose6(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var Swiper = (0, import_react106.forwardRef)(function(_temp, externalElRef) {
  var _ref = _temp === void 0 ? {} : _temp, className = _ref.className, _ref$tag = _ref.tag, Tag = _ref$tag === void 0 ? "div" : _ref$tag, _ref$wrapperTag = _ref.wrapperTag, WrapperTag = _ref$wrapperTag === void 0 ? "div" : _ref$wrapperTag, children = _ref.children, onSwiper = _ref.onSwiper, rest = _objectWithoutPropertiesLoose6(_ref, _excluded5);
  var eventsAssigned = false;
  var _useState = (0, import_react106.useState)("swiper-container"), containerClasses = _useState[0], setContainerClasses = _useState[1];
  var _useState2 = (0, import_react106.useState)(null), virtualData = _useState2[0], setVirtualData = _useState2[1];
  var _useState3 = (0, import_react106.useState)(false), breakpointChanged = _useState3[0], setBreakpointChanged = _useState3[1];
  var initializedRef = (0, import_react106.useRef)(false);
  var swiperElRef = (0, import_react106.useRef)(null);
  var swiperRef = (0, import_react106.useRef)(null);
  var oldPassedParamsRef = (0, import_react106.useRef)(null);
  var oldSlides = (0, import_react106.useRef)(null);
  var nextElRef = (0, import_react106.useRef)(null);
  var prevElRef = (0, import_react106.useRef)(null);
  var paginationElRef = (0, import_react106.useRef)(null);
  var scrollbarElRef = (0, import_react106.useRef)(null);
  var _getParams = getParams(rest), swiperParams = _getParams.params, passedParams = _getParams.passedParams, restProps = _getParams.rest, events = _getParams.events;
  var _getChildren = getChildren(children), slides = _getChildren.slides, slots = _getChildren.slots;
  var onBeforeBreakpoint = function onBeforeBreakpoint2() {
    setBreakpointChanged(!breakpointChanged);
  };
  Object.assign(swiperParams.on, {
    _containerClasses: function _containerClasses(swiper, classes) {
      setContainerClasses(classes);
    }
  });
  if (!swiperElRef.current) {
    Object.assign(swiperParams.on, events);
    eventsAssigned = true;
    swiperRef.current = initSwiper(swiperParams);
    swiperRef.current.loopCreate = function() {
    };
    swiperRef.current.loopDestroy = function() {
    };
    if (swiperParams.loop) {
      swiperRef.current.loopedSlides = calcLoopedSlides(slides, swiperParams);
    }
    if (swiperRef.current.virtual && swiperRef.current.params.virtual.enabled) {
      swiperRef.current.virtual.slides = slides;
      var extendWith = {
        cache: false,
        renderExternal: setVirtualData,
        renderExternalUpdate: false
      };
      extend2(swiperRef.current.params.virtual, extendWith);
      extend2(swiperRef.current.originalParams.virtual, extendWith);
    }
  }
  if (swiperRef.current) {
    swiperRef.current.on("_beforeBreakpoint", onBeforeBreakpoint);
  }
  var attachEvents = function attachEvents2() {
    if (eventsAssigned || !events || !swiperRef.current)
      return;
    Object.keys(events).forEach(function(eventName) {
      swiperRef.current.on(eventName, events[eventName]);
    });
  };
  var detachEvents = function detachEvents2() {
    if (!events || !swiperRef.current)
      return;
    Object.keys(events).forEach(function(eventName) {
      swiperRef.current.off(eventName, events[eventName]);
    });
  };
  (0, import_react106.useEffect)(function() {
    return function() {
      if (swiperRef.current)
        swiperRef.current.off("_beforeBreakpoint", onBeforeBreakpoint);
    };
  });
  (0, import_react106.useEffect)(function() {
    if (!initializedRef.current && swiperRef.current) {
      swiperRef.current.emitSlidesClasses();
      initializedRef.current = true;
    }
  });
  useIsomorphicLayoutEffect2(function() {
    if (externalElRef) {
      externalElRef.current = swiperElRef.current;
    }
    if (!swiperElRef.current)
      return;
    mountSwiper({
      el: swiperElRef.current,
      nextEl: nextElRef.current,
      prevEl: prevElRef.current,
      paginationEl: paginationElRef.current,
      scrollbarEl: scrollbarElRef.current,
      swiper: swiperRef.current
    }, swiperParams);
    if (onSwiper)
      onSwiper(swiperRef.current);
    return function() {
      if (swiperRef.current && !swiperRef.current.destroyed) {
        swiperRef.current.destroy(true, false);
      }
    };
  }, []);
  useIsomorphicLayoutEffect2(function() {
    attachEvents();
    var changedParams = getChangedParams(passedParams, oldPassedParamsRef.current, slides, oldSlides.current);
    oldPassedParamsRef.current = passedParams;
    oldSlides.current = slides;
    if (changedParams.length && swiperRef.current && !swiperRef.current.destroyed) {
      updateSwiper({
        swiper: swiperRef.current,
        slides,
        passedParams,
        changedParams,
        nextEl: nextElRef.current,
        prevEl: prevElRef.current,
        scrollbarEl: scrollbarElRef.current,
        paginationEl: paginationElRef.current
      });
    }
    return function() {
      detachEvents();
    };
  });
  useIsomorphicLayoutEffect2(function() {
    updateOnVirtualData(swiperRef.current);
  }, [virtualData]);
  function renderSlides() {
    if (swiperParams.virtual) {
      return renderVirtual(swiperRef.current, slides, virtualData);
    }
    if (!swiperParams.loop || swiperRef.current && swiperRef.current.destroyed) {
      return slides.map(function(child) {
        return import_react106.default.cloneElement(child, {
          swiper: swiperRef.current
        });
      });
    }
    return renderLoop(swiperRef.current, slides, swiperParams);
  }
  return import_react106.default.createElement(Tag, _extends86({
    ref: swiperElRef,
    className: uniqueClasses("" + containerClasses + (className ? " " + className : ""))
  }, restProps), slots["container-start"], needsNavigation(swiperParams) && import_react106.default.createElement(import_react106.default.Fragment, null, import_react106.default.createElement("div", {
    ref: prevElRef,
    className: "swiper-button-prev"
  }), import_react106.default.createElement("div", {
    ref: nextElRef,
    className: "swiper-button-next"
  })), needsScrollbar(swiperParams) && import_react106.default.createElement("div", {
    ref: scrollbarElRef,
    className: "swiper-scrollbar"
  }), needsPagination(swiperParams) && import_react106.default.createElement("div", {
    ref: paginationElRef,
    className: "swiper-pagination"
  }), import_react106.default.createElement(WrapperTag, {
    className: "swiper-wrapper"
  }, slots["wrapper-start"], renderSlides(), slots["wrapper-end"]), slots["container-end"]);
});
Swiper.displayName = "Swiper";

// node_modules/swiper/esm/react/swiper-slide.js
var import_react107 = __toESM(require_react());
var _excluded6 = ["tag", "children", "className", "swiper", "zoom", "virtualIndex"];
function _extends87() {
  _extends87 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends87.apply(this, arguments);
}
function _objectWithoutPropertiesLoose7(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
var SwiperSlide = (0, import_react107.forwardRef)(function(_temp, externalRef) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$tag = _ref.tag, Tag = _ref$tag === void 0 ? "div" : _ref$tag, children = _ref.children, _ref$className = _ref.className, className = _ref$className === void 0 ? "" : _ref$className, swiper = _ref.swiper, zoom = _ref.zoom, virtualIndex = _ref.virtualIndex, rest = _objectWithoutPropertiesLoose7(_ref, _excluded6);
  var slideElRef = (0, import_react107.useRef)(null);
  var _useState = (0, import_react107.useState)("swiper-slide"), slideClasses = _useState[0], setSlideClasses = _useState[1];
  function updateClasses(swiper2, el, classNames2) {
    if (el === slideElRef.current) {
      setSlideClasses(classNames2);
    }
  }
  useIsomorphicLayoutEffect2(function() {
    if (externalRef) {
      externalRef.current = slideElRef.current;
    }
    if (!slideElRef.current || !swiper) {
      return;
    }
    if (swiper.destroyed) {
      if (slideClasses !== "swiper-slide") {
        setSlideClasses("swiper-slide");
      }
      return;
    }
    swiper.on("_slideClass", updateClasses);
    return function() {
      if (!swiper)
        return;
      swiper.off("_slideClass", updateClasses);
    };
  });
  useIsomorphicLayoutEffect2(function() {
    if (swiper && slideElRef.current) {
      setSlideClasses(swiper.getSlideClasses(slideElRef.current));
    }
  }, [swiper]);
  var slideData;
  if (typeof children === "function") {
    slideData = {
      isActive: slideClasses.indexOf("swiper-slide-active") >= 0 || slideClasses.indexOf("swiper-slide-duplicate-active") >= 0,
      isVisible: slideClasses.indexOf("swiper-slide-visible") >= 0,
      isDuplicate: slideClasses.indexOf("swiper-slide-duplicate") >= 0,
      isPrev: slideClasses.indexOf("swiper-slide-prev") >= 0 || slideClasses.indexOf("swiper-slide-duplicate-prev") >= 0,
      isNext: slideClasses.indexOf("swiper-slide-next") >= 0 || slideClasses.indexOf("swiper-slide-duplicate-next") >= 0
    };
  }
  var renderChildren = function renderChildren2() {
    return typeof children === "function" ? children(slideData) : children;
  };
  return import_react107.default.createElement(Tag, _extends87({
    ref: slideElRef,
    className: uniqueClasses("" + slideClasses + (className ? " " + className : "")),
    "data-swiper-slide-index": virtualIndex
  }, rest), zoom ? import_react107.default.createElement("div", {
    className: "swiper-zoom-container",
    "data-swiper-zoom": typeof zoom === "number" ? zoom : void 0
  }, renderChildren()) : renderChildren());
});
SwiperSlide.displayName = "SwiperSlide";

// node_modules/framework7-react/esm/components/swiper-slide.js
var swiper_slide_default = SwiperSlide;

// node_modules/framework7-react/esm/components/swiper.js
var swiper_default = Swiper;

// node_modules/framework7-react/esm/components/tab.js
var import_react112 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/router-context.js
var import_react110 = __toESM(require_react());
var RouterContext = import_react110.default.createContext({
  route: null,
  router: null
});

// node_modules/framework7-react/esm/shared/use-async-component.js
var import_react111 = __toESM(require_react());
var useAsyncComponent = function useAsyncComponent2(component, props, key) {
  var Component = (0, import_react111.lazy)(component);
  return import_react111.default.createElement(import_react111.Suspense, {
    fallback: null,
    key
  }, import_react111.default.createElement(Component, props));
};

// node_modules/framework7-react/esm/components/tab.js
function _extends88() {
  _extends88 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends88.apply(this, arguments);
}
var Tab = (0, import_react112.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, tabActive = props.tabActive;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react112.useRef)(null);
  var routerData = (0, import_react112.useRef)(null);
  var routerContext = (0, import_react112.useContext)(RouterContext);
  var initialTabContent = null;
  if (!routerData.current && routerContext && routerContext.route && routerContext.route.route && routerContext.route.route.tab && routerContext.route.route.tab.id === id) {
    var _routerContext$route$ = routerContext.route.route.tab, component = _routerContext$route$.component, asyncComponent = _routerContext$route$.asyncComponent, tabRouteOptions = _routerContext$route$.options;
    if (component || asyncComponent) {
      var parentProps = routerContext.route.route.options && routerContext.route.route.options.props;
      initialTabContent = {
        id: getComponentId(),
        component: component || asyncComponent,
        isAsync: !!asyncComponent,
        props: _extends88({}, parentProps || {}, tabRouteOptions && tabRouteOptions.props || {}, {
          f7router: routerContext.router,
          f7route: routerContext.route
        }, routerContext.route.params)
      };
    }
  }
  var _useState = (0, import_react112.useState)(initialTabContent || null), tabContent = _useState[0], setTabContent = _useState[1];
  (0, import_react112.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  if (f7 && !routerData.current) {
    routerData.current = {
      setTabContent
    };
    f7routers.tabs.push(routerData.current);
  }
  var onMount = function onMount2() {
    if (elRef.current && initialTabContent) {
      elRef.current.f7RouterTabLoaded = true;
    }
    f7ready(function() {
      if (!routerData.current) {
        routerData.current = {
          el: elRef.current,
          setTabContent
        };
        f7routers.tabs.push(routerData.current);
      } else {
        routerData.current.el = elRef.current;
      }
    });
  };
  var onDestroy = function onDestroy2() {
    if (!routerData.current)
      return;
    f7routers.tabs.splice(f7routers.tabs.indexOf(routerData.current), 1);
    routerData.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  useIsomorphicLayoutEffect(function() {
    if (!routerData.current || !f7)
      return;
    f7events.emit("tabRouterDidUpdate", routerData.current);
  });
  useTab(elRef, props);
  var classes = classNames(className, "tab", {
    "tab-active": tabActive
  }, colorClasses(props));
  var renderChildren = function renderChildren2() {
    if (!tabContent)
      return children;
    if (tabContent.isAsync) {
      return useAsyncComponent(tabContent.component, tabContent.props, tabContent.id);
    }
    var TabContent = tabContent.component;
    return import_react112.default.createElement(TabContent, _extends88({
      key: tabContent.id
    }, tabContent.props));
  };
  return import_react112.default.createElement("div", _extends88({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), renderChildren());
});
Tab.displayName = "f7-tab";
var tab_default = Tab;

// node_modules/framework7-react/esm/components/tabs.js
var import_react113 = __toESM(require_react());
function _extends89() {
  _extends89 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends89.apply(this, arguments);
}
var Tabs = (0, import_react113.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, animated = props.animated, swipeable = props.swipeable, routable = props.routable, swiperParams = props.swiperParams;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react113.useRef)(null);
  (0, import_react113.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  useIsomorphicLayoutEffect(function() {
    if (!swipeable || !swiperParams)
      return;
    if (!elRef.current)
      return;
    elRef.current.f7SwiperParams = swiperParams;
  }, []);
  var classes = classNames(className, colorClasses(props));
  var wrapClasses = classNames({
    "tabs-animated-wrap": animated,
    "tabs-swipeable-wrap": swipeable
  });
  var tabsClasses = classNames({
    tabs: true,
    "tabs-routable": routable
  });
  if (animated || swipeable) {
    return import_react113.default.createElement("div", _extends89({
      id,
      style,
      className: classNames(wrapClasses, classes),
      ref: elRef
    }, extraAttrs), import_react113.default.createElement("div", {
      className: tabsClasses
    }, children));
  }
  return import_react113.default.createElement("div", _extends89({
    id,
    style,
    className: classNames(tabsClasses, classes),
    ref: elRef
  }, extraAttrs), children);
});
Tabs.displayName = "f7-tabs";
var tabs_default = Tabs;

// node_modules/framework7-react/esm/components/toolbar.js
var import_react114 = __toESM(require_react());
function _extends90() {
  _extends90 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends90.apply(this, arguments);
}
var Toolbar = (0, import_react114.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, tabbar = props.tabbar, labels = props.labels, scrollable = props.scrollable, hidden = props.hidden, noShadow = props.noShadow, noHairline = props.noHairline, noBorder = props.noBorder, position = props.position, topMd = props.topMd, topIos = props.topIos, topAurora = props.topAurora, top = props.top, bottomMd = props.bottomMd, bottomIos = props.bottomIos, bottomAurora = props.bottomAurora, bottom = props.bottom, _props$inner = props.inner, inner = _props$inner === void 0 ? true : _props$inner;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react114.useRef)(null);
  var onHide = function onHide2(toolbarEl) {
    if (elRef.current !== toolbarEl)
      return;
    emit(props, "toolbarHide");
  };
  var onShow = function onShow2(toolbarEl) {
    if (elRef.current !== toolbarEl)
      return;
    emit(props, "toolbarShow");
  };
  var hide = function hide2(animate) {
    if (!f7)
      return;
    f7.toolbar.hide(elRef.current, animate);
  };
  var show = function show2(animate) {
    if (!f7)
      return;
    f7.toolbar.show(elRef.current, animate);
  };
  (0, import_react114.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      hide,
      show
    };
  });
  useIsomorphicLayoutEffect(function() {
    f7ready(function() {
      if (tabbar && f7 && elRef.current) {
        f7.toolbar.setHighlight(elRef.current);
      }
      f7.on("toolbarShow", onShow);
      f7.on("toolbarHide", onHide);
    });
    return function() {
      if (!f7)
        return;
      f7.off("toolbarShow", onShow);
      f7.off("toolbarHide", onHide);
    };
  });
  var theme2 = useTheme();
  var classes = classNames(className, "toolbar", {
    tabbar,
    "toolbar-bottom": theme2 && theme2.md && bottomMd || theme2 && theme2.ios && bottomIos || theme2 && theme2.aurora && bottomAurora || bottom || position === "bottom",
    "toolbar-top": theme2 && theme2.md && topMd || theme2 && theme2.ios && topIos || theme2 && theme2.aurora && topAurora || top || position === "top",
    "tabbar-labels": labels,
    "tabbar-scrollable": scrollable,
    "toolbar-hidden": hidden,
    "no-shadow": noShadow,
    "no-hairline": noHairline || noBorder
  }, colorClasses(props));
  var slots = getSlots(props);
  return import_react114.default.createElement("div", _extends90({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react114.default.createElement(TabbarContext.Provider, {
    value: {
      tabbarHasLabels: labels
    }
  }, slots["before-inner"], inner ? import_react114.default.createElement("div", {
    className: "toolbar-inner"
  }, slots.default) : slots.default, slots["after-inner"]));
});
Toolbar.displayName = "f7-toolbar";
var toolbar_default = Toolbar;

// node_modules/framework7-react/esm/components/treeview-item.js
var import_react115 = __toESM(require_react());
function _extends91() {
  _extends91 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends91.apply(this, arguments);
}
var TreeviewItem = (0, import_react115.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, toggle = props.toggle, itemToggle = props.itemToggle, selectable = props.selectable, selected = props.selected, opened = props.opened, label = props.label, loadChildren = props.loadChildren, link = props.link;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react115.useRef)(null);
  var onClick = function onClick2(event) {
    emit(props, "click", event);
  };
  var onOpen = function onOpen2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "treeviewOpen", el);
  };
  var onClose = function onClose2(el) {
    if (elRef.current !== el)
      return;
    emit(props, "treeviewClose", el);
  };
  var onLoadChildren = function onLoadChildren2(el, done) {
    if (elRef.current !== el)
      return;
    emit(props, "treeviewLoadChildren", el, done);
  };
  (0, import_react115.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var attachEvents = function attachEvents2() {
    if (!elRef.current)
      return;
    f7ready(function() {
      f7.on("treeviewOpen", onOpen);
      f7.on("treeviewClose", onClose);
      f7.on("treeviewLoadChildren", onLoadChildren);
    });
  };
  var detachEvents = function detachEvents2() {
    if (!f7)
      return;
    f7.off("treeviewOpen", onOpen);
    f7.off("treeviewClose", onClose);
    f7.off("treeviewLoadChildren", onLoadChildren);
  };
  useIsomorphicLayoutEffect(function() {
    attachEvents();
    return detachEvents;
  });
  var slots = getSlots(props);
  var hasChildren = slots.default && slots.default.length || slots.children && slots.children.length || slots["children-start"] && slots["children-start"].length;
  var needToggle = typeof toggle === "undefined" ? hasChildren : toggle;
  var iconEl = useIcon(props);
  var TreeviewRootTag = link || link === "" ? "a" : "div";
  var classes = classNames(className, "treeview-item", {
    "treeview-item-opened": opened,
    "treeview-load-children": loadChildren
  }, colorClasses(props));
  var itemRootClasses = classNames("treeview-item-root", {
    "treeview-item-selectable": selectable,
    "treeview-item-selected": selected,
    "treeview-item-toggle": itemToggle
  }, routerClasses(props), actionsClasses(props));
  var href = link;
  if (link === true)
    href = "#";
  if (link === false)
    href = void 0;
  var itemRootAttrs = _extends91({
    href
  }, routerAttrs(props), actionsAttrs(props));
  return import_react115.default.createElement("div", _extends91({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), import_react115.default.createElement(TreeviewRootTag, _extends91({
    onClick,
    className: itemRootClasses
  }, itemRootAttrs), slots["root-start"], needToggle && import_react115.default.createElement("div", {
    className: "treeview-toggle"
  }), import_react115.default.createElement("div", {
    className: "treeview-item-content"
  }, slots["content-start"], iconEl, slots.media, import_react115.default.createElement("div", {
    className: "treeview-item-label"
  }, slots["label-start"], label, slots.label), slots.content, slots["content-end"]), slots.root, slots["root-end"]), hasChildren && import_react115.default.createElement("div", {
    className: "treeview-item-children"
  }, slots["children-start"], slots.default, slots.children));
});
TreeviewItem.displayName = "f7-treeview-item";
var treeview_item_default = TreeviewItem;

// node_modules/framework7-react/esm/components/treeview.js
var import_react116 = __toESM(require_react());
function _extends92() {
  _extends92 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends92.apply(this, arguments);
}
var Treeview = (0, import_react116.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react116.useRef)(null);
  (0, import_react116.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "treeview", colorClasses(props));
  return import_react116.default.createElement("div", _extends92({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Treeview.displayName = "f7-treeview";
var treeview_default = Treeview;

// node_modules/framework7-react/esm/components/view.js
var import_react117 = __toESM(require_react());

// node_modules/framework7-react/esm/shared/get-router-initial-component.js
function _extends93() {
  _extends93 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends93.apply(this, arguments);
}
var getRouterInitialComponent = function getRouterInitialComponent2(router, initialComponent) {
  var initialComponentData;
  var _router$getInitialUrl = router.getInitialUrl(), initialUrl = _router$getInitialUrl.initialUrl;
  var initialRoute = router.findMatchingRoute(initialUrl);
  var routeProps = {};
  if (initialRoute && initialRoute.route && initialRoute.route.options) {
    routeProps = initialRoute.route.options.props;
  }
  var isMasterRoute = function isMasterRoute2(route) {
    if (route.master === true)
      return true;
    if (typeof route.master === "function")
      return route.master(router.app);
    return false;
  };
  if (initialRoute && initialRoute.route && (initialRoute.route.component || initialRoute.route.asyncComponent) && !isMasterRoute(initialRoute.route)) {
    initialComponentData = {
      component: initialRoute.route.component || initialRoute.route.asyncComponent,
      initialComponent,
      id: getComponentId(),
      isAsync: !!initialRoute.route.asyncComponent,
      props: _extends93({
        f7route: initialRoute,
        f7router: router
      }, routeProps, initialRoute.params)
    };
  }
  return {
    initialPage: initialComponentData,
    initialRoute
  };
};

// node_modules/framework7-react/esm/components/view.js
function _extends94() {
  _extends94 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends94.apply(this, arguments);
}
var View = (0, import_react117.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, _props$init = props.init, init = _props$init === void 0 ? true : _props$init, main = props.main, tab = props.tab, tabActive = props.tabActive, url = props.url, _props$browserHistory = props.browserHistoryInitialMatch, browserHistoryInitialMatch = _props$browserHistory === void 0 ? true : _props$browserHistory;
  var childrenArray = import_react117.default.Children.toArray(children);
  var initialPageComponent = childrenArray.filter(function(c) {
    return c.props && c.props.initialPage;
  })[0];
  var restChildren = childrenArray.filter(function(c) {
    return !c.props || !c.props.initialPage;
  });
  var extraAttrs = getExtraAttrs(props);
  var _f7View = (0, import_react117.useRef)(null);
  var elRef = (0, import_react117.useRef)(null);
  var routerData = (0, import_react117.useRef)(null);
  var initialPage;
  var initialRoute;
  var onViewInit = function onViewInit2(view) {
    emit(props, "viewInit", view);
    if (!init) {
      routerData.current.instance = view;
      _f7View.current = routerData.current.instance;
    }
  };
  if (f7 && !_f7View.current && init) {
    var routerId = getRouterId();
    _f7View.current = f7.views.create(elRef.current, _extends94({
      routerId,
      init: false
    }, noUndefinedProps(props), {
      browserHistoryInitialMatch,
      on: {
        init: onViewInit
      }
    }));
    routerData.current = {
      routerId,
      instance: _f7View.current
    };
    f7routers.views.push(routerData.current);
    if (_f7View.current && _f7View.current.router && (url || main)) {
      var initialData = getRouterInitialComponent(_f7View.current.router, initialPageComponent);
      initialPage = initialData.initialPage;
      initialRoute = initialData.initialRoute;
      if (initialRoute && initialRoute.route && initialRoute.route.masterRoute) {
        initialPage = void 0;
        initialRoute = void 0;
      }
    }
  }
  var _useState = (0, import_react117.useState)(initialPage ? [initialPage] : []), pages = _useState[0], _setPages = _useState[1];
  var onResize = function onResize2(view, width) {
    emit(props, "viewResize", width);
  };
  var onSwipeBackMove = function onSwipeBackMove2(data) {
    var swipeBackData = data;
    emit(props, "swipeBackMove", swipeBackData);
  };
  var onSwipeBackBeforeChange = function onSwipeBackBeforeChange2(data) {
    var swipeBackData = data;
    emit(props, "swipeBackBeforeChange", swipeBackData);
  };
  var onSwipeBackAfterChange = function onSwipeBackAfterChange2(data) {
    var swipeBackData = data;
    emit(props, "swipeBackAfterChange", swipeBackData);
  };
  var onSwipeBackBeforeReset = function onSwipeBackBeforeReset2(data) {
    var swipeBackData = data;
    emit(props, "swipeBackBeforeReset", swipeBackData);
  };
  var onSwipeBackAfterReset = function onSwipeBackAfterReset2(data) {
    var swipeBackData = data;
    emit(props, "swipeBackAfterReset", swipeBackData);
  };
  (0, import_react117.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current,
      f7View: function f7View() {
        return _f7View.current;
      }
    };
  });
  var onMount = function onMount2() {
    f7ready(function() {
      if (_f7View.current) {
        routerData.current.el = elRef.current;
        routerData.current.pages = pages;
        routerData.current.setPages = function(newPages) {
          _setPages([].concat(newPages));
        };
        if (initialPage && initialPage.isAsync && !initialPage.initialComponent) {
          initialPage.component().then(function() {
            setTimeout(function() {
              _f7View.current.init(elRef.current);
              if (initialPage) {
                initialPage.el = _f7View.current.router.currentPageEl;
                if (initialRoute && initialRoute.route && initialRoute.route.keepAlive) {
                  initialRoute.route.keepAliveData = {
                    pageEl: initialPage.el
                  };
                }
              }
            }, 100);
          });
        } else {
          _f7View.current.init(elRef.current);
          if (initialPage) {
            initialPage.el = _f7View.current.router.currentPageEl;
            if (initialRoute && initialRoute.route && initialRoute.route.keepAlive) {
              initialRoute.route.keepAliveData = {
                pageEl: initialPage.el
              };
            }
          }
        }
      } else {
        var _routerId = getRouterId();
        routerData.current = {
          el: elRef.current,
          routerId: _routerId,
          pages,
          instance: _f7View.current,
          setPages: function setPages(newPages) {
            _setPages([].concat(newPages));
          }
        };
        f7routers.views.push(routerData.current);
        routerData.current.instance = f7.views.create(elRef.current, _extends94({
          routerId: _routerId
        }, noUndefinedProps(props), {
          browserHistoryInitialMatch,
          on: {
            init: onViewInit
          }
        }));
        _f7View.current = routerData.current.instance;
      }
      if (!init)
        return;
      _f7View.current.on("resize", onResize);
      _f7View.current.on("swipebackMove", onSwipeBackMove);
      _f7View.current.on("swipebackBeforeChange", onSwipeBackBeforeChange);
      _f7View.current.on("swipebackAfterChange", onSwipeBackAfterChange);
      _f7View.current.on("swipebackBeforeReset", onSwipeBackBeforeReset);
      _f7View.current.on("swipebackAfterReset", onSwipeBackAfterReset);
    });
  };
  var onDestroy = function onDestroy2() {
    if (_f7View.current) {
      _f7View.current.off("resize", onResize);
      _f7View.current.off("swipebackMove", onSwipeBackMove);
      _f7View.current.off("swipebackBeforeChange", onSwipeBackBeforeChange);
      _f7View.current.off("swipebackAfterChange", onSwipeBackAfterChange);
      _f7View.current.off("swipebackBeforeReset", onSwipeBackBeforeReset);
      _f7View.current.off("swipebackAfterReset", onSwipeBackAfterReset);
      if (_f7View.current.destroy)
        _f7View.current.destroy();
      _f7View.current = null;
    }
    f7routers.views.splice(f7routers.views.indexOf(routerData.current), 1);
    routerData.current = null;
  };
  useIsomorphicLayoutEffect(function() {
    onMount();
    return onDestroy;
  }, []);
  useIsomorphicLayoutEffect(function() {
    if (routerData.current && f7) {
      f7events.emit("viewRouterDidUpdate", routerData.current);
    }
  });
  useTab(elRef, props);
  var classes = classNames(className, "view", {
    "view-main": main,
    "tab-active": tabActive,
    tab
  }, colorClasses(props));
  return import_react117.default.createElement("div", _extends94({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), restChildren, pages.map(function(_ref) {
    var PageComponent = _ref.component, pageId = _ref.id, pageProps = _ref.props, isAsync = _ref.isAsync, initialComponent = _ref.initialComponent;
    return import_react117.default.createElement(RouterContext.Provider, {
      key: pageId,
      value: {
        router: pageProps.f7router,
        route: pageProps.f7route
      }
    }, initialComponent ? import_react117.default.cloneElement(initialComponent, _extends94({}, pageProps)) : isAsync ? useAsyncComponent(PageComponent, pageProps) : import_react117.default.createElement(PageComponent, pageProps));
  }));
});
View.displayName = "f7-view";
var view_default = View;

// node_modules/framework7-react/esm/components/views.js
var import_react118 = __toESM(require_react());
function _extends95() {
  _extends95 = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends95.apply(this, arguments);
}
var Views = (0, import_react118.forwardRef)(function(props, ref) {
  var className = props.className, id = props.id, style = props.style, children = props.children, tabs = props.tabs;
  var extraAttrs = getExtraAttrs(props);
  var elRef = (0, import_react118.useRef)(null);
  (0, import_react118.useImperativeHandle)(ref, function() {
    return {
      el: elRef.current
    };
  });
  var classes = classNames(className, "views", {
    tabs
  }, colorClasses(props));
  return import_react118.default.createElement("div", _extends95({
    id,
    style,
    className: classes,
    ref: elRef
  }, extraAttrs), children);
});
Views.displayName = "f7-views";
var views_default = Views;

// node_modules/framework7-react/esm/framework7-react.js
var framework7_react_default = plugin_default;

// dep:framework7-react
var framework7_react_default2 = framework7_react_default;
export {
  accordion_default as Accordion,
  accordion_content_default as AccordionContent,
  accordion_item_default as AccordionItem,
  accordion_toggle_default as AccordionToggle,
  actions_default as Actions,
  actions_button_default as ActionsButton,
  actions_group_default as ActionsGroup,
  actions_label_default as ActionsLabel,
  app_default as App,
  appbar_default as Appbar,
  area_chart_default as AreaChart,
  badge_default as Badge,
  block_default as Block,
  block_footer_default as BlockFooter,
  block_header_default as BlockHeader,
  block_title_default as BlockTitle,
  button_default as Button,
  card_default as Card,
  card_content_default as CardContent,
  card_footer_default as CardFooter,
  card_header_default as CardHeader,
  checkbox_default as Checkbox,
  chip_default as Chip,
  col_default as Col,
  fab_default as Fab,
  fab_backdrop_default as FabBackdrop,
  fab_button_default as FabButton,
  fab_buttons_default as FabButtons,
  gauge_default as Gauge,
  icon_default as Icon,
  input_default as Input,
  link_default as Link,
  list_default as List,
  list_button_default as ListButton,
  list_group_default as ListGroup,
  list_index_default as ListIndex,
  list_input_default as ListInput,
  list_item_default as ListItem,
  list_item_cell_default as ListItemCell,
  list_item_content_default as ListItemContent,
  list_item_row_default as ListItemRow,
  login_screen_default as LoginScreen,
  login_screen_title_default as LoginScreenTitle,
  menu_default as Menu,
  menu_dropdown_default as MenuDropdown,
  menu_dropdown_item_default as MenuDropdownItem,
  menu_item_default as MenuItem,
  message_default as Message,
  messagebar_default as Messagebar,
  messagebar_attachment_default as MessagebarAttachment,
  messagebar_attachments_default as MessagebarAttachments,
  messagebar_sheet_default as MessagebarSheet,
  messagebar_sheet_image_default as MessagebarSheetImage,
  messagebar_sheet_item_default as MessagebarSheetItem,
  messages_default as Messages,
  messages_title_default as MessagesTitle,
  nav_left_default as NavLeft,
  nav_right_default as NavRight,
  nav_title_default as NavTitle,
  nav_title_large_default as NavTitleLarge,
  navbar_default as Navbar,
  page_default as Page,
  page_content_default as PageContent,
  panel_default as Panel,
  photo_browser_default as PhotoBrowser,
  pie_chart_default as PieChart,
  popover_default as Popover,
  popup_default as Popup,
  preloader_default as Preloader,
  progressbar_default as Progressbar,
  radio_default as Radio,
  range_default as Range,
  routable_modals_default as RoutableModals,
  row_default as Row,
  searchbar_default as Searchbar,
  segmented_default as Segmented,
  sheet_default as Sheet,
  skeleton_avatar_default as SkeletonAvatar,
  skeleton_block_default as SkeletonBlock,
  skeleton_image_default as SkeletonImage,
  skeleton_text_default as SkeletonText,
  stepper_default as Stepper,
  subnavbar_default as Subnavbar,
  swipeout_actions_default as SwipeoutActions,
  swipeout_button_default as SwipeoutButton,
  swiper_default as Swiper,
  swiper_slide_default as SwiperSlide,
  tab_default as Tab,
  tabs_default as Tabs,
  text_editor_default as TextEditor,
  toggle_default as Toggle,
  toolbar_default as Toolbar,
  treeview_default as Treeview,
  treeview_item_default as TreeviewItem,
  view_default as View,
  views_default as Views,
  framework7_react_default2 as default,
  f7,
  f7ready,
  theme,
  useStore
};
//# sourceMappingURL=framework7-react.js.map
